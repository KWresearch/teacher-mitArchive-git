1 

6.012 - Microelectronic Devices and Circuits, Fall 2009 - 10/5/09 posting 
CMOS Gate Delays, Power, and Scaling

GATE DELAYS 
In  the  last  lecture  (Lec.  15) we  calculated  the  gate  de-
lay for a symmetrical CMOS inverter with 
VTn = |VTp| ≡ VT, Co*  xn  = Co*  xp  ≡ Co*  x, and Kn = Kp, 
in  which  both  the  n- and  p-channel  devices  were  mini-
mum  gate  length  devices,  i.e.,  Ln  =  Lp  =  Lmin.  The  p-
channel  device  was  made  twice  as  wide  as  the  n-channel 
device  to  get  the  desired K  equality,  because we  assumed 
µe  = 2 µh. 
We found that the gate delay was given by: 
4 CL VDD 
τGD  ≈  Kn(VDD  - VT)2 
Replacing  CL  and  Kn,  to  write  this  in  terms  of  the  device
dimensions, we found after a bit of simple algebra: 
VDD 
12 n 
2 
τGD  ≈  µe  Lm  in  (VDD  - VT)2 

POWER 
There  is  zero  static  power  in  CMOS  so  the  only  con-
tribution is the dynamic power 
2 
D f 
Pave  =  CL VD
where  f  is  the  operating  frequency  and  CL  is  the  loading 
capacitance.  This  load  will  be  the  average  fan-out,  n,
times  the  input  capacitance  of  a  similar  CMOS  gate,  plus
any parasitic interconnect capacitance: 
CL  =  n Co*  x  (Lmin Wn  + Lmin Wp)  +  Cparasitic 

2 

D f 

=  3 n Co*  x Lmin Wn  +  Cparasitic 
Neglecting Cparasitic, we can write 
2 
Pave  =  3 n Co*  x Lmin Wn  VD
MAXIMUM POWER 
The maximum power dissipation will occur when  the 
gate  is  operated  at  its  maximum  frequency  (bit  rate), 
which is in turn proportional to 1/τGD.  Thus we can say 
1
2
Pave max  ∝  3 n Co* x Lmin Wn  VD D  τGD 
1  Wn 
=  4  Lmin  µe Co*  x VDD  (VDD  - VT)2 
1 =  4  Kn VDD  (VDD  - VT)2 
The  importance  of  keeping  VDD  small  is  quite  evident 
from  this  expression,  but  the  situation  is  not  black  and
white  because  making  VDD  small  makes  τGD  large;  the 
same  is  true  of  making  Kn  small.  The  whole  problem  of
what  to  reduce  how  while  maintaining  high  performance
and not frying the IC chips is a complex one and has led to 
the development of  rules  for  scaling dimensions  and  volt-
ages; we will discuss scaling rules after first looking at one
more  important  parameter,  the  maximum  average  power
dissipation per unit area. 
POWER DISSIPATION PER UNIT AREA 
In  many  situations  the  power  dissipation  per  unit
area  is  more  important  than  the  total  power  dissipation.
To  estimate  how  this  factor  varies with  the  device  dimen-
sions we make  the  assumption  that  the  density  of devices 

3 

VDD  (VDD  - VT)2


in  an  integrated  circuit  increases  inversely  with  the  gate 
area, WnLmin.  We have: 
µe Co* x

Pave max 
Pdensity max  ∝  WnLmin  ∝  4 Lm2 in 
SCALING RULES 
We in general want to simultaneously reduce gate de-
lays,  decrease  power  dissipation,  and  increase  packing
density, while not exceeding a certain power density.  The 
place  we  start  is  with  a  reduction  of  the  gate  length,  but
we quickly  find we must do more  than  that or we get  into
trouble. 
For  example,  as  the  gate  length  is  reduced,  the  oxide
thicknesses  and  the  junction  depths  (of  the  sources  and
drains)  must  be  reduced  proportionally  to  obtain  good
transistor  characteristics.  One  is  essentially maintaining  a
long,  thin  geometry  consistent  with  the  gradual  channel
approximation,  and  this  turns  out  to  be  just  what  is 
needed to get good saturation  (flat curves; small go) of the 
device  output  (iD  vs  vDS)  characteristics.  Thus,  if  we  re-
duce  the  minimum  gate  length,  Lmin,  by  a  factor  of  s,  we
will  also  want  to  reduce  the  gate  oxide,  tox,  by  the  same 
factor.  To  increase  the packing density  futher, we also  re-
duce the gate width, W, by the same factor: 
Lmin  →  Lmin/s 
W  →  W/s 
tox  →  tox/s 
With  these  changes  we  find  that  our  gate  delay,  average
power,  device  density,  and  power  density  change  as  fol-
lows: 
τGD  → τGD/s2 

4 

then we find: 

Pave  →  s Pave

Device Density  →  s2 Device Density

Pdensity max  →  s3 Pdensity max

Clearly  this  is  a  formula  for  disaster  because  the  power
density will  increase  dramatically  if we  only  scale  dimen-
sions.  We either have  to develop much better ways  to get
the heat out of an  IC  chip and package,  so we can  tolerate
a  higher  power  density,  or  we  have  to  change  more  than 
the  dimensions.  Packaging  and  heat  sinking  have  been
improved,  to  be  sure,  but  the  big  gain  comes  from  scaling
the  voltages  as  well  as  the  dimensions.  If  we  scale  the 
supply and threshold voltages as follows: 
VDD  →  VDD/s 
VT  →  VT/s 
τGD  → τGD/s 
Pave  →  Pave/s2 
Device Density  →  s2 Device Density 
Pdensity max  →  Pdensity max 
This  is clearly a much better situation.  At the same time  it 
must be noted  that  it  is not as easy  to  scale  the voltages as 
it might at  first seem and  it has  taken  longer  to do  so  than
it  has  to  reduce  dimensions  because  of  a  number  of  fac-
tors.  The  control  over  the  threshold  voltage  must  be  im-
proved  which  places  more  demands  on  the  process  line,
and  the  noise  margins  decrease  by  a  factor  1/s  so  noise
sources  on  the  chip  must  be  reduced.  Also,  supply  volt-
ages  are  not  totally  arbitrary  since  they  must  be  tied  to
standard  battery  cells,  which  come  in  increments  of 
roughly 1 Volt (they range from 1.1 to 0.9 V over their use-

ful  lifetime).  Early  bipolar  and MOSFET  logic used VDD's

of  5  V,  but  this  has  recently  been  reduced  to  3,  2,  and,

even, 1 V.

Scaling examples: 

5 

Intel Families 
486 
386 
1
2
0.75 
1.5	
5 
10 
30 
15 
3.3 
5 
1
-
3
3
450 
230 
840 
400 
50 
29 
92 
23 
880 
220 

Parameter

Scaling factor, s

Lmin  (µm)

wn  (µm)

tox  (nm)

VDD  (V)

VT  (V)

Fan out

K (µA/V2)

t (ps)

fmax  (MHz)

Pave/gate (µW)

Density

(kgates/cm2 @

20 W/cm2 max)

Sources:  Professsor Jesus del Alamo and Intel 

Pentium

3

0.5

3

9

2.2

-

3

600 
250 
100 
10 
2,000 

6 

Parameter 
Lmin  (µm) 
Scaling factor, s 
SRAM Cell 
Area (µm2) 
Die size (mm2) 
fmax  (MHz) 
tox  (nm) 
Metal layers 
Planarization 
Poly type 
Transistors 

Intel Pentium Families 
Pentium generations 
486 
0.35 
0.5 
0.8 
1.0 
2.3 
1.6 
1 
-
21 
44 
111 
-

170 
38 
20 
2 
SOG 
n 

295 
66 
10 
3 
CMP 
n, p 

163 
100 
8 
4 
CMP 
n, p 

91 
200 
6 
4 
CMP 
n, p 

CMOS 

BiCMOS  BiCMOS  BiCMOS 

Source:  Dr. Leon D. Yau, Intel, MIT VLSI Seminar, Cambridge, MA,
Oct. 8, 1996.  (This table is meant to illustrate the trend; see
the companion posting for data from 2000.) 

MIT OpenCourseWare
http://ocw.mit.edu 

6.012 Microelectronic Devices and Circuits 
Fall 2009 

For information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms . 

