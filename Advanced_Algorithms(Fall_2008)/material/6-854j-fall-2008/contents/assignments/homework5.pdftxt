MIT OpenCourseWare
http://ocw.mit.edu 

6.854J / 18.415J Advanced Algorithms 
Fall 2008
��

For information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms. 

18.415/6.854  Advanced Algorithms 
Problem  Set  5 

1.  Consider  t h e   l inear   programm ing   re laxa t ion   of  t h e   vertex  cover  problem  seen 
in   class. 

Min  C Wixi 
sub jec t   to :  

( a )   Argue  t h a t   any  basic  feasible so lu t ion  x  of  t h e  above l inear  program   mus t  
satisfy  xi  E  (0 ,  i ,1) for  a l l  vertices  i E V .   

Hint:  given  a  bfs x ,  consider  t h e  vector  y  defined  by  yi  = xi  if  xi  E (0 ,   I ) ,   

a n d   yi  = 0.5  otherwise.  

( b )   To   solve  t h e   linear  program   t o   op t ima l i ty ,   we  can   therefore  res tr ic t   	 our  
a t ten t ion   t o  solutions satisfying xi  E  { 0 , 0 . 5 , 1 ) .   For  t h i s  purpose ,  consider 
t h e  b ipa r t i te   g raph   ob ta ined   by  in troduc ing   two  vertices  say  ai  a n d   bi  for 
every  vertex  i ,  b o t h   of  weight  wi,  a n d   having  edges  ( a i ,  b j )   a n d   ( a j ,bi)  for 
every  edge  (i ,j )  of  t h e   original g raph .   Show  t h a t   t h e  m in imum  weight  of 
any  ver tex  cover  in  t h i s  b ipa r t i te   g raph   is exactly  equa l  t o  twice  t h e  value 
of  t h e  above  linear program .   Also,  how  can  you  ex t rac t   t h e  so lu t ion  of  t h e  
LP  from  t h e  ver tex   cover  in   t h e   b ipa r t i te   g raph   a n d   vice  versa? 
(c)  Show  t h a t   t h e  problem  of  finding a  m in imum  weight  ver tex   cover  in   a  bi- 
p a r t i t e  g raph  can  be solved by  a m in imum  c u t  compu ta t ion  o r  a max imum  
flow  compu ta t ion   in  a  re la ted   g raph .  

2 .   	 Consider  t h e  2-approximation  a lgor i thm  seen  in  class for t h e  generalized  Steiner 
t ree   problem  (we a re  given  a  se t  T of  pa irs   of  vertices  a n d   cost  on  t h e   edges of 
a  g raph ,  a n d   t h e  goal  is t o  find  a  subg raph   ( a  forest)  of  m in imum  cost  in  which 
every  pa ir   of  vertices  in  T is  connec ted) .  

( a )   Argue  t h a t   th i s  problem  is  a  generalization  of  t h e  m in imum  spann ing  t ree  
problem. 
i.  Does  t h e  a lgor i thm  seen  in  class produce  a  m in imum  spann ing  t ree   in  
t h a t   case?  If  so ,  prove  i t ;  if  n o t ,  give  a  counterexample. 
ii.  Is   t h e   value  ( C sys)  of  t h e   dua l   solution  y  cons truc ted   equa l   t o   t h e  
m in imum  spann ing  t ree  value?  If  so ,  prove  i t ;  if  n o t ,  give a  counterex- 
amp le .  

( b )   Argue  t h a t   th i s   problem  is  a  	 generalization  of  t h e   shortest  s - t  p a t h  
problem  (in an   undirected  graph  with  nonnegative  edge weights). 
i.  Does  t h e  algorithm seen  in  class produce  a  shortest  s - t in  t h a t   case? 
If  so, prove  i t ;  if  no t ,  give  a  counterexample. 
ii.  Is  t h e   value  ( C sys)  of  t h e   dua l   solution  y  constructed  equal  t o   t h e  
shor tes t   p a t h  value?  If  so, prove  i t ;  if  no t ,   give  a  counterexample. 

3.  	 We  would  like t o  design  an  approximation  algorithm for  t h e  following problem. 
We  are   given  an   undirected  graph   G  with  cost  c ,   for  every  edge  e ,   2  disjoint 
se ts  A  and  B of  vertices of  t h e  same size, and  we  would  like t o  find  a minimum 
cost  set  H of  edges  such  t h a t   in  every  connected  component  of  H, we  have  t h e  
same number of  vertices  of  A  and  B  (so for example a matching between  A  and  
B would  be   one  possible  solution, and   a  spanning  tree  would  be   ano the r ) .  
Show  t h a t   t h e   approach  used  t o   design  t h e   2-approximation  algorithm  seen 
in   class  for  t h e   generalized  Steiner  problem  can  be  applied  here  t o   get  a  2-
approximation  algorithm  as  well.  Do  not  reprove  everything,  bu t   s t a t e   and  
prove  everything  (in  t h e   algorithm  and /o r   in   t h e   proof)  t h a t   differs  from  t h e  
case  of  t h e  generalized  Steiner  tree   problem  seen  in  class. 

.  Consider  t h e  maximum weight matching problem in  a  (non-b ipar t i te)  graph  G = 
(V, E ) .  More precisely, given a  non-negative weight  Wij for each  edge  ( i ,  j) E  E, 
the   problem  is  t o  find  a  (no t   necessarily  perfect)  matching  of  maximum  t o t a l  
weight.  Consider the  following greedy  algorithm:  s t a r t  from a n  emp ty  matching 
and   repeatedly  add   an   edge  of  maximum  weight  among  all  edges  which  do  
not  meet  any  of  t h e   edges  chosen  previously.  S top   a s   soon  a s   t h e   matching 
is  maximal  (i.e.  no  o ther   edge  can  be  added ) .   Let  MG  deno te   the   greedy 
matching  and   ZG  i t s  cost.  You  are   asked  t o  show  t h a t   t h e   greedy  algorithm  is 
a  2-approximation  algorithm. 
Show t h a t   t h e  following linear  program gives  an  upper   bound  ZLP on  t h e  opti- 
mal  value  ZM  of  t h e  maximum weight  matching  problem. 

Min  x u i  

subject  to :  

From  t h e   greedy  matching  M G ,  construct  a  feasible  solution  u t o   t h e   above 
linear program  and   show  t h a t   i t s  value  is  2ZG .  Conclude  t h a t   ZG2 &ZM. 

