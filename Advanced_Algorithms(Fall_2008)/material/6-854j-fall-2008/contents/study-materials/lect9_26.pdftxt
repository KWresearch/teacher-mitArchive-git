MIT OpenCourseWare
http://ocw.mit.edu 

6.854J / 18.415J Advanced Algorithms 
Fall 2008
��

For information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms. 

18.415/6.854 Advanced Algorithms 

September  26,  2001 

Lecturer:   M iche l   X .   Goernans  

Scribe:   D e n n i s   Q u a n  

Lecture  5 

1  Th e  Ellipsoid  Algorithm 

Definition 1  L e t   a  be  a po in t   i n  Rn  and  A  be  a n  n  x  n positive   de f in i te   m a t r i x   ( i . e . ,  A  h a s  positive  
e igenva lue s ) .   T h e   ellipsoid   E ( a ,  A)  w i t h   c e n t e r  a  i s   t h e   se t   of  po in t s   {x  : ( z  - ~ ) ~ A - l ( x- a )  < 1). 
The re fo re ,   t h e   u n i t   sphere   i s  E ( 0 , I ) ,  where   I i s   t h e   i d e n t i t y  m a t r i x .  

An  ellipsoid can be  seen as the   result  of  applying a  linear transformation on  a  unit  sphere.  In  other 
words, the re  is  a  linear  transformation T t h a t   maps E ( a ,  A)  t o  th e  unit  sphere E ( 0 ,  I).I t   is known 
t h a t   for  every positive  definite ma t r ix  A ,  the re  is  a  n  x  n  matrix  B such  th a t :  

Therefore, 

Using  B ,  t h e  transformation T can be  seen  as mapping  points  z t o   ( B - ' ) ~  (x  - a ) .  
The  Ellipsoid Algorithm  solves the  problem  of  finding  a n  x  subject  t o  C x  5 d by  looking a t  succes- 
sively smaller ellipsoids Ek t h a t   contain  the  polyhedron P := {x  : C x  < d ) .   S ta r t ing  with  a n  initial 
ellipsoid  t h a t   contains  P, we  check  t o   see  if  i ts   center  a  is  in  P .   If  i t   is,  we  a re   done.  If  no t ,   we 
look a t  th e  inequalities  defining P, and  choose one t h a t  is violated by  a .   This gives us  a hyperplane 
through a  such t h a t  P is completely on one side of  this hyperplane.  Then ,  we  t ry  t o  find a n  ellipsoid 
Ek+1t h a t   contains the   half-ellipsoid   defined by  Ek and   h. 
The  general  step of  finding th e  next  ellipsoid Ek+1from Ek is given below.  First we  assume t h a t  Ek 
is  a  unit  sphere  centered  a t  th e   origin,  and   the   hyperplane  h  defines  th e   half  space  -eTx  < 0  t h a t  
contains P .  Here,  by  ei we  mean  th e  vector  whose  i t h  component  is  1 and  whose other  components 
a re  0.  We  will  show later  t h a t   i t   is  easy t o  t rans la te  t h e  general case t o  this  case. 

Therefore, we  need  a n  ellipsoid t h a t   contains 

To find  a n  ellipsoid t h a t   contains Ek ,we  showed last  time th a t :  

Therefore, we  can  define 

(eleT  = matrix  with  1 in  i ts   top   left  cell, 0 elsewhere.)  We  also  showed t h a t  

For  t h e  more  general  case  t h a t   we  want  t o  find  a n   ellipsoid t h a t   contains  E ( 0 ,  I)n {x  : dTx  5 0) 
(we let  lldll  = 1; this  can  be  done  because  the   other  side  of  the   inequality  is  0 ) ,  i t   is  easy  t o  verify 
t h a t  we  can take Ek+1= E(- A d ,  F ) ,  where F = ,*(In - 1   - I d d T ) ,
n+l 
and  th e  ra t io  of  t h e  volumes 
is  5 exp (- &). 
Now  we  deal  with  the   case  where  El, is  not  t h e   unit  sphere.  We  take  advantage  of  th e   fact  t h a t  
linear  transformations preserve  ratios of  volumes. 

Let  ak  be th e  center of  E k ,  and  cTx 5 cTaLbe t h e  halfspace through ak  t h a t   contains P .  Therefore, 
t h e   half-ellipsoid  t h a t   we  are  trying  t o   contain  is  E ( a k ,A)   n {x  :  cTx  5  cT a k ) .   Let's  see  what 
happens  t o   this  half-ellipsoid  after  th e   transformation  T  defined  by  T ( x )  = ( B - ' ) ~ ( x  - a ) .   This 
transformation transforms  Ek = E ( a k ,A)  t o  E ( 0 ,  I).Also, 

where  d  is  given  by  th e  following equation. 

Let  b  = B T d  = e.This  implies:
AC 

To  summarize, here  is  t h e  Ellipsoid Algorithm: 
1. S t a r t  with  k = 0, Eo = E ( a o ,A o ) > P, P = {x  : C x  5 d } .  
2 .   While  ak  &I P do: 
Let  cTx 5 d  be  a n  inequality t h a t   is valid  for  all x  E P bu t   cTak  > d. 
Let  b  =  Ak  c 
,/Z' 
Let  ak+l  = ak  - &b. 
Claim  1 *5 exp (-&) 
Let  Ak+l = & ( A ~   - &bbT). 
Vo l   Ek  1

After  k iterations,  V o l (E k )  < Vo l (E a )exp (-&). If  P  is  nonempty  then   th e   Ellipsoid  Algorithm 
should  find x  E P  in  a t  most  2n in -steps. 

Wh a t   if  P  has  volume  0  bu t   is  nonempty?  In  this  case,  we  create  an   inflated  polytope  around  P 
such t h a t   this  new  polytope  is  empty iff  P is  empty. 

Theorem 2  L e t   P  :=  {x  : Ax  5  b}  and   e  be  t h e   vec to r   of  all  o n e s .   A s s u m e   t h a t   A  h a s   full 
c o l um n   rank   (ce r ta in ly   t r u e   if  Ax  5 b  c o n t a i n s   t h e   inequa l i t ie s   -1%5 0).  T h e n  P  i s   n o n e m p t y   iff 
P'  = {1: : Ax  5 b + h e ,  -2L  5 x j  I2L for   a11  j }  i s   n o n em p t y .   ( L  i s   t h e   s i ze   of  t h e   LP  P ,   as  we  
defined  i n  t h e  previous   lecture ,   bu t   here   we  can   remove   t h e  c,,, 
t e rm . )  

This  theorem  allows  us  t o   choose  Eo  t o   be  a  ball  centered  a t   th e   origin  containing  t h e   cube 
[-2L,  2L ]n .  In  th is  way,  if  the re  exists a  ? such  t h a t   A2  5 b  then  

Indeed,  for  a  x  in  th is   little cube, we  have  (AX)j  5  (A?) j  + (maxi,j a i j ) n&   5 bj + $. 
The   time  for  finding  a n  x  in  P'  is  in  O ( n   n L ) ,  because  th e   ra t io  of  th e   volumes of  [-2L,  2L] 
t o  
[- & , $1 
is  8L n ,  and   previously  we  showed  t h a t   finding  x  in  P  was  O ( n  ln -). 
Thus ,   this 
process  is polynomial  in  L .  
Proof  of  Theorem 2:  We  first  prove  th e   forward  implication.  If  Az   5  b  is  nonempty  then   we 
can  consider  a  vertex  x  in  P  (and  the re  exists a  vertex  since A has  full column  rank). This  implies 
t h a t   s will  be  defined by  A s s   = bs,  where  As  is  a  submatrix  of  A  (by  problem  1 in  Problem  Set 
1 ) .  Therefore, by  a  theorem  from  t h e  previous  lecture, 

with  lpil  < 2L  and   15 q  < 2L.  Therefore, 
Ixj I  I I ~ j l< zL -

This proves th e  forward  implication. 
To show t h e  converse, {x : Ax  5 b)  = 8 implies, by  Farkas' Lemma, the re  exists a y such t h a t  y  > 0, 
ATy = 0 ,  and  bTy  = -1.  We  can  choose a vertex of  ATy = 0, bTy = -1,  y  2 0.  We  can also phrase 
this  as: 

By  using  Cramer's rule  (like we  did  in  t h e   last  lecture), we  can  bound  t h e   components  of  a  basic 
feasible solution y  in  the   following way: 

( t ,) , where det,,, 
with  0 5 s ,  r i   5 det,,, 
(D )  denotes  th e  maximum  subdeterminant  in  abso-
lu te   value  of  any  submatrix  of  D.  By  expanding  th e   determinant  along  th e   last  row,  we  see  t h a t  
( tz  ) 5 mbmaxdet,,, 
(where  this  last  d e tm ax refers  t o  th e   matrix  A )   Using  the   fact 
det,,, 
we  get  t h a t   0 5 s ,  ri  < &2L  5 f i 2 L .  
t h a t   2L > 2,2"  det,,, 
b,,,, 

Therefore, 

th e   last  inequality  following  from  th e   fact  t h a t   rn2  < 2m+1  for  any  integer  rn   > 1.  Therefore,  by 
Farkas' Lemma  again, this y  shows t h a t  the re  exists no x  where Ax  5 b + $e,  i.e., P' is empty. 
There is also th e  problem  of  when x  is found within P', x may not  necessarily be in P. One solution 
is  t o   round  th e   coefficients  of  th e   inequalities  t o   rational  numbers  and   "repair"  these  inequalities 
t o  make  x  fit  in  P.  This  is  called  simultaneous Diophantine  approximations,  and  will  be  discussed 
la te r  on. 

Here we  solve this  problem  using  another  method:  We  give  a general  method  for  finding  a  feasible 
solution  of  a  linear  program,  assuming  t h a t   we  have  a  procedure  t h a t   checks  whether  or  not  th e  
linear  program  is feasible. 
Assume, we  want  t o  find a solution of  Ax  5 b.  The  inequalities  in this linear program  can be  written 
as aTx  5 bi  for  i = 1 , ..  ,rn.  We  use  t h e  following algorithm: 

2.  For  i t 1 t o  m  do 

If  the   set  of  solutions  of 

is  nonempty, then   I t I U {i). 

3 .   Finally,  solve x  in  a r x  = bi  for  i E I with  Gaussian  elimination. 

V j = i + l , . - .  
V j  E I U { i )  

The   correctness follows  from  the   fact  t h a t   if,  in  s tep   2,  the   system  of  inequalities  has  no  solution 
then   th e   inequality  i can  be  discarded  since i t   is  redundant  (removing  i t   does  not  affect  t h e  set  of 
solutions). 

2  Applying  the Ellipsoid  Algorithm to  Linear  Programming 

The  algorithm  we  described  today  checks whether  a  set  of  inequalities  a re  feasible, and   if  they  a re ,  
finds  a  feasible  solution.  However, our  initial  goal  was  t o  find  a  feasible  solution  t h a t   minimizes  a 
given  linear  objective function.  Here, we  give  a  general  method  for  solving linear  program,  given  a 
procedure  t h a t  h d s  a  feasible solution  t o  a set  of  inequalities. 

To  solve  the  L P :  m incTx  subject  t o  Ax  = b,  x  2 0: 

Step  1:  Check  if  {x  : Ax  = b, x  2 0)  is nonempty;  if  i t   is  empty, then  th e  LP   is  infeasible; s top .  
Step 2:  Consider  th e  dual LP :  maxbTy subject  t o  ATy 5 c. 
Check  if  the re  exists a  y such t h a t  ATy 5 c.  If  there  does not  exist  such a  y ,  then   t h e  original 
LP   is unbounded  by  strong duality. 
Step 3:  If  th e   dual LP   is  feasible, find  a  solution  (x ,  y)  where  Ax  = b, x  2 0, ATy 5 c ,  cTx = bTy. 
By  strong duality, cTx = bTy   will  be  the   optimal solution. 

