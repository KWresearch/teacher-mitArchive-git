MIT OpenCourseWare
http://ocw.mit.edu 

6.854J / 18.415J Advanced Algorithms 
Fall 2008
��

For information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms. 

18.415/6.854  Advanced Algorithms 

September  19, 2001 

Lecturer:  Michel  X .   Goernans 

Lecture  3 

Scribe:  Abhinau  Kumar, Nodari  Sitchinava 

1  Proof  of  Farkas' Lemma 

Theorem 1  [Farkas' Lemma] Either 
1 .   Ax = b,  z > 0  has  a  solution,  or 
2.  ATy 2 0  and  yTb < 0  has  a solution, 

but  not  both. 

The   reason  t h a t   1 and  2 cannot  bo th   occur  is  t h a t   (yTA )x  = yTb, so  if  yTA  is  non-negative  and  x  

is non-negative,  then  yTb can't be  negative. 


To prove Farkas' Lemma  we  need  the   Projection Theorem:  

Theorem 2  Let  K  be  a  closed,  convex  and  non-empty  set  in  R n ,   and  b  E  R n ,   b  4 K .   Define 
projection  p  of  b  onto  K  to  be  x  E  K  such  that  lib  - xll  is  minimized.  Then  for  all  z  E  K  : 
( b  - ~ ) ~ ( z- P) < 0 -

Proof  of  Farkas'  Lemma:  Assume  Ax  = b ,x   2  0  is  not  feasible.  Let  K  = {Ax  : x  2  0). 
Therefore, b  K .  Let  p = Aw, w 2 0  be  the   projection  of  b  onto K.  Then we  know  t h a t  
( b  - A W ) ~ ( A X  - A w )  < 0  for  all x  2 0 

Define y = p - b  = Aw  - b.  Therefore, 

2 O  for  all  x  2 O 
(x  - w ) ~ A ~ ~
Let  ei  be  the  n  x  1 vector  t h a t   has  1 in i ts   i ' th  component  and  0  everywhere else.  Take x = w + ei. 
Therefore, x - w  = e i ,  and  by  (2 ) ,  

~  2 0  for  all i
'  2 ~0 
( A ~ ~ ) ~  
~ 
Thus  since each  element  of  ATy is non-negative,  ATy 2 0. 

e

Now,  yTb = yT (p  - y) = yTp - yTy .  jFrom  (1) if  x = 0, 

and 

yTp - Y T Y   I-YTY   < 0 
The  last  inequality comes from  th e  fact  t h a t   y = b - p ,  b  $ K ,  so b - p  # 0 + yTy > 0 

Theorem 3  [Another variant  of Farkas' Lemma] Either 

1 .   	Ax  5 b  has  a  solution,  or 
2. 	 ATy = 0, bTy  < 0 ,  y 2 0  has  a  solution, 
but  not  both  (for then we  would  have  0 = yTAx 5 yTb < 0.) 

2 

Duality 

Consider  an  LP  P in  t h e  s tanda rd  form  (we call  this LP   the  primal).  We  can write  a  "dual"  LP  D 
as follows: 

Primal  P: 

x* = min  cTx 
sub j  t o  
Ax  = b 
2 2 0  

Weak  duality  s ta tes  th e  following. 

Dual  D :  

W *   = max  bTy  
sub j  t o  
ATY5 c 

Theorem 4  [Weak Duality] Let  x  be  feasible  in  P ,   and  let y  be  feasible  in D .   Then 

Proof  of Theorem 4: 

since x  and  c - ATy bo th   have  nonnegative coordinates. 

The  following th ree  cases a re  possible for  an   L P :  
Primal 
Dual  

1')infeasible  (w* = -oo) 

1)infeasible  (x* = +oo) 
2 )   unbounded  (x* = -m) 
2')  unbounded  (w* = +oo) 

3') finite  (w* = finite  real  number)  

3 )  finite  (x* = finite  real  number) 

Then  2  j  1' because  if  th e   dual were  feasible,  any  value  bTy   for  the   dual would  be  a  lower  bound 
for  th e   primal,  which  could  therefore not  be  unbounded.  Similarly  2' j  1. Note  t h a t   we  can  have 
1 and   1' occurring simultaneously. 

Theorem 5  [Strong duality]  If  P o r  D  i s  feasible  t h e n  x* = w*. 

Proof of Theorem 2:  It suffices t o  t r e a t  t h e  case when t h e  primal  is feasible, because  the  primal 
and  dual are interchangeable.  So assume  P  is feasible.  If  P  is unbounded  then  weak  duality  implies 
t h a t   D  is  infeasible, and  then  x* = w*  = -w .   So from  now  on  assume t h a t  t h e  primal  is  finite. 

Claim 6  T h e r e   ex i s t s   a  s o l u t i o n   of  dual  of  value   a t   least   x*,  i.e., 

3 y : ~ ~ ~ < c , b ~ ~ > x *  

Proof  of  Claim 3:  We  wish  t o  prove  t h a t   the re  is  a  y  satisfying 

Assume the   claim  is wrong.  Then  t h e  variant  of  Farkas' Lemma  implies t h a t   t h e  LP  

has  a  solution.  T h a t  is, the re  exist  nonnegative  x ,  X  with 

Case  1:  X  > 0.  ThenA(:)  = b ,  
e T ( i )  < z* .  T h i s c o n t r a d i c t s t h em i n im a l i t y o f ~ * f o r t h e p r im a l ,  
hence this  case cannot  occur. 
Case  2:  X  = 0.  Then  Ax  = 0,  cTx < 0.  Take any feasible solution  2  for P.  Then for every p  2 0, 
2 + px  is  feasible for P, since 

But  cT (2  + +x )  = cT2  + +cTx + -w  as p  -+W .   This  contradicts  the   assumption  t h a t   the  
primal  has  finite solution. 

The   above  claim  shows t h a t   if  P or  D  is  finite  then   the   other  is  too ,   and   th e   optimums  a re  equal 
(x* > w*  is  weak  duality  and   th e   claim  shows w*  > x*.)  This  concludes  th e   proof  of  the   strong 
duality  theorem. 

3  Complementary Slackness 

Consider  the   following primal  LP. 

We  write  th e   dual a s  follows: 

min  cTx 
A z   =  b 
z  2  0 

max  bTy 
~ ~ y + s=  c 
0,  y E R m , s E R n  
s 

Theorem 7  L e t   x  be  fea s ib le   f o r   t h e  p r i m a l ,   a n d   y  be  fea s ib le   f o r   t h e   d u a l .   T h e n  x  i s   o p t i m a l   f o r  
P  a n d   y  i s  o p t i m a l   f o r   D  i f   a n d   o n l y   i f   x j s j  = 0 f o r   a l l   j .  

Proof:  We  have 

When  bo th   x  and  y  a re  optimal, the   above difference must  be  zero,  and  conversely, if  t h e  difference 
is  zero,  bo th   must  be  optimal  by  weak  duality.  But  since  x ,  s a re  nonnegative,  xT s  is  zero  if  and  
only  if  x j sj  = 0  for  all j  . 
. 
So, t o  prove  t h a t   a  solution  t o  an  L P  is  optimal, all we  need  t o  do  is  t o  give an   x  and   a  (y , s )  and  
show t h a t  bo th   are feasible and  the   complementary slackness condition is  satisfied. 

4  Size of  a  linear  program 

Let's think  about  how  we  encode  th e   LP. We  can use  binary  encoding  t o  give  th e   entries  of  A, b, c, 
t h a t   defines t h e  L P  in  s tanda rd  form.  For  a n  integer  k,  it  takes s i z e (k )  = 1+ rlog,(lkl+  1)1 bits t o  
s i z e ( L P )  = xs i z e ( a i j )  + xs ize (c j )  + xsize(bi) 
encode  I c .   So, 
i , j  
i 
j 
A  polynomial-time  algorithm for linear  programming is a n  algorithm whose worst-case running  time 
is bounded  by  a  polynomial  in  the   size of  th e   input  LP. 

