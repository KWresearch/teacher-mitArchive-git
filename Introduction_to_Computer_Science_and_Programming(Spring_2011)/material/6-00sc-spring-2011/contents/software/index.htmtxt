
















[MIT_OpenCourseWare,_Massachusetts_Institute_of_Technology]
                              [Submit ../../common/ [Click_to_visit_our
Subscribe to the [Enter Email images/               Facebook_page.][Click
OCW Newsletter   ]            button_subscribe.png] to_visit_our_Twitter
                                                    feed.]
HelpÂ Â Â |Â Â Â Contact_Us
Â 
    * [Click_for_site_home_page.]
    * Courses
      ***** Find courses by: *****
          o Topic
          o MIT_Course_Number
          o Department
      ***** Collections *****
          o Audio/Video_Lectures
          o New_Courses
          o Most_Visited_Courses
          o OCW_Scholar_Courses
          o Supplemental_Resources
      Â 
      ***** Cross-Disciplinary Topic Lists *****
          o Energy
          o Entrepreneurship
          o Environment
          o Life_Sciences
          o Transportation
      Â 
      Â 
      ***** Translated Courses *****
          o ç¹é«å­_/_Traditional_Chinese
          o ç®ä½å­_/_Simplified_Chinese
          o EspaÃ±ol_/_Spanish
          o PortuguÃªs_/_Portuguese
          o à¸ à¸²à¸©à¸²à¹à¸à¸µà¸¢à¸_/_Thai
          o ÙØ§Ø±Ø³Û_/_Persian
          o TÃ¼rkÃ§e_/_Turkish
          o (ë¹ëì¤)íêµ­_/_Korean
          o More...
    * About
          o About_MIT_OpenCourseWare
          o Site_Stats
          o OCW_Stories
          o OpenCourseWare_Consortium
          o Media_Coverage
          o Newsletter
          o Press_Releases
          o OCW's_Next_Decade
    * Donate
          o Make_a_Donation
          o Why_Donate?
          o Become_a_Course_Champion
          o Our_Supporters
          o Other_Ways_to_Contribute
          o Shop_OCW
          o Become_a_Corporate_Sponsor
    * Featured Sites
          o Highlights_for_High_School
          o edX
[Search              ] [Submit ../../common/images/button_search.png] Advanced
                                                                      Search
Home Â» Courses Â» Electrical_Engineering_and_Computer_Science Â» Introduction
to_Computer_Science_and_Programming Â» Software
******  Software  ******
    * Course_Home
    * Syllabus
    * Software
    * References
    * [Expand_Menu] Unit_1
          o Introduction_to_6.00
          o Core_Elements_of_a_Program
          o Problem_Solving
          o Machine_Interpretation_of_a_Program
          o Objects_in_Python
          o Recursion
          o Debugging
          o Efficiency_and_Order_of_Growth
          o Memory_and_Search_Methods
          o Quiz_1
    * [Expand_Menu] Unit_2
          o Hashing_and_Classes
          o OOP_and_Inheritance
          o Introduction_to_Simulation_and_Random_Walks
          o Some_Basic_Probability_and_Plotting_Data
          o Sampling_and_Monte_Carlo_Simulation
          o Statistical_Thinking
          o Using_Randomness_to_Solve_Non-random_Problems
          o Curve_Fitting
          o Optimization_Problems_and_Algorithms
          o More_Optimization_and_Clustering
          o Quiz_2
    * [Expand_Menu] Unit_3
          o More_Clustering
          o Using_Graphs_to_Model_Problems,_Part_1
          o Using_Graphs_to_Model_Problems,_Part_2
          o Dynamic_Programming
          o Avoiding_Statistical_Fallacies
          o Queuing_Network_Models
          o What_Do_Computer_Scientists_Do?
          o Final_Exam
[OCW Scholar]
Â« Previous | Next Â»
In 6.00, we will use the Python_programming_language. You'll also need an
editor and/or development environment for writing and debugging your programs.
In 6.00, we will be using IDLE, a programming environment specially designed
for Python programming and included with the Python distribution. These
programs are available for installation on your personal computers (see below).
***** Why Python? *****
A programming language is the tool we use to construct a sequence of
instructions that will tell the computer what we want it to do. There are
hundreds of programming languages in the world. Over the course of my career,
I've taught programming classes using at least at least six different
languages.
There is no best language (though I could nominate some candidates for worst).
Different languages are better or worse for different kinds of applications.
MATLAB, for example, is a great language for manipulating vectors and matrices.
C is a good language for writing the programs that control data networks.
In this course, we will use Python. Python is a relatively recent addition to
the universe of languages, and is still growing in popularity. I want to
emphasize that this course is not about Python. You will certainly learn
Python, and that's a good thing. What is much more important, however, is that
you will learn how to write programs that solve problems, given a set of basic
primitives, and ways of combining them into more complex elements, that you can
then abstract into primitives. This skill can be transferred to many languages.
***** Setting Up Python *****
You can install the 6.00 software on your personal computer if your operating
system is GNU/Linux, Windows (7/XP), or MacOS X. In all cases, you will need
Python_version_2.5.4 (any 2.5.x or 2.6.x version of Python will work, but 3.0
versions are NOT compatible). Below are direct links to the most common Python
installers:
Windows:
Download and install: Windows_Installer
Mac OS X:
Download and install: Mac_OS_X_Installer
Warning: On the Python homepage, the latest version available for download is
actually 3.0. Do not install this! This version is not backwards compatible
with the code that you'll be writing in this course (for example, you have to
type print("test") instead of print "test"). Instead, be sure to download the
version listed above.
***** Using IDLE *****
IDLE is the standard Python development environment. Its name is an acronym of
"Integrated DeveLopment Environment". It works well on both Unix and Windows
platforms.
It has a Python shell window, which gives you access to the Python interactive
mode. It also has a file editor that lets you create and edit existing Python
source files.
During the following discussion of IDLE's features, instead of passively
reading along, you should start IDLE and try to replicate the actions.
You can type Python code directly into this shell, at the '>>>' prompt.
Whenever you enter a complete code fragment, it will be executed. For instance,
typing:
>>> print "hello world"
and pressing Enter will cause the following to be displayed:
hello world
IDLE can also be used as a calculator:
>>> 4+4
8
Addition, subtraction, and multiplication operators are built into the Python
language. This means you can use them right away. If you want to use a square
root in your calculation, you need to import the math module. Do not worry
about what it means right now; we will cover this later during the course.
Below is an example of square root calculation:
>>> import math
>>> math.sqrt(16)
4.0
Math module allows you to do a number of useful operations:
>>> import math
>>> math.pow(3, 2)
9.0
>>> math.cos( 0 )
1.0
Note that you only need to execute the import command once after you start
IDLE.
Exercises
For additional practice, try using IDLE to calculate:
   1. 23.0 to the 5th power
   2. Positive root of the following equation:
      34*x^2 + 68*x - 510
      Recall:
      a*x^2 + b*x + c
      x1 = ( - b + sqrt ( b*b - 4*a*c ) ) / ( 2*a )
Â 
Â« Previous | Next Â»
*** Courses ***
    * Find_by_Topic
    * Find_by_Course_Number
    * Find_by_Department
    * Audio/Video_Courses
    * OCW_Scholar_Courses
    * Most_Visited_Courses
    * New_Courses
    * Translated_Courses
    * Supplemental_Resources
*** About ***
    * About_OpenCourseWare
    * Site_Stats
    * OCW_Stories
    * OCW_Consortium
    * Media_Coverage
    * Newsletter
    * Press_Releases
    * OCW's_Next_Decade
*** Donate ***
    * Make_a_Donation
    * Why_Donate?
    * Become_a_Course_Champion
    * Our_Supporters
    * Other_Ways_to_Contribute
    * Shop_OCW
    * Become_a_Corporate_Sponsor
*** Featured Sites ***
    * Highlights_for_High_School
    * edX
*** Tools ***
    * Help_&amp;_FAQs
    * Contact_Us
    * Advanced_Search
    * Site_Map
    * Privacy_&amp;_Terms_of_Use
*** About MIT OpenCourseWare ***
MIT OpenCourseWare makes the materials used in the teaching of almost all of
MIT's subjects available on the Web, free of charge. With more than 2,000
courses available, OCW is delivering on the promise of open sharing of
knowledge.
[Massachusetts_Institute_of_Technology_logo_and_name.] [OpenCourseWare
Consortium_logo.] [Creative_Commons_logo_with_terms_BY-NC-SA.]
Â© 2001â2013
Massachusetts Institute of Technology
Your use of the MIT OpenCourseWare site and materials is subject to our
Creative_Commons_License and other terms_of_use.
Â 
