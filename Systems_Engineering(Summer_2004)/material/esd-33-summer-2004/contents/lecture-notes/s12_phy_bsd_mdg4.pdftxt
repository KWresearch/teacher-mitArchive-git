ESD.33 -- Systems Engineering

Session #12
Physics Based Modeling

Dan Frey

Plan for the Session
• Q&A on Assignment #6
• Distributed Object-Based Modeling in 
Design Simulation Marketplace
• On the Role and Use of Mathematical 
Models in Engineering Design
• Next steps

Assignment #6

1) Short answers
2) Regression
3) DOE

Fractional Factorial Experiments
Three Levels
The design below is also fractional factorial design.
Taguchi OA9(34)
Plackett Burman (P-B)3,9
Control Factors
B
C
1
1
2
2
3
3
1
2
3
2
3
1
3
1
2
1
2
3

requires only
k(p-1)+1=9
experiments

But it is only Resolution III
and also has complex 
confounding patterns.

A
1
1
1
2
2
2
3
3
3

D
1
2
3
3
1
2
2
3
1

Factor Effect Plots 

Full
Factorial
32

+

0
A

F actor E ffe cts on M e ans

A

A2

A1

B1

A3

B2

B3

C1

C2 C3

D1

D2

Weight Posit ion

Stabilizer

Nose Length

Wing Sweep

D3

Fractional
Factorial
L9

+

B 0

-

-

20.0

15.0

10.0

5.0

0.0

Treatment Effects Model (Two Factors)
If it is an “additive model”, we assume there are no interactions
…
i
a
,2 ,1
 ,
=
⎧
⎪
…
j
b
,2 ,1
 ,
=
⎨
⎪
…
k
n
,2 ,1
 ,
=
⎩

(
)
τββτµ
++=
+
i
j

ij

0

+

ε
ijk

y

ij

F actor E ffe cts on M e ans

20.0

15.0

10.0

5.0

0.0

A2

A1

B1

A3

Weight Posit ion
0=∑ iτ

B2

Stabilizer

B3

C1

C2 C3

D1

D2

µ

D3

Nose Length

Wing Sweep

What is a Confidence Interval?

• I throw airplane [A1 B1 C1 D1] 9 times

19 14 16 20

13 23 21 22 19

x
• My estimate of µis   =18.55
• My estimate of σis s=3.50
• I have 9 samples n=9

 %95
conf.
 
int.

x
±=

96.1

s
n

Breakdown of Sum Squares
“Grand Total 
a
b
n
∑ ∑ ∑
Sum of Squares”
i
j
k
1
1
1
=
=
=

ijky

2

SS due to mean
2
...yN=

SS

T

=

a
b
n
∑ ∑ ∑
k
j
i
1
1
1
=
=
=

(

y

ijk

−

“Total Sum of 
Squares”
y
... )
2

ESS

SS

A

=

bn

a
∑
i
1
=

(

y

i

..

−

2

y
...

)

SS

AB

=

n

a
b
∑ ∑
i
j
1
1
=
=

(

y

ij

.

−

y

i

..

−

y
.

j

.

−

2

y
...

)

SS

B

=

an

b
∑
j
1
=

(

y
.

j

.

−

2

y
...

)

Breakdown of DOF

number of y values

1
due to the mean

for factor A

total sum of squares

for error

for factor B

for interaction AB

Plan for the Session
• Q&A on Assignment #6
• Distributed Object-Based Modeling in 
Design Simulation Marketplace
• On the Role and Use of Mathematical 
Models in Engineering Design
• Next steps

Isoperformance Approaches
(a ) de te rm inistic  I so pe rformance  Approa ch  

Jz,req  

Dete rminis t ic  
Sys tem 
Mode l  

Isop er forma nce  
A lgor ithms  

(b)  sto cha stic  I so pe rformance  Approa ch  

Des ign A 
Des ign C 

J z, req 

Des ign B 
Des ig n Space  

90% 

Des ign B 
J z, req 

Des ign A 
80% 
 

50% 

Empirical  
Isoperformance
Sys tem 
Algorithms
Mode l  

Jz,req   P (Jz )  

Empirical 
Isop er forma nce  
System Model
A lgor ithms  

Ind      x          y           Jz 
1        0.75   9.21   17.34 
2        0.91   3.11    8.343  
3        ......    ......      ......
                  
Stat is t ical Data  

Qc     
0.025 [-]             

Ud     
90 [gcm2]         

Tgs    
0.4 [sec]           

K

r ISO 

5000 [Nm/rad]        

Pareto-Optimal Designs p*
iso
Design A
Best “mid-range”
compromise

 
]
m
µ
[
 
S
M
R

Us     
2.7 [gcm]           

Ru     
3850 [RPM] 

Design B
Smallest FSM
control gain

6

4

2

0

Cumulative RSS for LOS

100

Frequency [Hz]

102

Kzpet 
18E+08 [N/m]           

Kcf    
1E+06 [-]             

tsp   
0.005 [m]             

Mgs    
20 [mag]           

 
]
z
H
/
2
m
µ
[
 
D
S
P

100

10-5

Design C
Smallest 
performance
uncertainty

100
Cost and Risk Objectives
Performance
Jz,1         Jz,2           Jc,1            Jc,2
Jr,1
+/- 14.3218 % 
20.0000
0.4668
0.6324
5.2013
+/- 8.7883 %
0.0017
0.8960
20.0012  5.0253
+/- 5.3067 %    
1.0000
1.5627
4.8559
20.0001

102

Frequency [Hz]

A: min(Jc 1)
B: min(Jc 2)
C: min(Jr1)

Design A
Design B
Design C

DOME as an SE Case Study

• What were the key implementation 
challenges?
• How were they resolved?
• What role did standards play?
• What do you think of the engineering 
solution?
• How will it be rolled out?

DOME as an SE Tool

• DOME can support many SE tools
– Design Structure Matrix
– Utility theory
– Acceptability 
– Analytical Hierarchy Process
• And DOME may also support a new social 
dynamic of model building

Distributed Simulation Service 
Marketplace

“it is generally understood that in practice 
individual participants perform their work in 
an informal marketplace, bartering service 
exchange relationships to get what they 
need to resolve their part of the problem”

Plan for the Session
• Q&A on Assignment #6
• Distributed Object-Based Modeling in 
Design Simulation Marketplace
• On the Role and Use of Mathematical 
Models in Engineering Design
• Next steps

Definitions
• Mathematical (or Symbolic) Model – A 
construct that comprises an abstract 
representation of a real system.  Models are 
constructed by people, often for the purpose of 
system design.
• Computational Simulation – A mathematical 
model implemented in a digital computer
• Law of Nature – A fundamental understanding 
of causality in a physical system often expressed 
in mathematical form or as an algorithm 
executable by a computer

Classification of Models

advantages / disadvantages?

advantages / disadvantages? 

Real World

Physical
or Iconic

Analog

Mathematical
or Symbolic

x
− ⋅

h
d
t
d

=

h
3
−
⋅
12µ

p
d
x
d

Mathematical Models Are
Rapidly Growing in Power
• Moore’s Law – density ↑ 2X / 18 months
• Better algorithms being developed

Mathematical Models
are Becoming Easier to Use
• A wide range of models are available
– Finite Element Analysis
– Computational fluid dynamics
– Electronics simulations
– Kinematics
– Discrete event simulation
• Sophisticated visualization & animation make 
results easier to communicate
• Many tedious tasks are becoming automate 
(e.g., mesh generation and refinement)

Mathematical Models
are Becoming Better Interconnected
• Product Data Management Solutions
• Distributed Object-based Modeling Environment
– Enables a decentralized design simulation marketplace
– Intends to do for models what HTML does for text

Why Models Can Go Wrong

• Right model → Inaccurate answer 
– Rounding error 
– Truncation error
– Ill conditioning
• Right model → Misleading answer
– Numerical stability, chaotic systems
• Right model → No answer whatsoever
– Failure to converge
– Algorithmic complexity
• Not-so right model → Inaccurate answer
– Unmodeled effects
– Bugs in coding the model

Computational Complexity and
Big-O Notation
• n is the number of variables in the problem
• O(f(n)) means that as n →∞, the execution time 
t is at most cf(n) for some constant c. 
• Since only the growth rate matters, we can 
ignore the multiplicative constants and the lower 
order terms, e.g.,
  3nlog(n)+6n+2.7 is O(nlog(n))
  n3 + 10000000000n is O(n3)
  3n is O(3n)

Effect of Multiplicative Constant

No matter how big 
the constant, as the 
problem grows, the 
O() determines 
which runs fastest.

f(n)=n2

f(n)=20n

f(n)=10n

e
m
i
t
 
n
u
R

800

600

400

200

0

10

20

25

n

Growth Rate of some Functions

O(log n), O(log2n), O(n0.5), O(n),
O(n log n), O(n1.5), O(n log2n), O(n2),
O(n3), O(n4)

O(nlog n), O(2n), O(3n), O(4n), O(nn),
O(n!)

P
F
o
u
l
n
y
n
c
t
o
i
o
m
n
i
s
a
l

E
F
x
u
p
n
o
c
n
t
e
i
o
n
n
t
i
s
a
l

NP-Complete

• The class NP-Complete is a set of 
problems that, we believe, has no 
polynomial time algorithms.
• Therefore, they are hard problems.
• If a problem is NP-complete, there is no 
hope to solve the problem efficiently 
when n becomes large.

Computational Complexity and 
Moore’s Law
• Consider a problem that requires 3n flops
• World’s fastest computer ~ 36 Teraflops/sec 
• In a week, you can solve a problem where
n=log(60*60*24*7*36*1012)/log(3)=40
• If Moore’s Law continues for 10 more years
n=log(210/1.5*60*60*24*7*36*1012)/log(3)=44
• We will probably not reach n=60 in my lifetime

Why Models Can Go Wrong

• Right model → Inaccurate answer 
– Rounding error 
– Truncation error
– Ill conditioning
• Right model → Misleading answer
– Chaotic systems
• Right model → No answer whatsoever
– Failure to converge
– Algorithmic complexity
• Not-so right model → Inaccurate answer
– Unmodeled effects
These may be the 
– Bugs in coding the model
biggest problems of all

Errors in Scientific Software
• Experiment T1 
– Statically measured errors in code
– Cases drawn from many industries
– ~10 serious faults per 1000 lines of commercially 
available code
• Experiment T2 
– Several independent implementations of the same 
code on the same input data
– One application studied in depth (seismic data 
processing)
– Agreement of 1 or 2 significant figures on average

Hatton, Les, 1997, “The T Experiments: Errors in Scientific Software”, IEEE 
Computational Science and Engineering.

Models in Engineering vs Science

There is a fundamental difference between 
models used in science and engineering… 
Science uses models to gain an 
understanding of the way things are…  
Engineering uses models … in an attempt 
to achieve what ought to be…  The 
validated models of science are used in 
engineering … to establish bounds and to 
improve products…
Blanchard and Fabrycky, section 7.2

Uses of Models in Engineering

• Engineers seek to answer these questions:
– Will the system, as designed, work?
– Which of two system designs is the better?
– Do I adequately understand the system?

Hazelrigg, 1999, “On the Role and Use of Models in Engineering Design”, 
ASME J. of Mechanical Design.

Definitions

• Accuracy – The ability of a model to faithfully represent 
the real world 
• Resolution – The ability of a model to distinguish 
properly between alternative cases
• Validation – The process of determining the degree to 
which a model is an accurate representation of the real 
world from the perspective of the intended uses of the 
model. (AIAA, 1998)
• Verification – The process of determining that a model 
implementation accurately represents the developer’s 
conceptual description of the model and the solution to 
the model. (AIAA, 1998)

Model Validation in Engineering

• A model of an engineering system can be 
validated using data to some degree within 
some degree of confidence
• Physical data on that specific system 
cannot be gathered until the system is 
designed and built
• Models used for design are never fully 
validated at the time design decisions 
must be made

Definitions

• Decision – (1) A choice made from among a set of 
alternatives, (2) An irrevocable allocation of resources
• Outcome – The actual result of a decision
Information – The basis upon which decisions are made
•
• Uncertainty – A lack of precise knowledge regarding the 
inputs to a model or process, or the model or process 
itself, or about future events
• Risk – The result of uncertainty on the outcome of a 
decision 

Quantifying Uncertainty due to 
Model Data
• Express uncertainty mathematically
– Probability density functions
– Moments
– Ranges
• Propagate through the system
• Evaluate the effects
– On performance
– On decisions to be made

Monte Carlo Simulations
What are They Good at?

Accuracy

∝ 1

N

N # Trials
≡

• Above formulae apply regardless of scale
• So, Monte Carlo is good for:
– Rough approximations or
– Simulations that run quickly
– Even if the system has many random variables

Continuous-Stirred Tank Reactor

• Objective is to generate chemical species B at 
a rate of 60 mol/min 

TTCFQ
(
= ρ
−
p
i

)

+

HrV
(
A

RA

+

Hr
B

RB

)

F  Ti CAi CBi
F  Ti CAi CBi

C

A

=

−

r
A

1

=

A /

RT

C

A

/

τRT

C

B

=

C

+
+

Bi
1

ek
0
A
ek
0
B

−

E

A

/

−

EB

/

C
RT
τ
RT
τ

A

Q
Q

+

C
Ai
Aek
E
0
−
A
ek
0 −
A

E

−

r
B

=

ek
0
B

−

E

B

/

RT

C

B

−

ek
0
A

−

E

A

/

RT

C

A

F  T  CA CB
F  T  CA CB

Adapted from Kalagnanam and Diwekar, 1997, “An Efficient Sampling 
Technique for Off-Line Quality Control”, Technometrics (39 (3) 308-319.

Continuous-Stirred Tank Reactor
Probabilistic Analysis
• 10% uncertainty in 6 input variables (10%=2σ)
• 66% uncertainty in the outputs (starting point)
• 30% uncertainty in the outputs (robust design)

 

y
t
i
s
n
e
d
 
y
t
i
l
i
b
a
b
o
r
P

50

0

Starting point
After robust design

100
50
Rate of production (moles/min)

150

200

Models for Decision Support

• What are the critical elements to making 
informed engineering decisions?

• Are there engineering decisions that can 
be made with confidence despite large 
uncertainties?

Hazelrigg’s M&M Game

•
“Guess” the number of M&Ms in a jar 
• Competitive game
• Person who guesses closest WITHOUT 
GOING OVER wins

Simulations of the Game
Simulation Results for Case 1
0.20

Logic for the Simulation of the Candy Jar Game

Start

For k=1, k

Sample V1,:,d.t 

Compute n

Set g' = 0

For I=1, L

Sample g

if g' || g || n
Set g' = g

Save g'(k),n(k)

Find g' min
   n max

For N = g' min
     n max

Set p(N) = 0

For k =1, k

if g'(k) || N || n(k)
P(N) = P(N) + 1

P(N) = P(N)IK

Write data:
  N, P(N)

End Simulation

L = number of other players in the game
K = number of simulations

g
n
i
n
n
i
w
 
f
o
 
y
t
i
l
i
b
a
b
o
r
P

g
n
i
n
n
i
w
 
f
o
 
y
t
i
l
i
b
a
b
o
r
P

0.15

0.10

0.05

0.00
0

0.4

0.3

0.2

0.1

0.0

0

Guess

Simulation Results for Case 2

Guess

Modeling and Simulation
Summary
• Mathematical modeling is an essential part of 
modern systems engineering
• Models have many pitfalls
• Most of the pitfalls get worse as systems grow 
in complexity and performance
• Strategies
– Know the limits of your models
– Make estimates of your uncertainty
– Know the effect uncertainty on your decisions 
– In critical areas, develop validated models
– Combine models with experimentation

Plan for the Session
• Q&A on Assignment #6
• Distributed Object-Based Modeling in 
Design Simulation Marketplace
• On the Role and Use of Mathematical 
Models in Engineering Design
• Next steps

Proposed Adjustment

• Exam #2 moved to “out of class”
• Exam #2 afforded three hours
• Aircraft engines moved earlier
• Tim Davis given more time

T 20 JUL 
R 22 JUL 
T 27 JUL 
R 29 JUL 

T 3 AUG 

R 5 AUG 
T 10 AUG 
R 12 AUG 

 

Robust Design 
Extreme Programming 
Examination #2 
Aircraft Engines (GE) 
Automobiles 
Work on Aircraft Engines Assignment 
Project Oxygen 
NORAD Command and Control (Mitre) 
Tactical Tomahawk 
Course Summary / Feedback 

 

 
s
e
i
d
u
t
S
 
e
s
a
C

Taguchi_Clausing_Robust Quality.pdf
Ulrich_Eppinger_Product Design and Dev ch13.pdf 
Beck_Extreme Programm ing.pdf 
W illiams_Pair Programm ing.pdf 
 
 

Steele_TBD.pdf 

Folk_TBD.pdf 
 
Cumm ings_TBD.pdf 
 

 
 
 
#7 

 

#8 
 
 

#6 
 
 
 

 

#7 
 
#8 

Next Steps

• Complete HW #6 on DOE 
– Due 8:30AM Tues 20 July
• See you at Tuesday’s session  
– On the topic “Robust Design”
– 8:30AM Tuesday, 20 July
• Reading assignment for Thursday
– Taguchi_Clausing_Robust Quality.pdf
– Ulrich_Eppinger_Product Design and Dev ch13.pdf 

