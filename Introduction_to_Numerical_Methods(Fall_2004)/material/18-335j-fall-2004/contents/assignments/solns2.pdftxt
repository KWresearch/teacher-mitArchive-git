2 Homework Solutions
18.335 - Fall 2004

2.1 Count the number of (cid:135)oating point operations required to compute
the QR decomposition of an m-by-n matrix using (a) Householder
re(cid:135)ectors (b) Givens rotations.

n3 (cid:135)ops.

2
(a) See Trefethen p. 74-75. Answer: (cid:24) 2mn2 (cid:0)
3
(b) Following the same procedure as in part (a) we get the same (cid:145)volume(cid:146),
1
1
namely (cid:24)
n3 : The only di‚ÅÑerence we have here comes from the
mn2 (cid:0)
2
6
number of (cid:135)ops required for calculating the Givens matrix. This operation
requires 6 (cid:135)ops (instead of 4 for the Householder re(cid:135)ectors) and hence in
total we need (cid:24) 3mn2 (cid:0) n3 (cid:135)ops.
2.2 Trefethen 5.4
Let the SVD of A = U (cid:6)V (cid:3) : Denote with vi the columns of V , ui the columns
of U and (cid:27) i the singular values of A: We want to (cid:133)nd x = (x1 ; x2 ) and (cid:21) such
that:
x2(cid:19) = (cid:21) (cid:18)x1
A 0 (cid:19) (cid:18)x1
(cid:18) 0 A(cid:3)
x2(cid:19)
This gives A(cid:3)x2 = (cid:21)x1 and Ax1 = (cid:21)x2 : Multiplying the 1st equation with A
and substitution of the 2nd equation gives AA(cid:3)x2 = (cid:21)2x2 : From this we may
conclude that x2 is a left singular vector of A: The same can be done to see that
x1 is a right singular vector of A: From this the 2m eigenvectors are found to
be:
p2 (cid:18) vi
(cid:6)ui(cid:19) ; i = 1:::m
1
x(cid:6) =
corresponding to the eigenvalues (cid:21) = (cid:6)(cid:27) i . Therefore we get the eigenvalue
decomposition:
U (cid:0)U (cid:19)(cid:0)1
0 (cid:0)(cid:6) (cid:19) 1
U (cid:0)U (cid:19) (cid:18) (cid:6)
(cid:18) 0 A(cid:3)
A 0 (cid:19) =
p2 (cid:18) V
p2 (cid:18) V
1
V
V
0

3

(cid:3)

(cid:1) (cid:1) (cid:1)

(cid:3)

A =

(cid:3)
u2 v1

u3 v1

(cid:3)
(cid:3)
u3 v2

(cid:3)
u4 v2 u4 v3

2.3 If A = R + uv (cid:3) , where R is upper triangular matrix and u and
v are (column) vectors, describe an algorithm to compute the QR
decomposition of A in O (n2 ) time.
The matrix A is of the form
1CCCCCCCCCA
0BBBBBBBBB@
(cid:3)
(cid:3)
...
...
u4 v1
...
. . .
(cid:3)
un v1 un v2
un vn(cid:0)1
(cid:3)
(cid:1) (cid:1) (cid:1)
We exploit the fact that the matrix uv(cid:3) is rank one. By applying a sequence
of Givens rotations starting from the bottom row, we notice that the rotation
that zeroes the entry Ak;1 also zeroes out all the entries Ak;2 ; Ak;3 ; :::Ak;2n(cid:0)k(cid:0)2 :
Thus the n (cid:0) 1 Givens rotations that kill the (cid:133)rst column also kill all the entries
below the (cid:133)rst subdiagonal:
1CCCCCCA
0BBBBBB@
(cid:3)
(cid:3)
(cid:3)
(cid:3)
(cid:2) (cid:3)
...
0 (cid:2)
...
...
. . .
. . .
0
(cid:2) (cid:3)
(cid:1) (cid:1) (cid:1)
Thus we need another n (cid:0) 1 Givens rotations to kill the (cid:133)rst subdiagonal entries
(shown with (cid:2)(cid:146)s above). We have a total cost 2n (cid:0) 2 rotations at no more than
6n operations per Givens rotation. Hence this algorithm requires O (cid:0)n2 (cid:1) (cid:135)ops.
2.4 Given the SVD of A, compute the SVD of (A(cid:3)A)(cid:0)1 ; (A(cid:3)A)(cid:0)1A(cid:3) ;
A(A(cid:3)A)(cid:0)1 ; A(A(cid:3)A)(cid:0)1A(cid:3) in terms of U , (cid:6) and V .
Answers:

(cid:1) (cid:1) (cid:1)

(cid:3)
. . .
0

: : :

(cid:3)

(cid:3)

(cid:15) (A(cid:3)A)(cid:0)1 = V (cid:6)(cid:0)2V (cid:3)
(cid:15) (A(cid:3)A)(cid:0)1A(cid:3) = V (cid:6)(cid:0)1U (cid:3)
(cid:15) A(A(cid:3)A)(cid:0)1 = U (cid:6)(cid:0)1V (cid:3)
(cid:15) A(A(cid:3)A)(cid:0)1A(cid:3) = U U (cid:3) (note that U U (cid:3) may not be equal to I ; unless U is
square in the reduced SVD)

4

