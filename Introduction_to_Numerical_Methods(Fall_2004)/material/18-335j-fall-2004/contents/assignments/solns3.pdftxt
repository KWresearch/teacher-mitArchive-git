3 Homework Solutions
18.335 - Fall 2004

3.1 Trefethen 10.1
(a) H = I (cid:0) 2vv(cid:3) where kvk = 1: If v(cid:3)u = 0 ( u is perpendicular to v ),
then H u = u (cid:0) 2vv(cid:3)u = u: So 1 is an eigenvalue with multiplicity n (cid:0) 1
( there are n (cid:0) 1 linearly independent eigenvectors perpendicular to v ).
Also H v = v (cid:0) 2vv(cid:3) v = v (cid:0) 2v = (cid:0)v ; so (cid:0)1 is an eigenvalue of H: The
geometric interpretation is given by the fact that re(cid:135)ection of v is (cid:0)v , and
re(cid:135)ection of any vector perpendicular to v is v itself.
nYi=1
(cid:21)i = ((cid:0)1) 1n(cid:0)1 = (cid:0)1:
(c) H (cid:3)H = (I (cid:0) 2vv(cid:3) )(cid:3) (I (cid:0) 2vv(cid:3) ) = I (cid:0) 4vv(cid:3) + 4vv(cid:3) vv(cid:3) = I : So the singular
values are all 1(cid:146)s.

(b) det H =

3.2 Let B be an n (cid:2) n upper bidiagonal matrix. Describe an algorithm
for computing the condition number of B measured in the in(cid:133)nity
norm in O(n) time.
The condition number of B in the in(cid:133)nity norm is de(cid:133)ned as:
(cid:20)1 (B ) = (cid:13)(cid:13)B(cid:0)1(cid:13)(cid:13)1 kB k1
We have to compute these two matrix norms separately. For kB k1
; the op-
eration count is O (n) since only n (cid:0) 1 operations (corresponding to row sums
for the (cid:133)rst n (cid:0) 1 rows) are required. In order to calculate (cid:13)(cid:13)B(cid:0)1(cid:13)(cid:13)1
we need to
compute B(cid:0)1 (cid:133)rst. To do so, let C = B(cid:0)1 : Performing the matrix multiplica-
tion BC = I , one can see that the inverse is an upper triangular matrix whose
entries are given by:
8>>>>><>>>>>:
; i = j
j(cid:0)1Yk=i (cid:18)(cid:0)
bk+1;k+1 (cid:19) ; i < j
bk;k+1
This enables us to compute the in(cid:133)nity norm of B(cid:0)1 :
jbi;i j 0@1 +
nXj=i+1 (cid:12)(cid:12)(cid:12)(cid:12)(cid:12)
nXj=1
(cid:13)(cid:13)B(cid:0)1(cid:13)(cid:13)1
1
jci;j j = max
i
|
5

bk+1;k+1 (cid:19)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)
bk;k+1

j(cid:0)1Yk=i (cid:18)(cid:0)
{z
Pi

= max
1(cid:20)i(cid:20)n

1A
}

; i > j

ci;j =

0

1
bi;i
1
bi;i

Pi =

Normally, doing this directly would require O (cid:0)n2 (cid:1) (cid:135)ops. We can avoid this
many (cid:135)ops by making some simpli(cid:133)cations. Let:
bk+1;k+1 (cid:12)(cid:12)(cid:12)(cid:12)
dk = (cid:12)(cid:12)(cid:12)(cid:12)
bk;k+1
and notice that the row sum, Pi can be written as:
jbi;i j 0@1 + di +
jbi;i j 0@1 +
dk1A
dk1A =
j(cid:0)1Yk=i
j(cid:0)1Yk=i
nXj=i+2
nXj=i+1
1
1
jbi;i j 241 + di 0@1 +
dk1A35 =
j(cid:0)1Yk=i+1
nXj=i+2
1
1
(1 + di jbi+1;i+1 j Pi+1 )
jbi;i j
1
(1 + jbi;i+1 j Pi+1 )
jbi;i j
Thus knowing Pi+1 we can calculate Pi in 5 operations. Hence we have to
start from the n-th row and proceed backwards. So our algorithm to compute
(cid:13)(cid:13)B(cid:0)1(cid:13)(cid:13)1
is:

=

=

Pn =

for

(cid:27) 2 (cid:135)ops
= (cid:13)(cid:13)B(cid:0)1(cid:13)(cid:13)1
1
jbn;n j
9>>>>=>>>>;
i=n-1 to 1
1 + jbi;i+1 j Pi+1
Pi =
jbi;i j
(cid:13)(cid:13)B(cid:0)1(cid:13)(cid:13)1
= max (Pi ; Pi+1 )
require O (n) (cid:135)ops; so does (cid:20)1 (B ) :
and kB k1

O (n) (cid:135)ops

end
Since both (cid:13)(cid:13)B(cid:0)1(cid:13)(cid:13)1

6

