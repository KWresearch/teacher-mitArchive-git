4 Homework Solutions
18.335 - Fall 2004

4.1 Trefethen 11.1
First note that any x 2 Cm can be writtten as x = xR + x?R where xR 2 R(A),
x?R 2 R(A)? : Now since:
= 0; 8y 2 Cn =) y(cid:3) (cid:0)A(cid:3)x?R (cid:1) = 0; 8y 2 Cn =) A(cid:3)x?R = 0
(cid:0)x?R (cid:1)(cid:3) Ay
|{z}
2R(A)
we have by de(cid:133)nition:
(cid:13)(cid:13)(cid:13)(A(cid:3)A)(cid:0)1 (cid:0)A(cid:3)xR + A(cid:3)x?R (cid:1)(cid:13)(cid:13)(cid:13)
(cid:13)(cid:13)A+(cid:13)(cid:13) = max
kxk
z2Cm
z 6=0
w (cid:13)(cid:13)(cid:13)(A(cid:3)A)(cid:0)1 A(cid:3)Aw(cid:13)(cid:13)(cid:13)
x (cid:13)(cid:13)(cid:13)(A(cid:3)A)(cid:0)1 A(cid:3)xR(cid:13)(cid:13)(cid:13)
kwk
= max
= max
(cid:20) max
kAwk
kxR k
kAwk
w
w (cid:13)(cid:13)A(cid:0)1
1 w(cid:13)(cid:13)
= (cid:13)(cid:13)A(cid:0)1
1 (cid:13)(cid:13)
kwk
kwk
(cid:13)(cid:13)(cid:13)(cid:13)qkA1wk2 + kA2wk2(cid:13)(cid:13)(cid:13)(cid:13)
(cid:20) max
= max
(cid:20) max
kA1wk
kwk
w
w
4.2 Prove that (13.7) in Trefethen is valid for complex arithmetic (all
four arithmetic operations) with " now bounded by a modest mul-
tiple of "machine .
For addition and subtraction we have

(a + ib) (cid:6) (c + id) := (a (cid:6) c) + i(b (cid:6) d):
Let (cid:14) i be small numbers bounded in absolute value by (cid:15). We have
f l((a + ib) (cid:6) (c + id)) = (a (cid:6) c + i(b (cid:6) d)) (cid:18)1 +
(a (cid:6) c) + i(b (cid:6) d) (cid:19)
(a (cid:6) c)(cid:14)1 + i(b (cid:6) d)(cid:14)2
= (a (cid:6) c + i(b (cid:6) c))(1 + (cid:14))
where

1 + (b (cid:6) d)(cid:14)2
(a (cid:6) c)2 (cid:14)2
2
(a (cid:6) c)2 + (b (cid:6) d)2 (cid:20) 2(cid:15)2
j(cid:14) j2 =
so j(cid:14) j (cid:20) p2(cid:15): For multiplication we have:
(a + ib)(c + id) := (ac (cid:0) bd) + i(ad + bc)

7

For some j(cid:14) i j (cid:20) 2(cid:15) we have:
f l((a + ib)(c + id)) = (ac(1 + (cid:14)1 ) (cid:0) bd(1 + (cid:14)2 )) + i(ad(1 + (cid:14)3 ) + bc(1 + (cid:14)4 ))
= [(ac (cid:0) bd) + i(ad + bc)] + [(ac(cid:14)1 (cid:0) bd(cid:14)2 ) + i(ad(cid:14)3 + bc(cid:14)4 )]
We will use the fact that ju + iv j (cid:20) juj + jv j (cid:20) p2ju + iv j to write
f l((a + ib)(c + id)) = (a + ib)(c + id)(1 + (cid:12) )

where

(cid:12) =

(ac(cid:14)1 (cid:0) bd(cid:14)2 ) + i(ad(cid:14)3 + bc(cid:14)4 )
(a + ib)(c + id)

j(cid:12) j (cid:20)

(jac(cid:14)1 j + jbd(cid:14)2 j) + (jad(cid:14)3 j + jbc(cid:14)4 j)
1
2 (jaj + jbj)(jcj + jdj)
(jaj + jbj)(jcj + jdj)
(cid:20) 4(cid:15)
= 4(cid:15)
(jaj + jbj)(jcj + jdj)
This result does not guarantee high relative accuracy in the individual compo-
nents of the product. For example if we take two numbers whose product is
nearly real, the imaginary part will be the result of cancellation and so be small
but probably not accurate. But the real part will be large, so the bound holds.
Another way to look at it is that the true product lies in a little ball in the
complex plane centered at the true product p and with radius 4(cid:15)jpj. If this ball
interects the real (or imaginary) axis, then we can(cid:146)t even guarantee the sign of
the real (or imaginary) part.

For division we have the following algorithm for computing (a + bi)=(c + di):

(cid:15) (cid:11) = max(jcj; jdj)
(cid:15) c1 = c=(cid:11)
(cid:15) d1 = d=(cid:11), ... therefore c1 + d1 i = 1
(cid:11) (c + di)
1 ), .... same as (cid:11)(c1 + d1 i)(c1 (cid:0) d1 i)
(cid:15) s = (cid:11)(c2
1 + d2
(cid:15) w = (a + bi)(c1 (cid:0) d1 i)
(cid:15) z = w=s, ... same as z = 1
s (cid:1) w
(cid:15) return z
This clearly produces the right answer in exact arithmetic. These operations
can be interpreted as complex multiplications and forming inverses of real num-
bers. Each of those operation preserves the relative accuracy and the overall
error bound is a product of all (1 + (cid:14)) terms from each complex multiply. Over
all we get a relative error bounded by 22(cid:15).

8

4.3 Prove that in IEEE binary (cid:135)oating point arithmetic px returns x
exactly.

Recall that any IEEE number, x; can be written as
253 (cid:17) ; with 0 (cid:20) m < 253
x = 2a (cid:16)1 +
m
Note that here we assumed double precision, even though this is not necessary.
Since we are not concerned with over(cid:135)ow or under(cid:135)ow, no limits were placed
on a: Then we have
x2 = 22a (cid:18)1 +
253 (cid:19)
m2
2m
1
253 +
253
To show that (cid:135)(px2 ) = x we need to verify that:
253 (cid:19) < 2a 0B@1 +
253 1CA (cid:20) s22a (cid:18)1 +
2a 0B@1 +
1
m (cid:0)
m2
2
In order to do that we have to distinguish 2 cases
m2
2m
1
253 < 1
253 +
(cid:15)
253
This implies that for

253 1CA (1)
1
m +
2

2m
253 +

1
253

(2)

1
2

we get that

Thus (1) becomes

m2
+
253
253 (cid:19)
2m + y

m2
1
253 (cid:20) y (cid:20)
+
(cid:0)
2
(cid:135)(x2 ) = 22a (cid:18)1 +
1
1
253 (cid:20) r1 +
m (cid:0)
m +
2m + y
2
2
253 < 1 +
1 +
253
(cid:20) y < 1 + (cid:18)m +
2 (cid:19)2
) (cid:0)1 + (cid:18)m (cid:0)
2 (cid:19)2
1
1
253
253
which is obiously true because of (2) :

m2
2m
1
(cid:15) 1<
253 < 3
253 +
253
In this case we have that for some 0 (cid:20) k < 252
1
2k (cid:0)
2
253 (cid:20)

2m
253 +

m2
2106 < 1 +

1 +

1
2

2k +

253

(3)

9

and therefore
(cid:135)(x2 ) = 22a (cid:18)1 + 1 +
253 (cid:19) = 22a+1 (cid:18)1 +
253 (cid:19)
2k
k
To show that (cid:135)(px2 ) = x we need to verify from (1) that
253 (cid:20) s2 (cid:18)1 +
1
253 (cid:19) < 1 +
m (cid:0)
k
2
This follows directly from (3) since by re-arranging terms in (3) we get:
253 (cid:19) < (cid:16)1 +
254 (cid:20) 2 (cid:18)1 +
253 (cid:17)2
253 (cid:17)2
(cid:16)1 +
m
k
m
1
Combining these 2 cases we complete the proof.

1
254

1 +

(cid:0)

1
2

m +

253

+

4.4 Let a and b be positive IEEE binary (cid:135)oating point numbers such
that a < b < 2a. Prove that (cid:135)(b (cid:0) a)=b (cid:0) a exactly.
Proof: Assume a = 1:a1a2 :::an (cid:2) 2k ; b = 1:b1 b2 :::bn (cid:2) 2r (ai ; bi 2 f0; 1g). Also
we may assume k = 0. b (cid:21) a implies r (cid:20) 0 and 2a (cid:21) b implies r + 1 (cid:21) 0, so we
have either r = 0 or r = (cid:0)1.
For r = 0 we have b (cid:0) a = 1:b1 b2 :::bn (cid:0) 1:a1a2 :::an = 0:c1 c2 :::cn , which is an
exact (cid:135)oating point number, since it has less than n + 1 fraction bits.
For r = (cid:0)1 we have b (cid:0) a = 1:b1 b2 :::bn (cid:0) 1:a1a2 :::an (cid:2) 2(cid:0)1 = 1:b1 b2 :::bn 0 (cid:0)
0:1a1a2 :::an = c(cid:0)1 :c0 c1 c2 :::cn . Since 2a (cid:21) b we have c(cid:0)1 = 0. So the result has
at most n + 1 fraction bits which is again an exact (cid:135)oating point number.

10

