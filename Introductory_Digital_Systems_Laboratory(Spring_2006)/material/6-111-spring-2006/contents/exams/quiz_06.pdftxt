MASSACHUSETTS INSTITUTE OF TECHNOLOGY

Department of Electrical Engineering and Computer Sciences 


Introductory Digital Systems Lab (6.111) 

Quiz - Spring 2006

Prof. Anantha Chandrakasan 

Student Name: 

Problem 1 (20 Points): _____________________ 

Problem 2 (22 Points): _____________________ 

Problem 3 (22 Points): _____________________ 

Problem 4 (18 Points): _____________________ 

Problem 5 (18 Points): _____________________ 

Total (100 Points): 

 _____________________ 

1 of 10 

Problem 1: Sequential building blocks and counters 

(a) Consider the following sequential building block. 
(i) What type of sequential block is it? 
(ii) Assume that S = R = 1. What happens to the outputs Q and Q when CLK transitions from a 1 
to 0? Briefly explain your answer. (6 points) 

Q 

Q 

S 

CLK 

R 

(b)  Assume  you  have  access  to  a  D  positive  edge-triggered  register.  Construct  a  J-K  positive 
edge triggered register that implements  the functionality shown  in the  truth-table. Q+ is the next 
state. You may add logic gates as necessary (show a logic diagram). (6 points) 

J

0 

0 

1 

1 

 K

 Q+

 

0  Q 

1 

0 

0 

1 

1  Q 

J 

K 

Q+ 

D 

Q 

Q 

CLK 

2 of 10 

(c)  Construct  a  2-bit  synchronous  counter  using  the  J-K  register  above  (it  should  count 
00J01J10J11J00...). Assume a black box for the J-K register with three inputs (J, K, CLK) and 
one output Q. A partial implementation is shown below. Minimize the number of additional gates 
required. Show the K-MAP optimization for the MSB.(8 points) 

Q 

Q1

Q 

Q0

J 

K 

J 

K 

CLK 


CLK 


3 of 10 

Problem 2: Carry Skip Adder: In this problem, we will explore the addition of two numbers based on the 
Carry Skip (or Carry Bypass) technique. 

(a) Consider the following 16-bit Carry Skip Adder (each + block represents a one full-bit adder). Assume 
the following delays: 
•  Delay to produce the Pi, Gi  signals from the Ai, Bi inputs is 1 (i.e., the delay of the PG block) 
•  Delay to compute Cout,i  from Pi, Gi and Cin,i inputs is 1 
•  Delay to compute Si from Cin,i, Pi, Gi being valid is 2 
•  Delay for the 2:1 multiplexor is 2 
•  Delay to compute the group propagate, GPi, once the propagates are available is 1 

Highlight the critical path for this 16-bit adder directly on the figure below (4 points) 

A0 B0  A1 B1  A2 B2  A3 B3 

PG 

PG 

PG 

PG 

Cin,0 

+ 

+ 

+ 

+ 

 
 3
 P
 2
 P
 1
 P
0
P
 
 =
0
P
G

0 

1 

A4 B4  A5 B5  A6 B6  A7 B7 

PG 

PG 

PG 

PG 

+ 

+ 

+ 

+ 

 
 7
 P
 6
 P
 5
 P
4
P
 
 =
1
P
G

0 

1 

A8 B8  A9 B9  A10B10 A11 B11

PG 

PG 

PG 

PG 

+ 

+ 

+ 

+ 

 
1
 1
 P
0
 1
 P
 9
 P
8
P
 
 =
2
P
G

0 

1 

A12 B12  A13B13  A14B14  A15B15 

PG 

PG 

PG 

PG 

+ 

+ 

+ 

+

Cout,15 

S0 

S1 

S2 

S3 

S4 

S5 

S6 

S7 

S8 

S9 

S10 

S11

S12 

S13 

S14 

S15 

A 16 bit Carry Skip Adder with a block size = 4. 

(b)  What  is  the  delay  for  a  32-bit  adder  assuming  eight  equal  block  sizes  of  4  and  making  the  same 
assumptions of delay as part 2 (a)? Assume that the last block does not have a multiplexor as in part 2 (a). 
(4 points) 

4 of 10 

(c)  In  the  computation of group propagate  signal   (GPi) which  involves  the  product  of  the propagate  sig ­
nals, the propagate for each bit should be computed as:
    (1)  P = A + B
    (2)  P = A ⊕ B
    (3) either P = A + B or P = A⊕ B 
Clearly explain your answer.  (6 points) 

(d) Consider the  following 32-bit adder variation where  the block sizes of each stage are not equal. High ­
light the critical path directly on the figure below. The figure shows a simplified diagram with some obvi ­
ous details left out. What is the delay of the critical path? Assume the same delays as part (a). (8 points) 

A0,B0 

A1-3,B1-3 

A4-8,B4-8 

A9-15,B9-15 

A16-22,B16-22 

A23-27,B23-27 

A28-30,B28-30  A31,B31 

PG 

+ 
(0) 

PG 

+ 
(1-3) 

0 

1 

0 

1 

PG 

+ 
(4-8) 

0 

1 

S0 

S1-S3 

S4-S8 

PG 

+ 
(9-15) 

S9-S15 

PG 

+ 
(16-22) 

0 

1 

PG 

PG 

0 

1 

+ 
(23-27) 

0 

1 

+ 
(28-30) 

0 

1 

PG

+ 
(31) 

S16-S22 

S23-S27 

S28-S30 

S31 

A 32-bit Carry Skip Adder with a variable block sizes. 

5 of 10 

PROBLEM 3: Glitches in Digital Design 

Assume for that for the entire problem the counter reset is synchronous. 
(a) Consider the one-second clock enable from lab2. The 1Hz enable is derived from the circuit below (the 
clock  is  the 27Mhz  clock). Assume  that  a global  reset  signal puts  the  count  to 0  (the  circuit  is not  shown 
here). The 1Hz enable is used to clock other circuits that need to be updated once per second (e.g., the reg ­
ister shown below). Identify the main problem with this circuit. (5 points) 

register 

In 

D  Q 

Out 

reset 

 
r
e
t
n
u
o
C

Q

Count [24:0] 

25 

1Hz Enable 

Combinational 

Logic (comparator) 
= 

CLK 

25’ d26999999 

(b) Propose a solution (draw the logic diagram) that fixes the above problem, but implements the exact 
same functionality. The solution must be fully synchronous (i.e., a single clock to every register). 
(6 points) 

6 of 10 

(c)  As  discussed  in  class,  a  common  architecture  used  in  the  design  of  Digital-to-Analog  Converters  is 
using binary weighted current sources. Assume that the two input bits (b1, b0) are output from registers but 
can  arrive  at  the  switches  at  different  times  (due  to  the  variation  in  wire  delays  from  the  register  to  the 
switch). What is the LSB (in volts) and full scale swing of this DAC (you might want to sketch out the out ­
put voltage vs. digital code word). Describe the key problem associated with this architecture. (5 points) 
VDD 
VDD 

2I 

I

b1 

b1

b0 

b0

R 

+ 
vout 
-

(d) Propose a solution that avoids the problem in part (c) and only uses unit sized current sources (I). Add 
the necessary gate-level logic required to implement the digital-to-analog conversion. (6 points) 

7 of 10 

PROBLEM 4: Memory 

(a) The 6264 memory  in  lab3  is a 8192 x 8 bit memory chip. Architect  this memory at  the block diagram 
level (include decoders, amplifier, wordline, etc.). Clearly indicate how many bits are at the input and out ­
put of decoders. Assume each row stores 32, 8-bit words (i.e., 256 bits). Also include one line to describe 
each block. (14 points) 

Block Diagram: 

Provide a 1-line description of the functionality: 


Row Decoder: 


Column Decoder: 


Sense Amplifier:


Wordline:


Bitline:  


(b) What are two major differences between SRAM and DRAM? (4 points) 

8 of 10 

PROBLEM 5: Verilog 

(a) Complete the behavioral description in Verilog for a synchronous 74163 counter used in lab1. The basic 
template is shown below -- fill in the necessary code to complete the description. (8 points) 

module counter (LDbar, CLRbar,  P,  T, CLK, D, Q, RCO); 

 input LDbar, CLRbar, P, T, CLK; 

 input [3:0] D; 

 output [3:0] Q; 

 output RCO; 

 reg [3:0] Q; 


always @ (posedge CLK) begin 

end 


 assign RCO = 


endmodule 


(b) Complete the follow piece of code to implement a synchronizer (which includes two back to back reg­
isters) (4 points) 

input in; 

reg q1, q2; 


always @ (posedge clk) 

begin 


end 

9 of 10 

(c)  The  code  below  should  implement  a  simple  four  state  FSM  which  increments  a  4-bit  synchronous 
counter when the FSM is in state 2 ’ b10. Identify the major problem with this code when synthesized. Pro ­
pose a solution to fix the problem. You can define a new variable if necessary. (6 points)

 module simple_fsm(clk, reset, count);
  input reset, clk;
  output [3:0] count;
  reg [3:0] count;
  reg [1:0] state;
  reg [1:0] next;

  always @ (posedge clk) begin 

 if (reset)
  state <= 2'b00; 

 else state <= next;

  end

  always @ (state or reset or count) begin 

if (reset) 

   count = 4'b0000; 

case (state) 

   2'b00:  next = 2'b01; 

  2'b01:  next = 2'b10; 

   2'b10:  begin 

   next = 2'b11; 

   count = count +1; 

 end 

   2'b11:  next = 2'b00; 
default: next = 2 ’ b00;
 endcase
  end //always 
endmodule 

10 of 10 

