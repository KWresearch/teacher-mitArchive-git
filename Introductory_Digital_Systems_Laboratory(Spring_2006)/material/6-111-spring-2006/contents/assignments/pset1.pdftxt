Massachusetts Institute of Technology 
Department of Electrical Engineering and Computer Science 
6.111 - Introductory Digital Systems Laboratory 

 

 
Problem Set 1 
Issued: February 8, 2006  
 
Boolean Algebra Practice Problems (do not turn in):  
Simplify each expression by algebraic manipulation. Try to recognize when it is 
appropriate to transform to the dual, simplify, and re-transform (e.g. no. 6). Try doing the 
problems before looking at the solutions which are at the end of this problem set. 
 

Due: February 21, 2006 

 

 

 

 =+ 0a
1) 
=⋅ 0a
 
2) 
=+ aa
3) 
 
a
=+ a
 
4) 
+ ab
a
 =
5) 
+ baa
 
6) 
=
7) 
 
baa
(
+ )
=
+ ba
ab
 
8) 
=
9) 
 
baba
(
)(
)
+
=
+
10) 
cbaa
...)
(
+++
For (11),(12), (13), 
 =)
11) 
abbaf
,(
,
12) 
babaf
⋅ )
,(
,
=
13) 
ab
baf
=])
(,
,[
 
14) 
y
+ yy
=

 
 

15) 
16) 
17) 
18) 
19) 
20) 
21) 
22) 
23) 
24) 
25) 
26) 
27) 

 
=
cba
cbaf
,(
++=),

  

 

xy
+ yx
=
 
+ xy
x
=
xw
yz
y
(
)
=
+++
 
y
xy
x
)
)(
(
+
=
+
 
wx
ww
(
[
)]
=
+
+
 
xx
xy
)]
[
(
+
=
x
 
x
+ )
(
=
 
x
x
(
+ )
=
yzxww
(
)
+
=
 
(wxyz
w
)
⋅
=
 
xz
yx
zy
+
+
=
x
zy
xz
)(
(
)(
+
+
 
y
x
zxy
++
=

+

 

 

y

)

=

 

 

 

 
Problem 1: Karnaugh Maps and Minimal Expressions 
For each of the following Boolean expressions, give: 
i)  The truth table, 
ii)  The Karnaugh map, 
iii) The MSP expression, (Show groupings) 
iv)  The MPS expression. (Show groupings) 

1) 
2) 

(
(

dcabc
dba
()
⋅+
⋅
⋅+⋅
⋅
xw
zy
xwy
)
 
⋅+⋅+⋅
⋅

)

  

 
 
 

6.111   Spring 2006   Problem Set 1    

2

Problem 2: Karnaugh Maps with “Don’t Cares” 
Karnaugh Maps are useful for finding minimal implementations of Boolean expressions 
with only a few variables. However, they can be a little tricky when “don't cares” (X) are 
involved. Using the following K-Maps: 

 
i)  Find the minimal sum of products expression. Show your groupings. 
ii)  Find the minimal product of sums expression. Show your groupings. 
iii) Are your solutions unique? If not, list and show the other minimal expressions. 
iv)  Does the MPS = MSP? 

 
Problem 3: DeMorgan’s Theorem 
Use DeMorgan's Theorems to simplify the following expressions: 
 

 

1) 
2) 
3) 

cb
da
(
()
)
  
⋅
+
+
cba
dc
(
)
)
(
⋅
⋅
⋅
+
a
ccbd
+⋅+⋅+

 
d

 

 
Problem 4: Transistor/Gate Level Synthesis 
1)  Construct a transistor level circuit of the following function using NMOS and 
 
PMOS devices: 
CBA
F
)
(
=
+
⋅
2)  Construct a gate level circuit of the same function only using NAND gates. 

 
Problem 5: Setup and Hold Times for D Flip-Flop (Flip-flops will be covered in 
lecture 4) 
1)  Let a D latch be implemented using a mux and realized as follows: 

6.111   Spring 2006   Problem Set 1    

3

 

 

 
You may assume the following: 
G
G  are complements and have zero skew, i.e. when  G is 1,  G  is 
a) 
 and 
exactly 0, and vice versa. 
b)  Assume the switches are ideal, with no delay. E.g. when  G  is 0, the 
switch is open. 
c)  The propagation delay of the inverters is tinv (assume that the 
contamination delay or minimum delay is equal to the propagation delay). 

 
What is the setup and hold time of this latch? 
 
2)  What memory element is created when two muxes are cascaded as in the 
figure below? Assume that  CLK and  CLK  are complements with zero skew. 

 

 
 

 

3)  What is the setup time, hold time, and clock to Q delay of the above memory 
element? 

 

 

6.111   Spring 2006   Problem Set 1    

4

Solutions to the Boolean Algebra Practice Problems 
 

bb
a
1(
++
=
 
ac
a
...
+
=

)

=

a

 

 

 a
a
=+ 0
1) 
0 =⋅a
0
 
2) 
1=+ aa
 
3) 
aa
 a
4) 
=+
 a
5) 
ab
a
a
b
1(
)
=
+
+
=
6) 
a
ba
a
baa
ba
(
)
)(
=
+
+
+
+=
 
7) 
ab
aa
ab
baa
+ )
(
=
+
=
8) 
 
b
a
ab
ab
ba
)
(
+
=
+
=
9) 
baba
aa
a
bbabba
baba
(
)
)(
=
+
+=
+
+
+
+
+
10) 
cbaa
ac
aa
ab
a
ab
...
...)
(
+
=
+=
+
+
+
+++
11) 
 
ba
ab
abbaf
ba
++=)
,
,(
+=
12) 
 
babaf
baba
aba
,(
,
)
1
⋅
++=
=++=
13) 
baf
baba
ab
ba
ab
(,
])
,[
)
(
=+++=
++=
14) 
 
y
yy
y
=
+
15) 
yx
xy
yx
(
=
+
+
16) 
x
x
y
xy
1(
+
=
+
17) 
y
xw
yz
(
)
+++
18) 
xy
y
x
(
)
)(
+
=
+
19) 
wx
ww
)]
(
[
+
=
+
 x
20) 
xx
xy
)]
(
[
+
=
x
21) 
 
x
x
(
+ )
=
22) 
+ x
x
 
0
)
(
=
23) 
yzxww
w
yzx
)
)
(
1(
+
=
+
=
24) 
wxyz
xww
w
y
)
(
(
+++
⋅
=
 
25) 
yx
xz
yx
xz
zy
+
=
+
+
26) 
xz
y
x
zy
(
)(
)
(
)(
=
+
+
+
27) 
 
x
x
y
zxy
y
z
++=
++

y
)
)
=
=
 
x
 w

=
x
 
y

 
w
z
)

xz
)(

x
 

y

)

 

x

+

=

w

 

+

1

 

 

 

