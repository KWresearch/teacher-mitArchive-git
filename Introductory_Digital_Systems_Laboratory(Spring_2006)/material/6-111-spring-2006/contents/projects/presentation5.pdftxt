3D Pong

Igor Ginzburg

Game Overview

• Game play similar to MIT Pong, but…
– the objects have depth
– the board can be rotated in 3D while the 
game is being played
• Inputs
– Lab-4 Pong Inputs
– 3D Trackball for Rotating the Board
• Arbitrary 3D Models in addition to 3D Pong

3D Renderer

• Arbitrary models composed of triangles in 
a 3D space
• Arbitrary Rotations and Translation
• Shaded using Flat Shading Model
• Perspective Projection

Model  
ROMs 

n
e
x
t
_
f
r
a
m
e
 
Model Source 

b
a
l
l
_
x
 

b
a
l
l
_
y
 

p
a
d
d
l
e
_
y
 
Game Logic 
(Lab 4) 

model_select 

game_inputs 

Block Diagram

Controller (FSM) 

blanking 

VGA 

vga* 

triangle_data 
empty 
noop 
next 

Trig ROMs 

Triangle 
Pipeline 

t
l
z
r
i
r
o
o
g
a
t
o
n
h
a
m
s
t
_
i
l
s
o
_
a
o
n
t
s
i
u
c
_
o
r
a
m
n
c
l
_
e
a
a
_
r
v
t
 
r
v
e
i
c
e
x
t
c
 
o
t
o
r
 
r
 
Orienter 

e
m
p
t
y
 

Pixel Shader 
(FSM) 

switch_buffer 

x
 

y
 

{x,y,z} 
RGB 
noop 
next 

Screen Buffer 

RGB 

triangle_data 
empty 
noop 
next 

{dx,dy} 
buttons 
 

Trackball 
Driver 

P
S
/
2
 
B
u
s
 

R
a
m
 
1
 
B
u
s
 

R
a
m
 
2
 
B
u
s
 

Closer Look: Triangle Pipeline

next 

empty 
triangle_data 
noop 

t_d 
noop 

R
e
g
i
s
t
e
r

t_d 
noop 

empty 

empty 

empty 

empty 

empty 

P
o
i
n
t
R
e
o
r
d
e
r

S
u
V
b
e
t
r
c
a
t
c
o
t
r
o
 
r

t
r
a
n
s
l
a
t
i
o
n
_
v
e
c
t
o
r
 

C
N
a
l
o
c
r
u
m
l
a
a
t
o
l
 
r

n
o
r
m
a
l
 

n
o
r
m
a
l
 

D
o
t
P
r
o
d
u
c
t

l
i
g
h
t
_
s
o
u
r
c
e
_
v
e
c
.
 

D
i
v
i
s
i
o
n

z
o
o
m
_
s
c
a
l
a
r
 

M
M
u
l
a
t
i
t
p
r
i
l
x
i
e
 
r

r
o
t
a
t
i
o
n
_
m
a
t
r
i
x
 

Legend: triangle_data = {a_x, a_y, a_z, b_x, b_y, b_z, c_x, c_y, c_z, rgb} 

next 

triangle_data 
noop 

Closer Look: Triangle Shader

{x,y,rgb}

Closer Look: Z-Buffer

or

?

•Buffer z-coordinate in addition to RGB for each pixel
•Compare z-coordinates before storing a new pixel color

Model  
ROMs 

n
e
x
t
_
f
r
a
m
e
 
Model Source 

b
a
l
l
_
x
 

b
a
l
l
_
y
 

p
a
d
d
l
e
_
y
 
Game Logic 
(Lab 4) 

model_select 

game_inputs 

Questions?

Controller (FSM) 

blanking 

VGA 

vga* 

triangle_data 
empty 
noop 
next 

Trig ROMs 

Triangle 
Pipeline 

t
l
z
r
i
r
o
o
g
a
t
o
n
h
a
m
s
t
_
i
l
s
o
_
a
o
n
t
s
i
u
c
_
o
r
a
m
n
c
l
_
e
a
a
_
r
v
t
 
r
v
e
i
c
e
x
t
c
 
o
t
o
r
 
r
 
Orienter 

e
m
p
t
y
 

Pixel Shader 
(FSM) 

switch_buffer 

x
 

y
 

{x,y,z} 
RGB 
noop 
next 

Screen Buffer 

RGB 

triangle_data 
empty 
noop 
next 

{dx,dy} 
buttons 
 

Trackball 
Driver 

P
S
/
2
 
B
u
s
 

R
a
m
 
1
 
B
u
s
 

R
a
m
 
2
 
B
u
s
 

