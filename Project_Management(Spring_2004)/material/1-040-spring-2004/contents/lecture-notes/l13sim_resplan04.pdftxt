Simulation and Resource --
Simulation and Resource
Based Scheduling
Based Scheduling
Nathaniel Osgood
Nathaniel Osgood
33 --3030 --2004
2004

Topics
Topics

Simulation Methods
(cid:132)(cid:132) Simulation Methods
Static vsvs dynamic scheduling
dynamic scheduling
(cid:132)(cid:132) Static 
Scheduling granularity
(cid:132)(cid:132) Scheduling granularity
(cid:132)(cid:132) GERTGERT
Demos
(cid:132)(cid:132) Demos
Process interaction languages
(cid:132)(cid:132) Process interaction languages
Activity scanning languages
(cid:132)(cid:132) Activity scanning languages
Resource algorithms
(cid:132)(cid:132) Resource algorithms
Optimal
(cid:132)(cid:132) Optimal
Heuristic
(cid:132)(cid:132) Heuristic
Line of balance method
(cid:132)(cid:132) Line of balance method

Static vs. Dynamic Scheduling
Static vs. Dynamic Scheduling
Static Scheduling
(cid:132)(cid:132) Static Scheduling
Dates known ahead of time
(cid:132)(cid:132) Dates known ahead of time
Coordination with stakeholders
(cid:132)(cid:132) Coordination with stakeholders
Coordination with subcontractors
(cid:132)(cid:132) Coordination with subcontractors
Coordination pre --planned (e.g. reservation system)
planned (e.g. reservation system)
(cid:132)(cid:132) Coordination pre
Can’t take advantage of early finishes, arrivals, etc.
(cid:132)(cid:132) Can’t take advantage of early finishes, arrivals, etc.
Dynamic Scheduling (“Wait and See”)
(cid:132)(cid:132) Dynamic Scheduling (“Wait and See”)
Dynamic coordination takes time (queuing)
(cid:132)(cid:132) Dynamic coordination takes time (queuing)
Prevents needless waiting if finish early
(cid:132)(cid:132) Prevents needless waiting if finish early
Both get done!
(cid:132)(cid:132) Both get done!

Topics
Topics

Simulation Methods
(cid:132)(cid:132) Simulation Methods
Static vsvs dynamic scheduling
dynamic scheduling
(cid:57)(cid:57) Static 
Scheduling granularity
(cid:132)(cid:132) Scheduling granularity
(cid:132)(cid:132) GERTGERT
Demos
(cid:132)(cid:132) Demos
Process interaction languages
(cid:132)(cid:132) Process interaction languages
Activity scanning languages
(cid:132)(cid:132) Activity scanning languages
Resource algorithms
(cid:132)(cid:132) Resource algorithms
Optimal
(cid:132)(cid:132) Optimal
Heuristic
(cid:132)(cid:132) Heuristic
Line of balance method
(cid:132)(cid:132) Line of balance method

Granularity of Scheduling
Granularity of Scheduling

grained (particular crews,  indiv
(cid:132)(cid:132) FineFine --grained (particular crews, 
indiv .) advantages
.) advantages
Can reason about 
(cid:132)(cid:132) Can reason about 
Crew productivity
(cid:132)(cid:132) Crew productivity
Balancing workload among crews
(cid:132)(cid:132) Balancing workload among crews
Distance traveled for particular crews
(cid:132)(cid:132) Distance traveled for particular crews
Coarser --grained advantages
grained advantages
(cid:132)(cid:132) Coarser
Combinatorially more challenging
more challenging
(cid:132)(cid:132) Combinatorially
May inhibit creativity in dynamic scheduling
(cid:132)(cid:132) May inhibit creativity in dynamic scheduling
dynamic (or “quasi
(or “quasi --dynamic”) 
Generally, leave  dynamic
dynamic”) 
(cid:132)(cid:132) Generally, leave 
factors that don’t consider statically
factors that don’t consider statically

Topics
Topics

Simulation Methods
(cid:132)(cid:132) Simulation Methods
Static vsvs dynamic scheduling
dynamic scheduling
(cid:57)(cid:57) Static 
Scheduling granularity
(cid:57)(cid:57) Scheduling granularity
(cid:132)(cid:132) GERTGERT
Demos
(cid:132)(cid:132) Demos
Process interaction languages
(cid:132)(cid:132) Process interaction languages
Activity scanning languages
(cid:132)(cid:132) Activity scanning languages
Resource algorithms
(cid:132)(cid:132) Resource algorithms
Optimal
(cid:132)(cid:132) Optimal
Heuristic
(cid:132)(cid:132) Heuristic
Line of balance method
(cid:132)(cid:132) Line of balance method

Major Types of Simulation
Major Types of Simulation
Discussed here: Discrete Event Simulation 
(cid:132)(cid:132) Discussed here: Discrete Event Simulation 
Oldest:  GERT/Q --GERT (
GERT (Pritsker
Pritsker ))
(cid:132)(cid:132) Oldest:  GERT/Q
Common representation: Activity Cycle Diagrams
(cid:132)(cid:132) Common representation: Activity Cycle Diagrams
Transaction --based (“Process interaction”) approaches
based (“Process interaction”) approaches
(cid:132)(cid:132) Transaction
(cid:132)(cid:132) SLAMSLAM
(cid:132)(cid:132) GPSSGPSS
Activity -- scanning approaches
scanning approaches
(cid:132)(cid:132) Activity
CYCLONE
(cid:132)(cid:132) CYCLONE
STROBOSCOPE
(cid:132)(cid:132) STROBOSCOPE
Not discussed today: System Dynamics
(cid:132)(cid:132) Not discussed today: System Dynamics
NB: graphical rep. & implementation may differ
(cid:132)(cid:132) NB: graphical rep. & implementation may differ

GERT Basics
GERT Basics
Builds on Activity --onon --Arrow diagrams
Arrow diagrams
(cid:132)(cid:132) Builds on Activity
Discrete semantics
(cid:132)(cid:132) Discrete semantics
“Transactions” (“entities”) flow through system
(cid:132)(cid:132) “Transactions” (“entities”) flow through system
Fire off additional transactions
(cid:132)(cid:132) Fire off additional transactions
Transactions secure resources for processing
(cid:132)(cid:132) Transactions secure resources for processing
Must wait until needed resources are available
(cid:132)(cid:132) Must wait until needed resources are available
Probabilistic 
(cid:132)(cid:132) Probabilistic 
Durations
(cid:132)(cid:132) Durations
Branching & Looping
(cid:132)(cid:132) Branching & Looping
Time no longer linearly increasing to right!
(cid:132)(cid:132) Time no longer linearly increasing to right!

Most Common Q --GERT Node
GERT Node
Most Common Q

Arrows
Arrows

activities
Represent activities
(cid:132)(cid:132) Represent 
Sometimes use dummies,  sometimese
sometimese notnot
(cid:132)(cid:132) Sometimes use dummies, 
Representation 1:
(cid:132)(cid:132) Representation 1:
Exp(λ)

N(µ,σ)

Representation 2:
(cid:132)(cid:132) Representation 2:

Exp(λ)

(Dummy)

N(µ,σ)

GERTGERT
Looping/Branching Constructs
Looping/Branching Constructs
Branching
(cid:132)(cid:132) Branching
Deterministic (like CPM/PERT)
(cid:132)(cid:132) Deterministic (like CPM/PERT)
Probabilistic
(cid:132)(cid:132) Probabilistic
Rework Cycle
(cid:132)(cid:132) Rework Cycle
Example of Probabilistic Branching and Looping-no 
Equivalent Arrow Diagram Possible.

Initial
project
activities

Evaluation of
alternative engine
development

1
1

10

1
1

20

Rework (Recycle loop)

Drop project

Proceed to develop
solid fuel engine

Proceed to develop
liquid fuel engine

Corresponding Aggregate CPM 
Corresponding Aggregate CPM 
Representation
Representation

Additional GERT Node Types
Additional GERT Node Types

Source/Sink nodes
(cid:132)(cid:132) Source/Sink nodes
Statistics nodes
(cid:132)(cid:132) Statistics nodes
First/all realizations
(cid:132)(cid:132) First/all realizations
Interarrival time
time
(cid:132)(cid:132) Interarrival
Time interval from mark node
(cid:132)(cid:132) Time interval from mark node
(cid:132)(cid:132) Etc.Etc.
Mark nodes
(cid:132)(cid:132) Mark nodes
Diversity in realization types, etc.
(cid:132)(cid:132) Diversity in realization types, etc.

QQ --GERT:  Introduces Queues
GERT:  Introduces Queues

Delivers entities to outgoing activities
(cid:132)(cid:132) Delivers entities to outgoing activities
Outgoing activities are associated with # of servers
(cid:132)(cid:132) Outgoing activities are associated with # of servers
# clients that can process in parallel
(cid:132)(cid:132) # clients that can process in parallel
Accumulates objects up to some capacity
(cid:132)(cid:132) Accumulates objects up to some capacity
Backs up if cannot process immediately
(cid:132)(cid:132) Backs up if cannot process immediately
“Balks” if reaches capacity
(cid:132)(cid:132) “Balks” if reaches capacity
Combination elements to combine transactions
(cid:132)(cid:132) Combination elements to combine transactions
Led to development of GASP, SLAM
(cid:132)(cid:132) Led to development of GASP, SLAM

GERT Applications
GERT Applications

Offshore Oil Rigs (GranliGranli ))
(cid:132)(cid:132) Offshore Oil Rigs (
Alaska Pipeline
(cid:132)(cid:132) Alaska Pipeline
Reservoir construction (Pena Mora)
(cid:132)(cid:132) Reservoir construction (Pena Mora)

Construction Simulation Languages
Construction Simulation Languages

Equally powerful:  All “Turing Equivalent”
(cid:132)(cid:132) Equally powerful:  All “Turing Equivalent”
i.e. Any language can simulate any other
(cid:132)(cid:132) i.e. Any language can simulate any other
Differ in terms of 
(cid:132)(cid:132) Differ in terms of 
Ease of use
(cid:132)(cid:132) Ease of use
Extensibility
(cid:132)(cid:132) Extensibility
Expressiveness for construction domain
(cid:132)(cid:132) Expressiveness for construction domain
How natural is it to describe construction scenarios?
(cid:132)(cid:132) How natural is it to describe construction scenarios?
Two main framework:  process interaction and 
(cid:132)(cid:132) Two main framework:  process interaction and 
activity scanning
activity scanning

Topics
Topics

Simulation Methods
(cid:132)(cid:132) Simulation Methods
Static vsvs dynamic scheduling
dynamic scheduling
(cid:57)(cid:57) Static 
Scheduling granularity
(cid:57)(cid:57) Scheduling granularity
(cid:57)(cid:57) GERTGERT
Demos
(cid:132)(cid:132) Demos
Process interaction languages
(cid:132)(cid:132) Process interaction languages
Activity scanning languages
(cid:132)(cid:132) Activity scanning languages
Resource algorithms
(cid:132)(cid:132) Resource algorithms
Optimal
(cid:132)(cid:132) Optimal
Heuristic
(cid:132)(cid:132) Heuristic
Line of balance method
(cid:132)(cid:132) Line of balance method

Activity Cycle Diagrams:
Activity Cycle Diagrams:
Common Visual Representation
Common Visual Representation
Rectangles:   Activities
Circles:  Queues (resources in particular state)
ACD for Scraper and Pusher Operation

RdyTo
BkTrack

RdyTo
Haul

Haul

Back
Track

Push
Load

PshrsAt
PshPnt

Scrapers
AtCut

Dumped
Soil

Return

RdyTo
Dump

Dump
and
Spread

RdyTo
Return

Pusher

Scraper

Soil

Scraper+Soil

Simulation Example: 
Simulation Example: 
Excavation and Transporting
Excavation and Transporting

(cid:132)(cid:132) GivenGiven
Front --end loader 
end loader 
(cid:132)(cid:132) Front
Output:  oo front
(cid:132)(cid:132) Output:  
front -- end loader
end loader
Instantaneous time between loads
(cid:132)(cid:132) Instantaneous time between loads
Trucks
(cid:132)(cid:132) Trucks
n vehicles
(cid:132)(cid:132) n vehicles
Capacity c
(cid:132)(cid:132) Capacity c
Load time  tt ll
(cid:132)(cid:132) Load time 
Instantaneous dump time
(cid:132)(cid:132) Instantaneous dump time
Fully loaded speed ss ll , empty speed s
, empty speed see
(cid:132)(cid:132) Fully loaded speed 
Distance to dumpsite d
(cid:132)(cid:132) Distance to dumpsite d
end loader , , oo trucks
Naïve productivity:  min(omin(o front
)
(cid:132)(cid:132) Naïve productivity:  
trucks )
front -- end loader

nc
+

d
s
e

o
trucks

=

d
s
l

=

ncs s
l e
s
d s
(
+
l
e

)

Topics
Topics

Simulation Methods
(cid:132)(cid:132) Simulation Methods
Static vsvs dynamic scheduling
dynamic scheduling
(cid:57)(cid:57) Static 
Scheduling granularity
(cid:57)(cid:57) Scheduling granularity
(cid:57)(cid:57) GERTGERT
Demos
(cid:57)(cid:57) Demos
Process interaction languages
(cid:132)(cid:132) Process interaction languages
Activity scanning languages
(cid:132)(cid:132) Activity scanning languages
Resource algorithms
(cid:132)(cid:132) Resource algorithms
Optimal
(cid:132)(cid:132) Optimal
Heuristic
(cid:132)(cid:132) Heuristic
Line of balance method
(cid:132)(cid:132) Line of balance method

Process Interaction Frameworks
Process Interaction Frameworks

ProModel , , SimScript
Examples: SLAM, GPSS, ProModel
SimScript , , 
(cid:132)(cid:132) Examples: SLAM, GPSS, 
ModSim , etc.
, etc.
ModSim
Based on flow of transactions through system
(cid:132)(cid:132) Based on flow of transactions through system
Capture and release resources (“machines”)
(cid:132)(cid:132) Capture and release resources (“machines”)
Good in “job shops” where have
(cid:132)(cid:132) Good in “job shops” where have
Clear items moving through system
(cid:132)(cid:132) Clear items moving through system
Resources temporarily claimed by items
(cid:132)(cid:132) Resources temporarily claimed by items

Process Interaction Shortcomings
Process Interaction Shortcomings

In construction, identifying what constitutes a 
(cid:132)(cid:132) In construction, identifying what constitutes a 
“transaction” can be tricky 
“transaction” can be tricky 
Awkward to represent other entities
(cid:132)(cid:132) Awkward to represent other entities
Changing perspective to other entities difficult
(cid:132)(cid:132) Changing perspective to other entities difficult
Risk of deadlock over resources during 
(cid:132)(cid:132) Risk of deadlock over resources during 
simulation
simulation

Process Interaction Representation
Process Interaction Representation

Process Interaction Flowchart for Scraper and Pusher Operation

Generate
All Scrapers at time 0
Loop

Queue

Scrapers
Wait

Enter

Depart

Pushers

Scrapers
Wait

Advance
Push-Load

(Loop)

Split

Advance
Haul

Advance
Dump

Split

Advance
Return

Transfer

(Bk Track)
Bk Track
Advance
BackTrack

Leave

Pushers

(Soil)

Terminate 0

Soil

Terminate 1

Topics
Topics

Simulation Methods
(cid:132)(cid:132) Simulation Methods
Static vsvs dynamic scheduling
dynamic scheduling
(cid:57)(cid:57) Static 
Scheduling granularity
(cid:57)(cid:57) Scheduling granularity
(cid:57)(cid:57) GERTGERT
Demos
(cid:57)(cid:57) Demos
Process interaction languages
(cid:57)(cid:57) Process interaction languages
Activity scanning languages
(cid:132)(cid:132) Activity scanning languages
Resource algorithms
(cid:132)(cid:132) Resource algorithms
Optimal
(cid:132)(cid:132) Optimal
Heuristic
(cid:132)(cid:132) Heuristic
Line of balance method
(cid:132)(cid:132) Line of balance method

Activity Scanning
Activity Scanning
Simulation Packages
Simulation Packages
General purpose
(cid:132)(cid:132) General purpose
Representation similar to activity cycle diagrams
(cid:132)(cid:132) Representation similar to activity cycle diagrams
Identify conditions to allow activities to proceed
(cid:132)(cid:132) Identify conditions to allow activities to proceed
Construction -- specific
specific
(cid:132)(cid:132) Construction
CYCLONE
(cid:132)(cid:132) CYCLONE
STROBOSCOPE
(cid:132)(cid:132) STROBOSCOPE

CYCLONE Elements
CYCLONE Elements

NAME

SYMBOL

FUNCTION

Combination
(COMBI)
Activity

Normal
Activity

Queue
Node

Function
Node

This element is always preceded by Queue Nodes.
Before it can commence, units must be available at
each of the preceding Queue Nodes. If units are
available, they are combined and processed
through the activity. If units are available at some
but not all of the preceding Queue Nodes, these
units are delayed until the condition for the
combination is met

This is an activity similar to the COMBI. However,
units arriving at this element begin processing
immediately and are not delayed

This element precedes all COMBI activities and
provides a location at which units are delayed
pending combination. Delay statistics are measured
at this element

It is inserted into the model to perform special
fucntion such as counting, consolidation, marking,
and statistic collection

Accumulator

It is used to define the number of times
the system cycles

Arc

Indicates the logical structure of the model
and direction of entity flow

CYCLONE Brick Example
CYCLONE Brick Example
Qualitative Description
Qualitative Description

Labor:  3 masons, 1 laborer
(cid:132)(cid:132) Labor:  3 masons, 1 laborer
Scaffold can hold 3 pallets of 10 bricks each
(cid:132)(cid:132) Scaffold can hold 3 pallets of 10 bricks each

CYCLONE Brick Example
CYCLONE Brick Example
ModelModel

L

1
Laborer
idle

2
Resupply
stack

3
Position
occupied

P P
4
Position
available

P

5
Mason removes
packet

6
Mason lays
brick

7
Mason 
waits
resupply
MM

M

8

CYCLONE Brick Example
CYCLONE Brick Example
Underlying Code
Underlying Code
NAME 'MASONRY' LEN 500 CYC 9
(cid:132)(cid:132) NAME 'MASONRY' LEN 500 CYC 9
NETWORK INPUT
(cid:132)(cid:132) NETWORK INPUT
1 QUE 'LAB IDLE'
1 QUE 'LAB IDLE'
(cid:132)(cid:132)
2 COM SET 1 'RESUPPLY' FOL 1 3 PRE 1 4
2 COM SET 1 'RESUPPLY' FOL 1 3 PRE 1 4
(cid:132)(cid:132)
3 QUE 'STACK OCCUP'
3 QUE 'STACK OCCUP'
(cid:132)(cid:132)
4 QUE 'STACK EMPTY'
4 QUE 'STACK EMPTY'
(cid:132)(cid:132)
5 COM SET 2 'PICKUP' FOL 4 6 PRE 3 7
5 COM SET 2 'PICKUP' FOL 4 6 PRE 3 7
(cid:132)(cid:132)
6 NOR SET 3 'PLACE 10 BRK' FOL 8
6 NOR SET 3 'PLACE 10 BRK' FOL 8
(cid:132)(cid:132)
7 QUE 'MASONS IDLE'
7 QUE 'MASONS IDLE'
(cid:132)(cid:132)
8 FUN COU QUA 10 FOL 7
8 FUN COU QUA 10 FOL 7
(cid:132)(cid:132)
RESOURCE INPUT
RESOURCE INPUT
(cid:132)(cid:132)
1 'LABORER' AT 1
1 'LABORER' AT 1
(cid:132)(cid:132)
3 'POSITIONS' AT 4
3 'POSITIONS' AT 4
(cid:132)(cid:132)
3 'MASONS' AT 7
3 'MASONS' AT 7
(cid:132)(cid:132)
DURATION INPUT
(cid:132)(cid:132) DURATION INPUT
SET 1 BETA 0.001 5.0 2.6 0.5
SET 1 BETA 0.001 5.0 2.6 0.5
(cid:132)(cid:132)
SET 2 1
SET 2 1
(cid:132)(cid:132)
SET 3 BETA 3 10 7 2.2
SET 3 BETA 3 10 7 2.2
(cid:132)(cid:132)
ENDDATA
ENDDATA
(cid:132)(cid:132)

ACD for Scrapers and Pushers
ACD for Scrapers and Pushers

ACD for Scraper and Pusher Operation

RdyTo
BkTrack

RdyTo
Haul

Haul

Back
Track

Push
Load

PshrsAt
PshPnt

Scrapers
AtCut

Dumped
Soil

Return

RdyTo
Dump

Dump
and
Spread

RdyTo
Return

Pusher

Scraper

Soil

Scraper+Soil

Topics
Topics

Simulation Methods
(cid:132)(cid:132) Simulation Methods
Static vsvs dynamic scheduling
dynamic scheduling
(cid:57)(cid:57) Static 
Scheduling granularity
(cid:57)(cid:57) Scheduling granularity
(cid:57)(cid:57) GERTGERT
Demos
(cid:57)(cid:57) Demos
Process interaction languages
(cid:57)(cid:57) Process interaction languages
Activity scanning languages
(cid:57)(cid:57) Activity scanning languages
Resource algorithms
(cid:132)(cid:132) Resource algorithms
Optimal
(cid:132)(cid:132) Optimal
Heuristic
(cid:132)(cid:132) Heuristic
Line of balance method
(cid:132)(cid:132) Line of balance method

Recall Basic Steps of 
Recall Basic Steps of 
Network Methods
Network Methods
Define activities from WBS work packages
(cid:132)(cid:132) Define activities from WBS work packages
Estimate $, time, resources for each activity
(cid:132)(cid:132) Estimate $, time, resources for each activity
Define precedence relationships between activities
(cid:132)(cid:132) Define precedence relationships between activities
Iterate
(cid:132)(cid:132) Iterate
Perform CPM scheduling
(cid:132)(cid:132) Perform CPM scheduling
In a sense, we are assuming “infinite resources” here!
(cid:132)(cid:132) In a sense, we are assuming “infinite resources” here!
Estimate time, cost, resource usage over project
(cid:132)(cid:132) Estimate time, cost, resource usage over project
If acceptable, terminate
(cid:132)(cid:132) If acceptable, terminate
If not acceptable, impose dependencies or 
(cid:132)(cid:132) If not acceptable, impose dependencies or 
added/reduced resources
added/reduced resources

Resource Considerations
Resource Considerations
Human resources most important
(cid:132)(cid:132) Human resources most important
Time to procure
(cid:132)(cid:132) Time to procure
Difficult to release
(cid:132)(cid:132) Difficult to release
Difficult to reuse on demand
(cid:132)(cid:132) Difficult to reuse on demand
Must consider different trades as different types of 
(cid:132)(cid:132) Must consider different trades as different types of 
resources
resources
Equipment
(cid:132)(cid:132) Equipment
Highly specialized equipment
(cid:132)(cid:132) Highly specialized equipment
Normal equipment relatively easy to procure on 
(cid:132)(cid:132) Normal equipment relatively easy to procure on 
demand
demand
Note constraints  ---- Permitting issues, etc!
Permitting issues, etc!
(cid:132)(cid:132) Note constraints 

Resource Algorithms
Resource Algorithms
Resource Leveling
(cid:132)(cid:132) Resource Leveling
Moving activities within float to minimize fluctuations
(cid:132)(cid:132) Moving activities within float to minimize fluctuations
No change to schedule duration!
(cid:132)(cid:132) No change to schedule duration!
Especially important for human resources
(cid:132)(cid:132) Especially important for human resources
No guarantee that falls within limits of available resources!
(cid:132)(cid:132) No guarantee that falls within limits of available resources!
Resource Scheduling (“Constrained -- resource 
resource 
(cid:132)(cid:132) Resource Scheduling (“Constrained
scheduling”, “Limited Resource Allocation”)
scheduling”, “Limited Resource Allocation”)
constraints with minimal extension 
Scheduling resources within  constraints
with minimal extension 
(cid:132)(cid:132) Scheduling resources within 
of schedule time
of schedule time
activity resource 
Key assumption:  Holding individual activity
resource 
(cid:132)(cid:132) Key assumption:  Holding individual 
constant
assignments, durations  constant
assignments, durations 

Optimal Resource 
Optimal Resource 
Scheduling/Leveling Methods
Scheduling/Leveling Methods
Combinatorial problem
(cid:132)(cid:132) Combinatorial problem
Computationally very expensive (NP --complete)
complete)
(cid:132)(cid:132) Computationally very expensive (NP
In principle, would need to compare all possible 
(cid:132)(cid:132) In principle, would need to compare all possible 
orderings of conflicting activities
orderings of conflicting activities
Intuition:  Lots of possible start/stop times 
(cid:132)(cid:132) Intuition:  Lots of possible start/stop times 
within constraints
within constraints
Typically too large to realistically enumerate
(cid:132)(cid:132) Typically too large to realistically enumerate
Locally best choice not necessarily 
globally bestbest
best choice not necessarily  globally
(cid:132)(cid:132) Locally
Approaches
(cid:132)(cid:132) Approaches
Linear Programminig
Programminig
(cid:132)(cid:132) Linear 
Explicit Enumeration
(cid:132)(cid:132) Explicit Enumeration
“Branch and Bound” (constrained search)
(cid:132)(cid:132) “Branch and Bound” (constrained search)

Example of Combinatorial Factors
Example of Combinatorial Factors
Resource Scheduling
Resource Scheduling

B

1

1

0
A
0

2
C
4

1

E

4

1
D
4

0

F

0

LEGEND:
Required resources

E

Duration

Best local choice!

Possible Schedules
Possible Schedules

B   CCCC 
EEEECCCCDDDD

CCCC
BEEEECCCCDDDD

CCCC
BCCCCEEEEDDDD

CCCC
BCCCCDDDDEEEE
CCCC
EEEEBCCCCDDDD
CCCCEEEE
BCCCCDDDD

Duration: 12

Duration: 13

Duration: 13

Duration: 13

Duration: 13

Duration: 9

Detailed (Crew --Level Scheduling)
Level Scheduling)
Detailed (Crew

Section

Work Duration

A
B
C
D
E
F
G
H
I
J
K

9
9
8
8
7
7
6
6
6
5
5

Assignment of Crews to Activities
Assignment of Crews to Activities

Integer Programming Formulation
Integer Programming Formulation

Section i, crew j
(cid:132)(cid:132) Section i, crew j
(cid:132)(cid:132) xx ijij = 1 if section i assigned to crew j, 0 otherwise
= 1 if section i assigned to crew j, 0 otherwise
(cid:132)(cid:132) tt ii = time for section j
= time for section j
Problem:  
(cid:132)(cid:132) Problem:  
Minimize z subject to constraints
(cid:132)(cid:132) Minimize z subject to constraints
n
activities
≥ ∑
t x
z
ij
i
i
1
=
n
crews
=∑
x
ij
i
j
=

1

Need to account for assignment of time to resources

Only one crew assigned per resource

Topics
Topics

Simulation Methods
(cid:57)(cid:57) Simulation Methods
Static vsvs dynamic scheduling
dynamic scheduling
(cid:57)(cid:57) Static 
Scheduling granularity
(cid:57)(cid:57) Scheduling granularity
(cid:57)(cid:57) GERTGERT
Demos
(cid:57)(cid:57) Demos
Process interaction languages
(cid:57)(cid:57) Process interaction languages
Activity scanning languages
(cid:57)(cid:57) Activity scanning languages
Resource algorithms
(cid:132)(cid:132) Resource algorithms
Optimal
(cid:57)(cid:57) Optimal
Heuristic
(cid:132)(cid:132) Heuristic
Line of balance method
(cid:132)(cid:132) Line of balance method

Heuristic Methods
Heuristic Methods

Use “rules of thumb” to get answer in 
(cid:132)(cid:132) Use “rules of thumb” to get answer in 
acceptable time
acceptable time
Typically reach local minimum
(cid:132)(cid:132) Typically reach local minimum
“Greedy” algorithms do what is locally –– but not 
but not 
(cid:132)(cid:132) “Greedy” algorithms do what is locally 
necessarily globally –– bestbest
necessarily globally 
Typically use empirical evaluation to judge
(cid:132)(cid:132) Typically use empirical evaluation to judge
Sometimes highly problem -- specific (e.g. SPAR) 
specific (e.g. SPAR) 
(cid:132)(cid:132) Sometimes highly problem
sometimes very general (branch & bound, 
sometimes very general (branch & bound, 
simulated annealing, genetic algorithms, etc.)
simulated annealing, genetic algorithms, etc.)

Heuristic Scheduling Approaches
Heuristic Scheduling Approaches

Serial” methods:  Schedule activity --byby -- activity
(cid:132)(cid:132) ““Serial” methods:  Schedule activity
activity
Consider prioritized activities in order
(cid:132)(cid:132) Consider prioritized activities in order
Schedule as early as possible
(cid:132)(cid:132) Schedule as early as possible
Less common
(cid:132)(cid:132) Less common
“Parallel” methods: Schedule by  timestep
timestep
(cid:132)(cid:132) “Parallel” methods: Schedule by 
Start with some initial schedule
(cid:132)(cid:132) Start with some initial schedule
For each  timestep
timestep , decide which activities to delay 
, decide which activities to delay 
(cid:132)(cid:132) For each 
Local optimization:  
Never reconsider activities in progress
optimization:  Never reconsider activities in progress
(cid:132)(cid:132) Local 
Based on characteristics of activities that would be active
(cid:132)(cid:132) Based on characteristics of activities that would be active
Most commonly used
(cid:132)(cid:132) Most commonly used

Heuristic Resource Scheduling 
Heuristic Resource Scheduling 
Methods: Typical Approach
Methods: Typical Approach
Assign priorities.  Example metrics:
(cid:132)(cid:132) Assign priorities.  Example metrics:
Shortest Task First
(cid:132)(cid:132) Shortest Task First
Most Resources First
(cid:132)(cid:132) Most Resources First
Minimum Slack First
(cid:132)(cid:132) Minimum Slack First
Most Critical Followers
(cid:132)(cid:132) Most Critical Followers
Most Successors
(cid:132)(cid:132) Most Successors
Wait until 
(cid:132)(cid:132) Wait until 
Predecessors complete
(cid:132)(cid:132) Predecessors complete
Adequate resources available
(cid:132)(cid:132) Adequate resources available

Empirical Studies
Empirical Studies

Patterson and Davis (1975) compared multiple 
(cid:132)(cid:132) Patterson and Davis (1975) compared multiple 
heuristics, in “serial” and “parallel” modes
heuristics, in “serial” and “parallel” modes
Examples:  Minimum late finish time, function of 
(cid:132)(cid:132) Examples:  Minimum late finish time, function of 
EF&LS, greatest resource demand, minimize 
EF&LS, greatest resource demand, minimize 
resource “idling”, shortest durations first, greatest # 
resource “idling”, shortest durations first, greatest # 
of activities, random activity selection, min. slack
of activities, random activity selection, min. slack
Most effective: 
(cid:132)(cid:132) Most effective: 
Min slack (i.e. min late start)
(cid:132)(cid:132) Min slack (i.e. min late start)
Minimum late finish
(cid:132)(cid:132) Minimum late finish
(cid:132)(cid:132) NonNon --optimal 60% of time
optimal 60% of time
Serial vs. parallel may be more important than rule
(cid:132)(cid:132) Serial vs. parallel may be more important than rule

Example Leveling
LevelingHeuristic 
Heuristic 
Example 
(Burgess)
(Burgess)
Sort activities in reverse order of precedence
(cid:132)(cid:132) Sort activities in reverse order of precedence
Assign activities to early start time
(cid:132)(cid:132) Assign activities to early start time
Repeat until sum of squares of resource use =
(cid:132)(cid:132) Repeat until sum of squares of resource use =
For each activity in sorted order
(cid:132)(cid:132) For each activity in sorted order
Schedule at time that minimizes sum of squares of 
(cid:132)(cid:132) Schedule at time that minimizes sum of squares of 
resource use (subject to precedence constraints)
resource use (subject to precedence constraints)
Repeat with different initial ordering if resource 
(cid:132)(cid:132) Repeat with different initial ordering if resource 
highly critical
highly critical
Adjust for any other factors omitted
(cid:132)(cid:132) Adjust for any other factors omitted

Example Heuristic Resource 
Example Heuristic Resource 
SchedulingAlgorithm
Algorithm
Scheduling
1. Rank all resources from the most important to the least important

2.

Set the scheduled start day for each activity to Early Start

3.

Starting at t = 0, compute demand for resource i

4.

If resource demand for i is greater than availability, select the 
activity with the greatest Late Start and shift its start to t + 1

5. Repeat [4] until resource constraint at t for resource i is satisfied.

6. Repeat [4] for t = t + 1

7. Repeat [3] for resource i + 1

Note on Prioritization of Algorithm
Note on Prioritization of Algorithm

Assuming no changing of already scheduled 
(cid:132)(cid:132) Assuming no changing of already scheduled 
activities, delaying activities in order of late start 
activities, delaying activities in order of late start 
is same as prioritizing in terms of slack
is same as prioritizing in terms of slack
Same as minimizing extension to overall project 
(cid:132)(cid:132) Same as minimizing extension to overall project 
duration
duration
Selecting minimum slack shown empirically to 
(cid:132)(cid:132) Selecting minimum slack shown empirically to 
outperform others
outperform others
Late finish --based selection also effective
based selection also effective
(cid:132)(cid:132) Late finish

SPAR Algorithm
SPAR Algorithm
Probabilistic assignment of jobs
(cid:132)(cid:132) Probabilistic assignment of jobs
Allows for finding multiple local minima
(cid:132)(cid:132) Allows for finding multiple local minima
Not simply “greedy”: Reconsiders earlier decisions
(cid:132)(cid:132) Not simply “greedy”: Reconsiders earlier decisions
May change critical path (delay job or resources for critcrit ))
(cid:132)(cid:132) May change critical path (delay job or resources for 
Linear time/resource tradeoff assumed
(cid:132)(cid:132) Linear time/resource tradeoff assumed
i.e. Constant person --days required for activity
days required for activity
(cid:132)(cid:132) i.e. Constant person
Critical resources considered for higher resource 
(cid:132)(cid:132) Critical resources considered for higher resource 
allocation
allocation
If necessary, borrow resources from previously scheduled 
(cid:132)(cid:132) If necessary, borrow resources from previously scheduled 
jobs –– but only if don’t extend entire project
but only if don’t extend entire project
jobs 
If absolutely necessary, delay other active jobs
(cid:132)(cid:132) If absolutely necessary, delay other active jobs

Topics
Topics

Simulation Methods
(cid:57)(cid:57) Simulation Methods
Static vsvs dynamic scheduling
dynamic scheduling
(cid:57)(cid:57) Static 
Scheduling granularity
(cid:57)(cid:57) Scheduling granularity
(cid:57)(cid:57) GERTGERT
Demos
(cid:57)(cid:57) Demos
Process interaction languages
(cid:57)(cid:57) Process interaction languages
Activity scanning languages
(cid:57)(cid:57) Activity scanning languages
Resource algorithms
(cid:57)(cid:57) Resource algorithms
Optimal
(cid:57)(cid:57) Optimal
Heuristic
(cid:57)(cid:57) Heuristic
Line of balance method
(cid:132)(cid:132) Line of balance method

LineLine --ofof --Balance Applicability
Balance Applicability
Repetitive Activities
(cid:132)(cid:132) Repetitive Activities
Same Crew
(cid:132)(cid:132) Same Crew
Rate of Progress
(cid:132)(cid:132) Rate of Progress
Minimize Discontinuity by Crews
(cid:132)(cid:132) Minimize Discontinuity by Crews
Represented in the Network by 
(cid:132)(cid:132) Represented in the Network by 
Continuous Activities
(cid:132)(cid:132) Continuous Activities
Repetitive Activities
(cid:132)(cid:132) Repetitive Activities
Use for planning
(cid:132)(cid:132) Use for planning
Crew reuse
(cid:132)(cid:132) Crew reuse
Planning timing of work
(cid:132)(cid:132) Planning timing of work
Planning speed of work
(cid:132)(cid:132) Planning speed of work

Plotting Activity Progress Lines
Plotting Activity Progress Lines

PLOTTING ACTIVITY PROGRESS LINES

n
o
i
t
a
c
o
L

Estimated Progress

Time

Linear Scheduling Method 
Linear Scheduling Method 
Diagram
Diagram

LOB Planning Steps
LOB Planning Steps
Design Crews
(cid:132)(cid:132) Design Crews

Determine Task for Crews
(cid:132)(cid:132) Determine Task for Crews

Sequence of Trades
(cid:132)(cid:132) Sequence of Trades

Location or Work Type
(cid:132)(cid:132) Location or Work Type

Routing around the Job
(cid:132)(cid:132) Routing around the Job

Buffer between Trade Crews
(cid:132)(cid:132) Buffer between Trade Crews

Use of Restraint on LSM 
Use of Restraint on LSM 
Diagram
Diagram

Activity Interference
Activity Interference

Use of Activity Buffers in LSM 
Use of Activity Buffers in LSM 
Schedules
Schedules

Activity Intervals for LSM 
Activity Intervals for LSM 
Schedules
Schedules

LOB Advantages
LOB Advantages
Easier to Set --Up than Networks 
Up than Networks 
(cid:132)(cid:132) Easier to Set
More Information Than Gantt Charts
(cid:132)(cid:132) More Information Than Gantt Charts
Graphically Shows 
(cid:132)(cid:132) Graphically Shows 
Rate of Progress
(cid:132)(cid:132) Rate of Progress
Activity Durations
(cid:132)(cid:132) Activity Durations
Resource assignments
(cid:132)(cid:132) Resource assignments
Resource assignments
(cid:132)(cid:132) Resource assignments
Calendar dates
(cid:132)(cid:132) Calendar dates
Graphical risk of conflicts
(cid:132)(cid:132) Graphical risk of conflicts
Augment Network Scheduling on Projects with 
(cid:132)(cid:132) Augment Network Scheduling on Projects with 
Repetitive and Discrete Activities
Repetitive and Discrete Activities
Labor Histograms Can Be Prepared
(cid:132)(cid:132) Labor Histograms Can Be Prepared
Resources May Be Balance
(cid:132)(cid:132) Resources May Be Balance
Earnings Curves Can Be Developed 
(cid:132)(cid:132) Earnings Curves Can Be Developed 

LOB Disadvantages
LOB Disadvantages

Less Effective When Work is Regularly 
(cid:132)(cid:132) Less Effective When Work is Regularly 
Interrupted or When Activities Do Not 
Interrupted or When Activities Do Not 
Follow the Same Order in All Locations
Follow the Same Order in All Locations
Difficult to Determine Minimum Interval 
(cid:132)(cid:132) Difficult to Determine Minimum Interval 
and/or Buffers
and/or Buffers
Hard to represent both horizontal and 
(cid:132)(cid:132) Hard to represent both horizontal and 
vertical progression
vertical progression

