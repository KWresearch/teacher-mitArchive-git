Lecture 6

Householder Reﬂector s and Givens Rotations 


MIT 18.335J / 6.337J


Introduction to Numerical Methods


Per-Olof Persson


September 26, 2006


1 

Gram-Schmidt as Triangular Orthogonalization


1 
r11 

·  ·  · 

1 

· · ·


−r12  −r13 
r11 
r11 
1 

•	 Gram-Schmidt multiplies with triangular matrices to make columns 
or thogonal, for example at the ﬁrst step: 




�����

�����

�����

�����

vn
 



�

�

=  q1
 v
 (2)

v1
 v2

2

. . . 
•  After all the steps we get a product of triangular matrices 
A R1R2  · · ·  Rn  = Qˆ
��

�

�

Rˆ−1 
“T riangular or thogonalization” 
2 

�����


�


•	

· · ·


v
 (2)

n


�


�����


Householder Triangularization


0  ××××× · · ·  ×
××××

•	 The Householder method multiplies by unitary matrices to make columns 
triangular, for example at the  ﬁrst  step: 




r11  ××××× · · ·  ×
××××


Q1A  =
 

•  After all the steps we get a product of or thogonal matrices 
Qn  · · ·  Q2Q1 A  = R 
��

�

�

Q∗ 
“Or thogonal triangularization” 

0  ××××× ·  ·  ·  ×××××
. . . 
. . . 
. . . 
. . . 
0  ××××× ·  ·  ·  ×××××

•	

3 

Introducing Zeros 

•  Qk  introduces zeros below the diagonal in column k 

•  Preserves all the zeros previously introduced 


 × × × 


× × ×

× × ×


× × × 

× × ×


A






× × × 
××××× ×
××××

0


0


×
××××

×
××××

0  ×××××

Q2Q1A






Q3

−→







× × × 

× ×

×
××××

0 

0 
Q3Q2Q1A 






Q1

−→












××××× ××××× ×××××

0  ×××××

0  ×××××

0  ×××××

×
××××

×
××××

×
××××

0  ××××× ×××××

Q1A






Q2

−→


4


Householder Reﬂector s 

•  Let Qk  be of the form 


I 


0


0  F 


where I  is (k − 1) ×  (k − 1) and F  is (m   − k + 1) ×  (m  − k + 1) 

Qk  =


•  Create Householder reﬂector  F  that introduces zeros: 

 ×






�x� 

.
.
.
 

x  =
 

.
.
.
 

F x
 =
 

0

×

0

× 
5


= �x�e1


Householder Reﬂector s


•  Idea: Reﬂect  across hyperplane H  or thogonal to v  = �x�e1  − x, by the 
unitary matrix 

vv  ∗ 
F  = I  − 2 
v  ∗ v 

•  Compare with projector 

P⊥v  = I  − 

∗ vv 
v  ∗ v 

x 

v 

F x = �x�e1 

H 

6


Choice of Reﬂector


•  We can choose to re ﬂect  to any multiple z  of �x�e1  with |z | = 1 

•	 Better numerical proper ties with large �v�, for example 

v  = sign(x1 )�x�e1  + x 

•  Note:  sign(0) = 1, but in

MATLAB, sign(0)==0


x 

−�x�e1  − x 

+�x�e1  − x 

−�x�e1 

+�x�e1 

H+ 

H− 

7


The Householder Algorithm


•  Compute the factor R of a QR factorization of m  ×  n  matrix A (m  ≥  n) 

•  Leave result in place of A, store reﬂection  vectors vk  for later use 

Algorithm: Householder QR Factorization


for k  = 1 to n 
x  = Ak:m,k

vk  = sign(x1 )�x�2e1  + x

vk  = vk /�vk �2

∗Ak:m,k:n ) 
Ak:m,k:n  = Ak:m,k:n  − 2vk (vk

8


Applying or Forming Q


•  Compute Q∗ b  = Qn  · · ·  Q2Q1 b and Qx = Q1Q2  · · ·  Qnx  implicitly 

•  To create Q explicitly, apply to x  = I 

Algorithm:  Implicit Calculation of Q∗b


for k	 = 1 to n 
bk:m  = bk:m  − 2vk (vk
∗ bk:m ) 

Algorithm:  Implicit Calculation of Qx


for k	 = n  downto 1 
xk:m  = xk:m  − 2vk (vk
∗ xk:m ) 

9


Operation Count - Householder QR


•  Most work done by 

Ak:m,k:n  = Ak:m,k:n  − 2vk (vkAk:m,k:n ) 
∗

•  Operations per iteration: 
–  2(m  − k)(n  − k) for the dot products vk
∗Ak:m,k:n 
(m  − k)(n  − k) for the outer product 2vk (· · ·  ) 
– 
(m  − k)(n  − k) for the subtraction Ak:m,k:n  − · · · 
– 
–  4(m  − k)(n  − k) total 

•  Including the outer loop, the total becomes 
n 
n
� 
� 
(mn  − k(m  + n) + k2 ) 
4(m  − k)(n  − k) = 4 
k=1 
k=1 
∼  4mn 2  − 4(m  + n)n 2/2 + 4n 3/3 = 2mn 2  − 2n 3/3 

10 

Givens Rotations


•  Alternative to Householder reﬂectors 
	
 
cos θ  − sin θ 
 rotates x  ∈  R2  by θ 
•	 A Givens rotation R  = 
cos θ 
sin θ 
•  To set an element to zero, choose cos θ and sin θ so that 
    � 
	
 
i
 + x
2 
x
2 
cos θ  − sin θ

xi	
j

cos θ    xj   =  
  sin θ 
 
0 
xi 
sin θ  = 
cos θ  =  � 
, 
i
 + x
2 
x
2 
j


−xj 
i
 + x
2 
x
2 
j


or 

� 

11


Givens QR 

•  Introduce zeros in column from bottom and up 



 × × × 






× × × 
××××× ××××× ×
×××× 

× × ×
 

−→
 

−→
 



× × ×

× × ×

(2,3)

(3,4)

0  ××××× ×××××
× × × 

 ××××× ××××× ×××××








× × × 


× ×
 

−→
 

××××× ×
×××× 

−→
 

0
 ××××× ×
××××
× ×

(3,4)

(2,3)

0  ×××××
× × 
•  Flop count 3mn2  − n3  (or 50% more than Householder QR) 



× × ×



××××× ××××× ×
×××× (1,2) 

−→

0
 ××××× ×
××××


× × ×



××××× ×
×××× (3,4) 
−→  R 
0
 ×
××××

× ×


× 

12


MIT OpenCourseWare
http://ocw.mit.edu 

18.335J / 6.337J Introduction to Numerical Methods 
Fall 2010
 

For information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms . 

