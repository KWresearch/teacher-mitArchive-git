Lecture 14

Hessenberg/Tridiagonal Reduction


MIT 18.335J / 6.337J


Introduction to Numerical Methods


Per-Olof Persson


October 26, 2006


1


Introducing Zeros by Similarity Transformations 


•	 Try computing the Schur factorization A  = QT Q∗  by applying 
Householder reﬂectors from left and r ight that introduce zeros: 






××××××××××××××××××××× 
××××
×××××××××××××××××××××
××××
× × × × ×

0 ××××××××××××××××××××
××××××××××××××××××××× 
××××
× × × × ×	
Q∗ 
Q1
 
× × × × ×
 

××××××××××××××××××××× 
××××
0 ××××××××××××××××
××××
1 

××××××××××××××××××××× 
××××

 0 ××××××××××××××××
××××

 × × × × ×

−→

−→

0 ××××××××××××××××××××
× × × × ×	
×××××××××××××××××××××××××
Q∗ 
Q∗ 
A	
1AQ1 
1A

•  The right multiplication destroys the zeros previously introduced 

•  We already knew this would not work, because of Abel’s theorem 

•  However, the subdiagonal entries typically decrease in magnitude 

2




















The Hessenberg Form 

•  Instead, try computing an upper Hessenberg matrix H  similar to A: 
 






× ×××××××××××××××× 
××××
× × × × ×

× × × × ×

× ×××××××××××××××× 
××××
× × × × × 
×××××××××××××××××××××××××
Q1
 

× × × × ×
 

0 ××××××××××××××××
××××
×××××××××××××××× 
××××

 0 ××××××××××××××××
××××

 ×××××××××××××××× 
××××
× × × × ×

−→

0 ××××××××××××××××××××
× × × × × 
××××××××××××××××××××
Q1
A
Q1
∗AQ1 
∗A

Q∗ 
1
−→


•  This time the zeros we introduce are not destroyed 

•  Continue in a similar way with column 2: 
 




× × × × ×

× × × × ×

× × × × × 
× × × × × 

× × × ×
 

0 ×××××××××××
××××

 ××××××××××××××××
××××
× × × ×

0 ×××××××××××××××
× × × × 
Q∗AQ1 
Q∗Q∗AQ1 
1
2
1

Q∗ 
1
−→




× × ××××××××××× 
××××
× × ××××××××××× 
××××
Q1
 
××××××××××× 
××××

 × ××××××××××× 
××××
−→

××××××××××× 
××××
Q∗Q∗AQ1Q2
1
2

3 





































The Hessenberg Form 

•  After m  − 2 steps, we obtain the Hessenberg form: 

× × × × × 
× × × × × 
× × × × 
× × ×

× × 






m−2  · · ·  Q∗ 
Q∗ 
Q∗ 
1 A Q1Q2  · · ·  Qm−2  = H  =

2
{z
}
|
{z
}
|
Q∗ 
Q 
•  For hermitian A, zeros are also introduced above diagonals 





× × × × ×

× × × × ×

× × × × × 
×××××××××××××××××××××××××

× × × × ×
 


0 ××××××××××××××××
××××

 0 ××××××××××××××××
××××

 × × × × ×

0 ××××××××××××××××××××
× × × × × 
Q1
A
∗A

Q∗ 
1 
−→


Q1

−→


× ××××× 0 0 0

× ×××××××××××××××× 
××××

 ×××××××××××××××× 
××××
×××××××××××××××× 
××××
×××××××××××××××× 
××××
Q1
∗AQ1 




producing a tridiagonal matrix T  after m  − 2 steps


4








































Householder Reduction to Hessenberg


Algorithm: Householder Hessenberg 

for k  = 1 to m  − 2 
x  = Ak+1:m,k 
vk  = sign(x1 )�x�2e1  + x 
vk  = vk /�vk �2 
∗Ak+1:m,k:m ) 
Ak+1:m,k:m  = Ak+1:m,k:m − 2vk (vk
∗ 
A1:m,k+1:m  = A1:m,k+1:m − 2(A1:m,k+1:mvk )vk 
•  Operation count (not  twice Householder QR): 
m 
 
X
4(m  − k)2  + 4m(m   − k) = 4m 3/3 +4m 3  − 4m 3/2 = 10m 3/3 
 
 
 
{z
|
}
k=1 
QR 
•  For hermitian A, operation count is twice QR divided by two = 4m3/3


5


Stability of Householder Hessenberg


•  The Householder Hessenberg reduction algorithm is backward stable:


Q˜H˜ Q˜ ∗  = A + δA,  

�δA�  
�A� 

= O(ǫmachine )

where Q˜ is an exactly unitary matrix based on v˜k 

6


 

MIT OpenCourseWare
http://ocw.mit.edu 

 

18.335J / 6.337J Introduction to Numerical Methods
Fall 2010


For information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms . 

