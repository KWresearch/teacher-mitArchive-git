compute R�Q� ...repeat this process until the ma­
trix converges.  From what it converges to, sug­
gest a procedure to compute the eigenvalues and 
eigenvectors of  a matrix  (no need  to prove  that 
it converges in general). 

(b)  Trefethen, problem 7.2. 

(c)  Trefethen, problem 10.4. 

Problem 3:  Schur ﬁne 
In class, we showed that any square m × m matrix A 
can  be  factorized  as A = QT Q∗ ,  where Q  is  unitary 
and  T  is  an  upper-triangular  matrix  (with  the  same 
eigenvalues as T ). 
1.  A  is  called  “normal”  if AA∗  = A∗A.  Show  that 
this  implies  T T ∗  =  T ∗T .  From  this,  show  that  T 
must  be  diagonal.  Hence,  any  normal  matrix  (e.g. 
unitary  or Hermitian matrices) must  be  unitarily  di­
agonalizable.  Hint:  consider  the  diagonal  entries  of 
T T ∗  and T ∗T , starting from the (1,1) entries and pro­
ceeding diagonally downwards by induction. 
2.  Given  the  Schur  factorization  of  an  arbitary 
A  (not  necessarily  normal),  describe  an  algorithm 
to  ﬁnd  the  eigenvalues  and  eigenvectors  of  A,  as­
suming  for  simplicity  that  all  the  eigenvalues  are 
distinct.  The  ﬂop  count  should  be  asymptotically 
Km3 + O(m2 ); give the constant K . 

18.335 Problem Set 3 

Problem  1:  SVD  and  low-rank  approxi­
mations 
(a)  Show  that  for  the A = Qˆ Rˆ decomposition  from 
Trefethen chapter 7, A and Rˆ have the same sin­
gular values. 

(b)  Trefethen, probem 4.5. 

(c)  Trefethen, problem 5.2. 

(d)  Take  any  grayscale  photograph  (either  one  of 
your  own,  or  off  the  web).  Scale  it  down  to 
be  no  more  than  1500 × 1500  (but  not  nec­
essarily  square),  and  read  it  into  Matlab  as 
a  matrix  A  with  the  imread  command  [type 
“doc  imread”  for  instructions: 
in  particu­
lar  you’ll  want  to  use  a  command  like  A = 
double(imread(’myfile.jpg’));].  (Color 
images are more complicated because they have 
red/green/blue  components;  I would  stick with 
a grayscale image.) 

(i)  Compute  the  SVD  of	 A  (Matlab’s  svd 
command)  and  plot  the  singular  values 
(e.g.  as  a  histogram,  possibly  on  a  log 
scale) to show the distribution. 
(ii)  Compute	 a 
lower-rank  approximation 
of  A  by  taking  only  the  largest  ν  sin­
gular  values  for  some  ν  (as  in  theorem 
5.8).  You  can  save  this  approximation 
as  an  image  using  imwrite,  or  you 
can  plot  it  directly  using  the  pcolor 
command 
[pcolor(flipud(A)); 
colormap(gray);  shading  interp; 
axis  equal]. How big does ν  have to be 
to get a reasonably recognizable image? 

Problem 2: QR and orthogonal bases 
(a)  Prove  that A = QR  and B = RQ  have  the  same 
eigenvalues,  assuming  A  is  a  square  matrix. 
Construct a random 10 × 10 real-symmetric ma­
trix  in  Matlab  via  X=rand(10,10);  A  =  X’ 
* X.  Use  [Q,R]  =  qr(A)  to  compute  the  QR 
factorization  of  A,  and  then  compute  B = RQ. 
Then  ﬁnd  the  QR  factorization  B = Q�R� ,  and 

1 

MIT OpenCourseWare
http://ocw.mit.edu 

18.335J / 6.337J Introduction to Numerical Methods

 
Fal l 2010 
 

For information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms . 

