Lecture 17

Other Eigenvalue Algorithms 


MIT 18.335J / 6.337J


Introduction to Numerical Methods


Per-Olof Persson


November 7, 2006


1


The Jacobi Algorithm


•  Diagonalize 2 ×  2 real symmetric matrix by a Jacobi rotation: 
 
 
 
 
�
�
�
�
0 
�= 0 
a d 
0  = 0 
d b 

J  = 

J T 

where 

 

J  = 

�
�
•  Iteratively apply transformation to 2 rows and 2 columns of A  ∈  Rm×m 

cos θ 
sin θ 
− sin θ  cos θ

2d 
b − a 

tan(2θ) =


 

, 

•  Loop over all pairs of rows/columns, quadratic convergence 

•  O(m2 ) steps, O(m) operations per step =⇒  O(m3 ) operation count 

2


�
The Method of Bisection


•	 Idea: Search the real line for roots of p(x) = det(A − xI ) 

•	 Finding roots from coef ﬁcients highly  unstable, but p(x) could be 
computed by elimination 

•	 Impor tant proper ty:  Eigenvalues of principal upper-left square 
submatrices A(1) , . . . , A(m)  interlace 

(k+1) 
λj 

(k+1) 
(k)
< λj  < λj+1 

A(1) 
A(2) 
A(3) 
A(4) 

3


The Method of Bisection


•	 Because of the interlacing proper ty:  The number of negative eigenvalues 
of A equals the number of sign changes in the Sturm sequence 

1,  det(A(1) ),  det(A(2) ), . . . ,  det(A(m) ) 

•	 Shift A to get number of eigenvalues in (−∞, b) and twice for [a, b) 

•	 Three-term recurrence for the determinants: 

det(A(k) ) = ak det(A(k−1) ) − b2 
k−1det(A(k−2) ) 

•	 With shift xI  and p(k) (x) = det(A(k)  − xI ): 

2 
p(k) (x) = (ak  − x)p(k−1) (x) − bk
−1p(k−2) (x) 

•  O(mlog(ǫmachine ) ﬂops per eigen value, always high relative accuracy


4


The Divide-and-Conquer Algorithm


•  Split symmetric tridiagonal T  into submatrices: 


T  = 

T1 

β 

β 

ˆT1 

= 

+ 

β 
β 

β 
β 

T2 

ˆT2 

•  The sum of a 2 ×  2 block-diagonal matrix and a rank-one correction 

•  Split T  in equal sizes and compute eigenvalues of Tˆ1 , Tˆ2  recursively 

•  Solve nonlinear problem to get eigenvalues of T  from those of Tˆ1 , Tˆ2 

5


The Divide-and-Conquer Algorithm


•  Suppose diagonalizations Tˆ1
 = Q1D1Q
1

T
 and Tˆ2

been computed. We then have 
� ��
�
Q2 
T

T
), where q

1	 , q
1


 
�
� �
+ β zz T  Q
T 
1

T

is last row of Q1  and q

2


T

with z
 = (q


D1 

Q1	

T  = 

D2	

T
 have

= Q2D2Q
2


 

Q
T

2


�
is ﬁrst  row of Q2


T

2


•	 This is a similarity transformation =⇒  Find eigenvalues of diagonal matrix 
plus rank-one correction 

6


	
The Divide-and-Conquer Algorithm 

•  Eigenvalues of D + wwT  are the roots of the rational function 
m 
  w
2 
j 
�
f (λ) = 1 + 
dj  − λ 
j=1 

d
1 

d
2 

d
3 

d
4 

λ

7 

The Divide-and-Conquer Algorithm


•	 Solve the secular equation f (λ) = 0 with nonlinear solver 

•	 O(m) ﬂops per root,  O(m2 ) ﬂops f or all roots 

2

 

2


•	 Total cost for divide-and-conquer algorithm: 
�
�
m
m

O m 2  + 2 
m2 
22 
•	 For computing eigenvalues only, most of the operations are spent in the 
tant 
tridiagonal reduction, and the constant in “Phase 2 ” is not impor

2 
2
m
m
+ 4  + 8  +	 · · ·  + m 
42 
82	

=	 O(m 2 )

•	 However, for computing eigenvectors, divide-and-conquer reduces 
Phase 2 to 4m3/3 ﬂops compared to  6m3  for QR 

8


	
MIT OpenCourseWare
http://ocw.mit.edu 

18.335J / 6.337J Introduction to Numerical Methods
Fall 2010
 

For information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms . 

