18.03 Diﬀerence Equations and Z-Transforms
Jeremy Orloﬀ

Diﬀerence equations are analogous to 18.03, but without calculus. On the last page
is a summary listing the main ideas and giving the familiar 18.03 analog. The two
line summary is:
1. In 18.03 the answer is eat , and for diﬀerence equations the answer is an .
2. The diﬀerential operator D has both algebraic and analytic analogs in diﬀerence
equations.

Sequences x[n]

(also called signals or discrete functions)

Examples:
a)
•
4
3
2
1

•

•

0

•
1

. . .
−2 −1
x[n] = (1/2)n
⇒ . . . x[−2] = 4, x[−1] = 2,
x[0] = 1, x[1] = 1/2, . . .
(cid:26) 1
c) Unit sample:
if n = 0
0
otherwise
(cid:26) 0
d) Unit step:
if n < 0
if n ≥ 0
1

u[n] =

δ [n] =

b)
4
3
2
1

. . .

•
2

•
0

. . . •
•
(cid:26) 0
−2 −1
if n < 0
2n if n ≥ 0

x[n] =

•

2

. . .

•

1

1

1

. . . •
•
−2 −1

. . . •
•
−2 −1

•

0

•

0

•
1

•

1

. . .

. . .

•
2

•

2

Diﬀerence Equations
y [n] − y [n − 1] = x[n].
Example 1:
(x = input, y = output)
y [n] + 8y [n − 1] + 7y [n − 2] = x[n].
Example 2:
y [n] + 8y [n − 1] + 7y [n − 2] = x[n] − x[n − 1].
Example 3:
y [n] − ny [n − 1] = x[n]
Example 4:
linear time invariant (LTI).
Examples 1-3 are constant coeﬃcient equations, i.e.
Example 4 is not constant coeﬃcient. We will focus on constant coeﬃcient equations.

(continued)

1

18.03 Diﬀerence Equations and Z-Transforms

2

In practice it’s easy to compute as many terms of the output as you want:
the
diﬀerence equation is the algorithm.
2 y [n − 1] = u[n] ﬁnd y [n] for n ≥ 0.
Example: For the diﬀerence equation y [n] − 1
Assume rest IC y [−1] = 0.
(Here u[n] is the unit step function.)
2 y [n − 1].
answer: Rewrite the equation as y [n] = u[n] + 1
4
1
31/16

Make a table: n
u[n]
y [n]

3
1
15/8

2
1
7/4

1
1
3/2

. . .
. . .
. . .

-1
0
0

0
1
1

We have already seen diﬀerence equations with Euler’s formula. For example the IVP
y (cid:48) = ky ; y(0) = 1 becomes the diﬀerence equation
yn+1 = yn + khyn = (1 + kh)yn ⇔ yn+1 − (1 + kh)yn = 0.
Here instead of y [n] we wrote yn
(cid:88)
n

Z -transform (analog of Laplace transform)
(cid:90) ∞
Let x[n] be a sequence. Its z -transform is X (z ) =
f (t)e−st dt; e−s ↔ z−1 .)
(analogous to F (s) =
0
When it’s useful we will denote the z -transform of x by Z x (similar to using Lx for Laplace).
∞(cid:88)
n=0
If x[n] = 0 for n < 0 and x[n] = an for n ≥ 0 then X (z ) =

z−n = 1 + z−1 + z−2 + . . . =
∞(cid:88)
n=0

Example 2: z -transform of u[n] is U (z ) =

z -transform of δ [n] is 1.

1
1 − az−1 .

1
1 − z−1 .

anz−n =

x[n]z−n .

Example 1:

Example 3:

Convolution
(cid:88)
Start with two sequences x[n] and y [n] their convolution is deﬁned as
(x ∗ y)[n] =
x[k ] y [n − k ].
(cid:88)
(cid:88)
k
(cid:33)
(cid:33) (cid:32)(cid:88)
(cid:32)(cid:88)
x[k ]z−k , Y (z ) =
This arises in the following way. X (z ) =
(cid:88)
(cid:88)
m
k
⇒ X (z )Y (z ) =
x[k ]y [m]z−k−m =
y [m]z−m
x[k ]z−k
m
m
k
k
i.e., X (z )Y (z ) = Z (x ∗ y).

y [m]z−m .
(cid:88)
n

=

(continued)

(cid:33)

z−n

x[k ]y [n − k ]

(cid:32)(cid:88)
k

18.03 Diﬀerence Equations and Z-Transforms

3

Delay Operator (algebraic analog of D)
(Ry)[n] = y [n − 1].
Delay operator:
(Also called right shift operator.)
(R2y)[n] = y [n − 2] etc. Algebraically we work with R in diﬀerence equations
So,
and Z -transforms in much the same way we work with D in diﬀerential equations
and Laplace transforms.

•

•

•

2

Ry =

•

2

•

1

•

3

•
•
•
−3 −2 −1

•
0

Example:

y =

1

0

•
•
•
−3 −2 −1
(cid:88)
(cid:88)
(Z -transform of R) Z (Rx) = z−1X .
Theorem:
Proof: Z (Rx) =
(Rx)[n]z−n =
x[n − 1]z−n
x[n − 1]z−(n−1) = z−1 (cid:88)
= z−1 (cid:88)
n
n
m
n

x[m]z−(m) = z−1X (z ). QED

General constant coeﬃcient diﬀerence equations and the z -transform.
General form: P (R)y = Q(R)x.
z -transform P (z−1 )Y = Q(z−1 )X .
x is called the input and y is the output or response.
(1 + 8R + 7R2 )y = (1 − R)x
Example: Example 3 above has
Using the formula for the z -transform of R we get (1 + 8z−1 + 7z−2 )Y = (1 − z−1 )X .

System (or transfer) function
The diﬀerence equation P (R)y = Q(R)x with initial conditions
Theorem:
Q(z−1 )
x[n] = 0 and y [n] = 0 for n < 0 (called rest initial conditions ) satisﬁes Y =
X.
P (z−1 )
Q(z−1 )
P (z−1 )
Thus, with rest IC, Y (z ) = X (z )H (z ).

the system function. Often, we will denote it H (z ).

We call

(The need for rest IC is explained in the odds and ends section later in these notes.)

Unit sample response
By deﬁnition, the unit sample response satisﬁes the equation
P (R)h = Q(R)δ with rest IC.
It’s easy to see that Z (h) = H is the system function.
Theorem: The equation P (R)y = Q(R)x with rest IC has solution y = x ∗ h,
where h is the unit sample response of the system.
Proof: From above we know Y (z ) = X (z )H (z ) = Z (x ∗ h). QED

(continued)

18.03 Diﬀerence Equations and Z-Transforms

4

Example: Solve y [n] − ay [n − 1] = δ [n], with rest IC.
(cid:26) 0
(1 − az−1 )Y = 1 ⇒ Y =
1
1 − az−1 = 1 + az−1 + (az−1 )2 + . . ..
Z -transform:
an

for n < 0
for n ≥ 0

⇒ y [n] =

Poles, stability and homogeneous equations
The system P (R)y = Q(R)x has system function H (z ) = Q(z−1 )
P (z−1 ) .
So the poles of H (z ) are exactly the roots of P (z−1 ).
(We need to assume P and Q have no common factors.)

As in diﬀerential equations these poles give us the solutions to the corresponding
homogeneous equation, i.e., P (R)y = 0.
Example: Solve the homogeneous equation P (R)y = y [n] + 8y [n − 1] + 7y [n − 2] = 0.
y [n] = an .
Trial solution:
an + 8an−1 + 7an−2 = 0 ⇒ an−2 (a2 + 8a + 7) = 0.
Substitution:
a2 + 8a + 7 = 0.
Characteristic equation:
a = −7, −1.
Roots:
y1 [n] = (−7)n , y2 [n] = (−1)n .
Two solutions:
(This follows from the linearity of P (R).)
General solution:
y = c1y1 + c2y2 .
(Below we will discuss the existence and uniqueness theorem that guarantees this
gives all possible solutions.)

=

.

Note,

z 2
1
1
1 + 8z−1 + 7z−2 =
P (z−1 )
z 2 + 8z + 7
equation are the same as the zeros of the denominator which are the poles of the
system function.

So the roots of the characteristic

Stability
As in 18.03, we say the system P (R)y = Q(R)x is stable if the homogeneous solution
yh [n] → 0 as n → ∞ no matter what the initial conditions.
That is, the initial conditions don’t aﬀect the long-term behavior of the system.
Theorem: The system P (R)y = Q(R)x is stable if and only if all the poles of
the system function have magnitude < 1. (We assume P and Q have no common
factors.)
Proof: As in the example just above, the general homogenous solution is a linear
combination of sequences of the form yj [n] = an
j , where aj is a pole of the system
function. This goes to 0 if and only if |aj | < 1.

(continued)

18.03 Diﬀerence Equations and Z-Transforms

5

Graphically the system is stable if all the poles are inside the unit circle. (Compare
this with diﬀerential equations where the homogeneous solution is built from functions
of the form yj (t) = eat , so we need a in the left half-plane.)

Example:
Diﬀerence equations:

Im
×
×
×
×

Re

Stable discrete system

Diﬀerential equations:

×

Im
×
×

Re

×
Stable continuous system

Im ×
×
×

Re

×
Unstable discrete system

Im
×
××
×

Re

Unstable continuous system

Odds and ends

Causality means the future doesn’t aﬀect the past. Our systems
Causality:
P (R)y = Q(R)x are causal because y [n] depends only on y [k ] and x[k ] for k ≤ n.
Linearity: P (R) is linear, i.e. P (R)(c1y1 + c2y2 ) = c1P (R)y1 + c2P (R)y2 .
Immediate from the deﬁnition of R and P (R).
Proof:
Using linearity we see that the general solution to P (R)y = Q(R)x is given by
y = yp + yh , where yp is any particular solution and yh is the general homogeneous
solution.
(cid:18) 1
y [n − 1] = u[n].
Example: Find the general solution to y [n] − 1
2
Homogeneous solution: Characteristic equation: a − 1
= 0 ⇒ a =
2
2
Particular solution: Use rest IC, so y [n] = 0 for n < 0.
We could ﬁnd y [n] for n ≥ 0 directly, instead we’ll ﬁnd it using the z -transform.
(cid:26) 0
1 − z−1 ⇒ Y =
(1 − 1
1
1
B
A
z−1 )Y =
1 − z−1 .
(1 − 1
1 − 1
2 z−1 )(1 − z−1 )
=
2 z−1
2
Using coverup we ﬁnd A = −1, B = 2 ⇒ yp [n] =
for n < 0
for n ≥ 0
2 − (1/2)n
Note, for n ≥ 0 we can write the answer in the form yp [n] = 1 +
+ · · · +
1
1
2
4
Finally, the general solution is y = yp + yh .

⇒ yh [n] = c

(cid:18) 1
2

(cid:19)n

.

1
2

+

+

(cid:19)n

.

(continued)

18.03 Diﬀerence Equations and Z-Transforms

6

If a system is stable then yh [n] → 0 for all initial conditions. In this
Transient:
case we call yh the transient.
Exponential Input Theorem: A solution to P (R)y = an is y [n] =
Proof: Ran = an−1 = a−1an ⇒ P (R)an = P (a−1 )an .
(see below for the extended version of this theorem)

an
P (a−1 )

.

Discretizing DEs:
In previous sections we have seen the algebraic analogy between
the diﬀerential operator D and the right shift operator R. That is, the algebra is
similar when dealing with either of these operators. But, for numerical methods
we need more than this. To discretize a diﬀerential equation we need to replace
D by something that is analytically analogous. You have already seen this when
we learned Euler’s method. Here we will discretize DEs two diﬀerent ways: using
forward diﬀerences and using backward diﬀerences. We will relate them to numerical
methods you have already learned. We will also discuss issues of stability.

Let yc (t) be a function of the continuous variable t.
We can discretize yc by picking a stepsize h and a start time t0 and letting
y [n] = yc (t0 + nh).

Forward diﬀerence:
left shift operator.

Here are two ways to discretize the diﬀerential operator D (using the same stepsize h).
L − I
y [n + 1] − y [n]
, where L is the
h
h
y [n] − y [n − 1]
I − R
h
h

Backward diﬀerence:

(∆f y)[n] =

, i.e. ∆f =

(∆b y)[n] =

, i.e. ∆b =

.

Example: Use forward and backward diﬀerences to discretize the ﬁrst order constant
coeﬃcient IVP.

(C )

y (cid:48)
c + kyy = fc (t),

yc (0) = 1.

Pick a stepsize h > 0 and discretize fc (t) by f [n] = fc (nh).
Using forward diﬀerences replace D by ∆f . Then yc (nh) ≈ y [n], where
y [0] = 1.
(∆f y)[n] + k y [n] = f [n],
⇒ y [n + 1] − y [n]
+ k y [n] = f [n] ⇔
h
y [n + 1] − (1 − hk) y [n] = hf [n].
(F )
Using backward diﬀerences replace D by ∆b . Then yc (nh) ≈ y [n], where
y [0] = 1.
(∆b y)[n] + k y [n] = f [n],

(continued)

18.03 Diﬀerence Equations and Z-Transforms
⇒ y [n] − y [n − 1]
h

+ k y [n] = f [n] ⇔ (1 + hk) y [n] − y [n − 1] = hf [n] ⇔
y [n] − 1
y [n − 1] =
h
1 + hk
1 + hk

f [n].

(B )

7

Example: (continued) Examine the stability of the original continuous system (C )
and its discretized versions (F ), (B ).

. which has a pole at s = −k .
1
The continuous system (C ) has system function
s + k
The homogeneous equation (the DE with fc (t) = 0) has solution yc = C e−kt .
Looking at either the poles or the homogeneous solution we conclude the system is
stable for k > 0.

1
1 − (1 − hk)z−1 .
The discrete system (F ) has system function
The system has a pole at z = 1 − hk ⇒ it’s stable if |1 − hk | < 1.
If k > 0 then we need 0 < h < 2/k for stability. Thus, even when (C ) is stable, (F )
is only stable for small h.

1
1 − z−1/(1 + hk)
.
The discrete system (B ) has system function
The system has a pole at z = 1/(1 + hk) ⇒ it’s stable if 1/|1 + hk | < 1.
If k > 0 then (B ) is stable for all h > 0. Thus, when (C ) is stable so is (B ) for any h.

We can see the above results graphically by discretizing the homogeneous equations
using various values of h. In all of the plots below, the black exponential curve is the
continuous solution yc (t) = e−kt . Notice how, when discretizing a stable DE, forward
diﬀerences change quality as h decreases, while the backward diﬀerences do not.
yc (0) = 1 ⇒ yc (t) = e−kt .
y (cid:48)
c + ky = 0;
y [n + 1] − (1 − hk) y [n] = 0;
y [0] = 1 ⇒ y [n] = (1 − hk)n
y [0] = 1 ⇒ y [n] = (1 + hk)−n
y [n − 1] = 0;
y [n] − 1
1 + hk

(BH )

(CH )

(F H )

(continued)

Forward difference: k = 1.0, h = 2.1Unstable: 1−hk = −1.1lllllll135791100.51tyBackward difference: k = 1.0, h = 2.1Stable: 1/(1+hk) = 0.3lllllll135791100.51ty18.03 Diﬀerence Equations and Z-Transforms

8

(continued)

Forward difference: k = 1.0, h = 2.0Unstable: 1−hk = −1.0lllllll135791100.51tyBackward difference: k = 1.0, h = 2.0Stable: 1/(1+hk) = 0.3lllllll135791100.51tyForward difference: k = 1.0, h = 1.5Stable, oscillatory: 1−hk = −0.5lllllllll135791100.51tyBackward difference: k = 1.0, h = 1.5Stable: 1/(1+hk) = 0.4lllllllll135791100.51tyForward difference: k = 1.0, h = 0.8Stable: 1−hk = 0.2lllllllllllllllll135791100.51tyBackward difference: k = 1.0, h = 0.8Stable: 1/(1+hk) = 0.6lllllllllllllllll135791100.51ty18.03 Diﬀerence Equations and Z-Transforms

9

Relation to numerical methods for solving diﬀerential equations
c = F (yc , t) = −kyc + f (t). The discretizations
In the examples above we can write y (cid:48)
are speciﬁc cases of the following methods.
Forward diﬀerences ↔ Euler’s method:
t[n] = nh and y [n + 1] = y [n] + h F (y [n], t[n]).
Backward diﬀerences ↔ Backward Euler:
t[n] = nh and y [n + 1] = y [n] + h F (y [n + 1], t[n + 1]).
The Backward Euler is also called implicit Euler because it only gives an implicit
formula for y [n + 1].

In general, for a constant coeﬃcient linear DE Euler’s method corresponds to dis-
cretizing D using ∆f and implicit Euler corresponds to using ∆b . Backward Euler
maintains stability for any stepsize, while (forward) Euler only maintains stabiliy for
small stepsize. This is why, despite the extra computation the implicit techniques are
often preferable.

Likewise, there are forward and backward Runge-Kutta methods and the discussion
of stability holds for them also.

Analogies with diﬀerential equations
1. Algebraic analogy: Most often in 18.03 our system was P (D)y = f , but some-
times we had P (D)y = Q(D)f . For example, for LRC circuits we have diﬀerential
equations in q (the charge on the capacitor) and i (the current in the circuit). The
input voltage E is handled slightly diﬀerently in each equation.
i. Lq (cid:48)(cid:48) + Rq (cid:48) + 1
C q = E .
Input = E is used as is.
ii. Li(cid:48)(cid:48) + Ri(cid:48) + 1
C i = E (cid:48) .
Input = E is modiﬁed.

(continued)

Forward difference: k = 1.0, h = 0.3Stable: 1−hk = 0.7lllllllllllllllllllllllllllllllllllllllllll135791100.51tyBackward difference: k = 1.0, h = 0.3Stable: 1/(1+hk) = 0.8lllllllllllllllllllllllllllllllllllllllllll135791100.51ty18.03 Diﬀerence Equations and Z-Transforms

10

In (i) we have P (D)q = E . In (ii) we have the more general P (D)i = Q(D)E , which
Q(s)
. This is algebraically analogous to the diﬀerence equation
has system function
P (s)
Q(z−1 )
P (R)y = Q(R)x with system function
P (z−1 )
2. Analytic analogy: This is covered in the section ’Discretizing DEs’ above. There
we saw two ways to discretize D, D → ∆b and D → ∆f .
If P (R) has degree m then the IVP
Theorem: (Existence and uniqueness)
y [0] = b0 , y [1] = b1 , . . . , y [m − 1] = bn−1
P (R)y = 0;

.

has a unique solution.
Proof: This is clear. Simply solve for y [n] recursively as we did in the ﬁrst order example.
We show a degree two example.
Example: Solve y [n] + a1y [n − 1] + a2y [n − 2] = 0, y [0] = b1 , y [1] = b1 .
y [n] = −a1y [n − 1] − a2y [n − 2].
General equation:
y [0] = b0 , y [1] = b1 ⇒ y [2] = −a1 b0 − a2b2 ⇒ y [3] = −a1y [2] − a2y [1], etc.
We see that y [n] is uniquely determined.

Convolution formula as a result of linear time invariance
Consider the equation P (R)y [n] = Q(R)x[n] with rest IC. Let h be the unit sample
(cid:88)
response. We will rederive the formula y = x ∗ h using linearity and time invariance.
Let y [n] = (x ∗ h)[n] =
x[k ]h[n − k ].
k
The sequence h[n] is the solution to the equation P (R)y [n] = Q(R)δ [n].
(cid:88)
Time invariance means that h[n − k ] is a solution to P (R)y [n] = Q(R)δ [n − k ].
x[k ]δ [n − k ], so by linearity we have
(cid:88)
(cid:88)
(cid:88)
We can write x[n] =
k
P (R)y [n] = P (R)
x[k ]h[n − k ] =
(cid:88)
k
k
k
x[k ]δ [n − k ] = Q(R)x[n]
= Q(R)
k
We have shown that y = x ∗ h is a solution.

x[k ]P (R)h[n − k ] =

x[k ]Q(R)δ [n − k ]

(continued)

18.03 Diﬀerence Equations and Z-Transforms

11

Growth and decay rates
If a is a complex number then if |a| < 1 the rate that an decays to 0 depends on
|a|, the closer to 1 the slower an decays. Likewise if |a| > 1 the rate that an grows
depends on |a|.
combination y [n] = (cid:80) cj an
If a1 , a2 , . . . , am are complex numbers then the growth or decay rate of the linear
j is given by the biggest value of |aj |. If all |aj | < 1 then it
is a decay rate and the bigger the rate (the closer to 1) the slower y [n] decays.
Example: Both systems are stable. System A has a faster decay rate than system
B, i.e., the transient disappears faster for system A than for system B.

Im

×
×

Re

Im

×

×

Re

for n < 0
for n ≥ 0

.

yh [n] = c.

System A

Homogeneous solution:

Particular solution with rest IC: yp [n] =

System B
If y [n] is the solution to P (R)y = Q(R)δ then we needed
The need for rest IC:
Q(z−1 )
rest IC to write Y (z ) =
. We’ll explain this using a simple example.
P (z−1 )
(cid:26) 0
Consider P (R)y [n] = y [n] − y [n − 1] = δ [n].
(cid:26) c
1
for n < 0
for n ≥ 0
General solution:
y [n] = yp [n] + yh [n] =
.
1 + c
∞(cid:88)
Since P (R)(yp + yh ) = δ the z -transform gives P (z−1 )(Yp + Yh ) = 1. The reason we
can’t simply divide by P (z−1 ) is because P (z−1 )Yh (z ) = (1 − z−1 )
cz−n = 0.
n=−∞
Algebraically we say that P (z−1 ) and Yh (z ) are zero divisors, that is, they are non-
zero but when multiplied together they give 0. Just like dividing by 0, we have to
be careful doing division with zero divisors. By demanding rest IC we only consider
z -transforms of sequences y with y [n] = 0 for n < 0. It is easy to see that this set
(called a ring) does not have zero divisors.

(continued)

18.03 Diﬀerence Equations and Z-Transforms

12

Extended Exponential Input Theorem
Shift Law: Let v [n] be a sequence and w[n] = anv [n] then (1 − aR)w = an (1 − R)v .
(Proof is easy algebra).
Example: Solve (1 − aR)x = an .
The exponential input theorem fails because P (a−1 ) = 1 − aa−1 = 0.
Try x = anv . Substituting x into the equation and using the shift law gives
(1 − aR)x = an ⇔ (1 − aR)(anv) = an (1 − R)v = an ⇔ (1 − R)v = 1
⇒ v [n] = n ⇒ x[n] = nan .
(If we want we can add the homogeneous solution xh [n] = C an to x.)
Example: Solve (1 − aR)2x = an .
Again, try the solution x = anv . Substituting gives
(1 − aR)2x = an ⇔ an (1 − R)2v = an ⇔ (1 − R)2v = 1 ⇒ (1 − R)v = n
⇒ x[n] =
⇒ v [n] =
n(n + 1)
n(n + 1)
an .
2
2

Deﬁne Sk [n] as S0 [n] = 1, and Sk [n] =

n(n + 1) · · · (n + k − 1)
k !

for k ≥ 1.

Lemma:

Note: Sk [0] = 0 and Sk [1] = 1.
(1 − R)Sk = Sk−1 .
n(n + 1) · · · (n + k − 1) − (n − 1)n · · · (n + k − 2)
(1 − R)(Sk )[n] = Sk [n] − Sk [n − 1] =
Proof:
k !
[(n + k − 1) − (n − 1)]n(n + 1) · · · (n + k − 2)
n(n + 1) · · · (n + k − 2)
(k − 1)!
k !

= Sk−1 [n].

=

=

Theorem (extended exponential input)
Suppose Q(s) is a polynomial and Q(a−1 ) (cid:54)= 0 then the diﬀerence equation
an
Q(R)(1 − aR)k x = an has solution x[n] =
Sk [n].
Q(a−1 )
Proof: By the shift law and the lemma (1 − aR)k x =
an
Therefore Q(R)(1 − aR)k x = Q(R)
Q(a−1 )

an
Q(a−1 )

(1 − aR)kSk =

= an .

an
Q(a−1 )

S0 =

an
Q(a−1 )

.

One-sided sequences
We state without proof some ’one-sided’ results.
1. (1 − R)x = u[n] has solution x[n] = (n + 1)u[n].
2. (1 − R)k x = u[n] has solution x[n] = Sk [n + 1]u[n].
3. (1 − aR)k x = anu[n] has solution x[n] = anSk [n + 1]u[n].

(continued)

18.03 Diﬀerence Equations and Z-Transforms

13

Summary
(correspondence between diﬀerence and diﬀerential equations)

Sequences: x[n]

Diﬀerence equations
(cid:88)
n

z -transform:
Z (x) = X (z ) =

x[n]z−n
(cid:88)
k

Convolution:

(x ∗ y)[n] =

x[k ]y [n − k ]

Functions: x(t)

Diﬀerential equations
(cid:90) ∞
0
x(u)y(t − u) du

Laplace transform:
L(x) = X (s) =
(cid:90) t
0
L(x ∗ y) = X (s)Y (s)

(x ∗ y)(t) =

x(t)e−st dt

Operators

Dx = x(cid:48)

(∆bx)[n] =

D = derivative


Z (x ∗ y)(z ) = X (z )Y (z )
R = delay = right shift

∆b = backward diﬀerence
∆f = forward diﬀerence
(Rx)[n] = x[n − 1]
x[n] − x[n − 1]
h
x[n + 1] − x[n]
(∆f x)[n] =
h
(The correspondence R ↔ D is an algebraic one and ∆f , ∆b ↔ D is an analytic one.)
Causal LTI system: P (R)y = Q(R)x
P (D)y = Q(D)x (18.03 usually: P (D)y = x)
(x = input, y = response, assume P and Q have no common factors.)
Q(z−1 )
System function: H (z ) =
P (z−1 )
Unit sample resp.: P (R)h = Q(R)δ , rest IC
Z (h) = H
P (R)y = Q(R)x; rest IC
⇒ Y = XH , y = x ∗ h

Q(s)
P (s)
Unit impulse resp.: P (D)h = Q(D)δ , rest IC
L(h) = H

P (D)y = Q(D)x; rest IC
⇒ Y = XH , y = x ∗ h

H (s) =

Stability: poles of H inside unit circle

poles of H in left half-plane

Decay rate of transient determined by pole
with greatest magnitude
Q(R)
P (R)

(In 6.01 they also write

for the system function.)

decay rate determined by right most pole
(greatest real part)

MIT OpenCourseWare 
http://ocw.mit.edu 

18.03 Differential Equations(cid:13)(cid:10)�� 
Spring 2010 

For information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms. 

