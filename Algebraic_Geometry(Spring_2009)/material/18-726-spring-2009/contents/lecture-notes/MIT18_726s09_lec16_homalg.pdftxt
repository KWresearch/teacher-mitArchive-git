MIT OpenCourseWare
http://ocw.mit.edu 

18.726 Algebraic Geometry 
Spring 2009 

For information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms . 

18.726:  Algebraic  Geometry  (K.S.  Kedlaya,  MIT,  Spring  2009) 
Homological  algebra  (updated  8  Apr  09) 

We  now  enter  the  second  part  of  the  course,  in  which  we  use  cohomological  methods  to 
gain further insight into the theory of  schemes.  To start  with, let  us recall  some of  the basics 
of  homological  algebra.  The  original  reference  for  derived  functors  is  the  book  Homological 
Algebra  of  Cartan  and  Eilenberg,  and  for  cohomological  functors  is  Grothendieck’s  article 
Sur  quelques  points  d’alg`ebre  homologique ;  however,  any  good  modern  book  on  homolog­
ical  algebra  (e.g.,  Weibel,  An  Introduction  to  Homological  Algebra )  should  suﬃce. 
(It  is 
worth  keeping  in  mind  Lang’s  suggested  exercise  in  homological  algebra:  take  any  book  on 
homological  algebra,  read  the  statements  of  the  theorems,  and  prove  them  all  yourself.) 

1  Abelian  categories 

We  saw  once  before  the  notion  of  an  abelian  category.  This  is  a  category  C  in  which  each 
homset  has  the  structure  of  an  abelian  group  in  a  manner  compatible  with  composition, 
with  some  additional  restrictions  designed  to  make  things  well-behaved.  Let’s  recall  some 
of  these.  First  of  all,  there  must  exist  biproducts,  i.e.,  for  any  nonnegative  integer  n  and 
any  ob jects  X1 , . . . , Xn  in  C ,  there  must  exist  an  ob ject  Y  and  morphisms  ιi  :  Xi  →  Y  and 
is  the  product  of  the  Xi  (using  the  πi )  and  the 
πi  :  Y  →  Xi  for  i  = 1, . . . , n  such  that  Y 
n 
coproduct  of  the  Xi  (using the  ιi ),  and �i
=1  ιi  ◦  πi  = 1. 
Also,  each  morphism  must  have  a  kernel  and  a  cokernel. A  kernel  of  the  morphism 
f  :  X  →  Y  to  be  a  limit  of  the  diagram 

X 

������� 
� �

Y 

0 

�������� 

We  write  Ker(f ) for  the  domain  of  a  kernel.  Similarly,  a  cokernel  of  f  is  a  colimit  of 

�������� 

Y 

X 

�������� 
� �

0 

We  write  Coker(f ) for  the  codomain  of  a  cokernel. 
Finally,  we  insist  that  every  monomorphsm  be  the  kernel  of  its  cokernel,  and  every 
epimorphism  be  the  cokernel  of  its  kernel. 
Examples: 

1.  Ab,  the  category  of  abelian  groups. 

2.  ModR ,  the  category  of  modules  over  a  ring.  We  can  drop  our  running  commutativity 
hypothesis  if  we  choose  to  work  with,  say,  left  modules. 

1 

�
�
�
�
3.  The  category  of  sheaves  on  a  ﬁxed  topological  space  with  values  in  another  abelian 
category. 

I  recommend just thinking  about the  case  of  abelian groups.  The  Freyd-Mitchel l  embedding 
theorem  implies that  most things you prove  about  an abelian  category  can be deduced from 
the  case  of  abelian  groups,  where  you  can  use  “diagram-chasing”  arguments. 

2  Complexes  and  exact  sequences 

Throughout  this  section,  all  ob jects  are  in  a  particular  abelian  category  C . 
A  sequence  of  morphisms 

· · · 

→  C i−1  di−1 
→  C i di 
→  C i+1 

→  · · · 

is  a  complex  if  the  composition  of  any  two  of  the  arrows  is  zero,  i.e.,  di  ◦  di−1  =  0  for  all 
i.  Note  that  I  number  the  ob jects  so  that  the  arrows  point  in  the  increasing  direction; 
this  is  called  a  cohomological grading.  If  I  numbered  things  the  other  way,  I  would  have  a 
homological grading. I will  mostly  talk  about the cohomological grading because that is what 
is most  convenient for algebraic geometry.  (In a homological grading, you usually write with 
subscripts  instead  of  superscripts,  i.e.,  di  :  Ci  →  Ci−1 .) 
The  i-th  cohomology  of  a  complex  C · , denoted  hi (C ·),  is  deﬁned as 

hi (C  ·  ) = 

ker(di ) 
im(di−1) 

. 

We  say  that  C is  exact  if  hi (C ·) = 0 for all  i. 
·
A  morphism  of  complexes  f ·  :  C ·  →  D ·  is  a  commutative  diagram 

·  ·  · 

·  ·  · 

� C i−1  di−1 
f i−1 
� D i−1  di−1 

� C i 
f i 

� D i 

di 

di 

� C i+1 
f i+1 

� D i+1 

� ·  ·  · 

� ·  ·  · 

With  this  deﬁnition,  we  obtain  a  category  of  complexes  with  values  in  C ;  this  is  again  an 
abelian  category (exercise). 
Any  morphism  f ·  :  C ·  →  D ·  induces  maps 

f i  :  hi (C · ) →  hi (D · ) 

for  each  i.  We  say  f  is  a  quasi-isomorphism  (or  quasiisomorphism,  but  I’ll  spare  you  the 
doubled  vowel)  if  each  f i  is  an  isomorphism;  for  example,  this  occurs  if  f  is  homotopic  to 
the  zero  map  in  the  following  sense.  Given  two  maps  f ·  , g  ·  :  C ·  →  D ·  ,  we  say  that  f  and  g 
are  homotopic  if  there  exist  a  sequence  of  maps 

k i  :  C i  →  D i−1 

2 

�
�
�
�
�
�
�
�
�
�
�
�
�
�
such that 

k i+1  ◦  di  +  di−1  ◦  k i  =  f  − g ; 

this  is  obviously  an  equivalence  relation.  It  is  an  exercise  to  show  that  this  implies  that  f 
and  g  induce  the  same  maps  hi (C · ) →  hi (D ·).  (The  collection  of maps  k i  are  called  a  chain 
homotopy  between  f  and  g .)  Important:  the fact that  a morphism is a quasi-isomorphism is 
not  stable under applying  functors, but the fact that two morphisms  are homotopic is stable 
under  applying  functors  because  it  is  arrow-theoretic.  (This  should  remind  you  of  the  fact 
that  a  sequence  being  exact  is  not  stable  under  applying  functors,  but  it  being  a  complex  is 
stable.) 
The  homology  functors  don’t  quite  capture  as  much  information  as  possible,  just  as 
passing  from  a  ﬁltered  ob ject  to  its  associated  graded  ob ject  loses  information.  A  better 
construction is that  of the  derived category  of  complexes with  values in  C ; in this construction, 
one  formally  inverts  all  quasi-isomorphisms.  This  is  not  completely  straightforward,  and  I 
won’t talk  about it  more just  now. 

3  The  long  exact  sequence  in  cohomology 

Let 

be  a  short  exact  sequence  of  complexes,  i.e.,  a  diagram 

0  →  C ·  →  D ·  →  E ·  →  0 

. 
. 
. 

. 
. 
. 

. 
. 
. 

0


0


0


� C i−1 

� D i−1 

� E i−1 

di−1 

di−1 

di−1 

� C i 

di 

� D i 

di 

� E i 

di 

� C i+1 

� D i+1 

� E i+1 

� �

0 

� �

0 

� �

0

. 
. 
. 

. 
. 
. 

. 
. 
. 

in  which  the  rows  are  exact,  and  the  columns  are  complexes.  As  was  shown  in  a  previous 
exercise,  this  leads  to  a  long  exact  sequence 

δi−1 
·  ·  ·  →  hi−1 (C ·) →  hi−1 (D ·) →  hi−1 (E ·) →  hi (C ·) →  hi (D · ) →  hi (E · ) →  · · · 

in  which  the  maps  h· (C · )  →  h· (D ·)  and  h· (D · )  →  hi−1(E · )  are  the  obvious  induced  ones, 
and  the  maps  δ i  are the  connecting homomorphisms.  (Recall  the  deﬁnition  of δ i :  given  an 

3


�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
element  x  in  E i−1  representing  a  class  in  hi−1(E · ),  use  exactness  in  the  row  to  lift  x  to 
y  ∈  D i−1 .  Then  the  image  of  di−1(y ) in  E i  equals  di−1(x)  = 0,  so  di−1(y )  lifts  to  z  ∈  C i  . 
The  image  of  di (z) in  D i+1  equals  di (di−1(y )) = 0,  so  z  represents  a  class  in  hi (C · ).  The fact 
that  this  class  is  well-deﬁned  independent  of  choices,  and  that  the  resulting  map  δ i  makes 
the  long  sequence  exact,  were  part  of  the  earlier  exercise.) 

4  Cohomological  functors 

Let  F  :  C1  → C2  be  an  additive  covariant  functor  between  abelian  categories.  Recall  that  F 
is  left  exact  if  for  any  exact  sequence 

0  →  A1  →  A2  →  A3 

the  sequence 

is  exact.  The  functor  is  right  exact  if  for  any  exact  sequence 

0  →  F (A1) →  F (A2 ) →  F (A3 ) 

the  sequence 

A1  →  A2  →  A3  →  0 

F (A1 ) →  F (A2) →  F (A3) →  0 

is  exact.  The  functor  is  exact  if  it  is  both  left  exact  and  right  exact;  equivalently,  for  any 
exact  sequence 

the  sequence 

0  →  A1  →  A2  →  A3  →  0 

0  →  F (A1 ) →  F (A2 ) →  F (A3) →  0 

is  exact.  This  implies  that  F  preserves  exact  sequences  of  any  length. 
Many  interesting  functors  in  mathematics  are  left  or  right  exact  but  not  exact.  For 
example, for  C  an  abelian  category  and  X  an  ob ject,  the  functor  Hom(X, ·) carrying  Y  to 
Hom(X, Y )  is  left  exact.  (We  saw  this  previously  for  ModR  but  it  holds  in  general.)  We 
would like to be  able to quantify  the failure  of  a functor to be exact;  our  ability  to do this is 
aided  by  the  presence  of  ob jects  on  which  the  functor  behaves  well.  For  instance,  in  ModR , 
the functor  X  ⊗R  ·  behaves  badly  on  a  general  exact  sequence.  However,  if 

0  →  Y1  →  Y2  →  Y3  →  0 

is  a  short  exact  sequence  in  which  Y3  is  a  ﬂat  R-module,  then  it  can  be  shown  that 

0  →  X  ⊗ Y1  →  X  ⊗ Y2  →  X  ⊗ Y3  →  0 

is  again  exact.  For  instance,  this  holds  if  Y3  is  a  free  R-module. 

4 

Assume  now  that  F  is  a  left  exact  functor.  The  idea  now  is  to  replace  the  single  bad 
ob ject  X  ﬁrst  with  the  complex  0  →  X  →  0  →  · · ·  ,  then  with  a  quasi-isomorphic  complex 

0  →  X 0  →  X 1  →  · · · 

of good  ob jects.  If we can lift  short  exact  sequences of  maps to short  exact  sequences of  these 
resolving  complexes,  we  can then  use the long  exact  sequence in  cohomology  to quantify  the 
failure  of  right  exactness.  Namely,  our  short  exact  sequence 

0  →  A  →  B  →  C  →  0 

will  be  replaced  by  a  short  exact  sequence  of  complexes 

0  →  A·  →  B ·  →  C ·  →  0. 

If  we  have  chosen  the  good  ob jects  well,  then 

0  →  F (A·) →  F (B · ) →  F (C ·) →  0 

will  still  form  a  short  exact  sequence  of  complexes,  and  its  long  exact  sequence  in  homology 

δ0 
0  →  h0 (F (A·)) →  h0 (F (B ·)) →  h0 (F (C ·))  →  h1(F (A· )) · · · 

will  tell  us  something  useful.  What  we  really  want  is  that  h0(F (A· )) =  A  and  so  forth,  so 
that  this  long  exact  sequence  ﬁlls  in  the  gap  left  at  the  right  end  of  the  exact  sequence 

0  →  F (A) →  F (B ) →  F (C ). 

To quantify  this notion, we deﬁne a  cohomological functor  (or δ -functor  ) between abelian 
categories  C1  and  C2  to  be  a  sequence  of  functors 

T i  :  C1  → C2 

(i  = 0, 1, . . .  ) 

plus  for  each  short  exact  sequence  0  →  A  →  B  →  C  →  0 in  C1  a  morphism  δ i  :  T i (C ) → 
T i+1(A) functorial in the  sequence (I’ll let you draw the diagram),  such that the  sequence 

δ1 
δ0 
0  →  T 0 (A) →  T 0(B ) →  T 0(C ) →  T 1(A) →  T 1(B ) →  T 1(C ) →  T 2(A) →  · · · 

is exact.  A cohomological functor is  universal  if given any other cohomological functor  U  and 
a natural  transformation  f 0  :  T 0  →  U 0 , there is a unique sequence of  natural  transformations 
f i  :  T i  →  U i  starting  with  f 0  which  commute  with  the  δ i  .  Given  T 0 ,  any  two  extensions  of 
it  to  a  universal  cohomological  functor  are  naturally  isomorphic. 
This  notion  does  not  become  useful  without  a  criterion  for  checking  whether  a  cohomo­
logical  functor  is  universal.  Here  is  one.  A  functor  F  :  C1  → C2  between  abelian  categories 
is  eﬀaceable  if  for  any  A  ∈ C1 ,  there  is  a  monomorphism  u  :  A  →  B  with  F (u) = 0.  I like 
to  think  of  this  in  the  following  way.  Most  of  the  time,  we  deal  with  functors  which  are 
kind  of  “monotonic”,  in  the  sense  that  under  some  appropriate  hypothesis,  the  bigger  the 
input  ob ject into the functor, the bigger the output  ob ject.  Eﬀaceable functors are quite the 
opposite! 

5 

Theorem  (Grothendieck).  Let  T :  C1  → C2  be  a  cohomological  functor  such  that  T i  is 
·
eﬀaceable  for  each  i >  0.  Then  T  is  universal.

Proof.  Here’s  how  to  construct  the  natural  transformation  from  T i  to  U i  .  Given  an  ob ject

A  and  an  index  i >  0  such  that  we  know  the  existence  and  uniqueness  of  the  natural

transformation for indices less than  i,  choose  a  monomorphism  u  :  A  →  B  with  T i (u) = 0.

Then  form  the  long  exact  sequence  0  →  A  →  B  →  C  →  0,  apply  both  cohomological

functors,  and  use  the  equality  u  = 0  to  truncate  the  upper  one:


T i−1(A) 

� �

T i−1(B ) 

� �

T i−1(C )

δi−1 

� �

T i (A)

� �

0 

� �
U i−1 (A) 

� �
� U i−1 (B ) 

� �
� U i−1 (C ) δi−1 

? 

� U i (A) 

An  easy  diagram  chase  shows  that  there  is  a  unique  arrow  T i (A)  →  U i (A)  making  the 
diagram  commute.  It  remains  to  check  that: 
•  the  arrow  T i(A) →  U i (A) does  not  depend  on  the  choice  of  u; 

•  these  arrows  form  a  natural  transformation. 

We  leave  these  veriﬁcations  as  an  exercise. 

A typical  case is when each  ob ject  A  ∈ C1  admits a monomorphism  u  :  A  →  B  in which  B 
is  acyclic  for  T , that is,  T i (B ) = 0 for  i >  0.  These  ob jects  are good in the  sense  considered 
above. 
Theorem  (Acyclic  resolution  theorem).  Let  T · 
:  C1  → C2  be  a  universal  cohomological 
functor.  Given  J  ∈ C1 ,  suppose  0  →  A0  →  A1  →  · · ·  is  a  complex  in  C1  with  each  A·  acyclic, 
∼
h0 (A·) =  J ,  and  hi (A· ) = 0  for  i >  0.  (That  is,  this  complex  is  an  acyclic  resolution  of  J .) 
∼
Then  for  each  i  ≥  0,  there  is  an  isomorphism  T i (h0(A· )) =  hi (T 0(A· )) which is functorial in 
the input data. 

5  Derived  functors 

We  are  now  ready  to  make  some  universal  cohomological  functors.  Unfortunately,  we  are  in 
a bit of  a jam:  we would like to deﬁne them using  acyclic resolutions, but the deﬁnition of 
an  acyclic  ob ject depends  on the deﬁnition  of  the  cohomological functor.  We get  out  of  this 
vicious  circle  by  identifying  some  ob jects  which  are  always  acyclic. 
An  ob ject  X  in  an  abelian  category  C  is  injective  if  the functor Hom(·, X ) :  C op  →  Ab  is 
exact.  Since  this  functor  is  already  left  exact,  it  is  enough  to  require  something  weaker:  if 
0  →  Y  →  Z  is a monomorphism, then for any  morphism  Y  →  X  we  can  ﬁnd  some  morphism 
Z  →  X  ﬁtting  into the diagram: 

0 

� Y 

� Z 
������� 

X 

6 

�
 
�
�
�
�
�
�
�
�
�
�
�
�
�
�
 
For instance, in Ab, an ob ject  X  is injective if and  only if it is  divisible, i.e., the multiplication­
by-n  maps for each positive integer  n  are all  surjective.  You might be more familiar with  the 
dual  notion:  an  ob ject  X  in  an  abelian  category  C  is  projective  if  the  functor  Hom(X, ·) : 
C →  Ab  is  exact.  In  ModR ,  any  free  module  is  pro jective;  in  fact,  a  module  is  pro jective  if 
and  only  if  it  is  a  direct  summand  of  a  free  module. 
Lemma.  Any  short  exact  sequence 

0  →  I  →  B  →  C  →  0 

with  I  injective is  split,  i.e.,  there  exists  an  arrow  C  →  B  such  that  C  →  B  →  C  is  an 
isomorphism. 

Proof.  Apply  the deﬁnition of injectivity  to the monomorphism  I  →  B  and  the arrow  I  →  I 
to get  a  map  B  →  I  such  that  I  →  B  →  I  is  the  identity.  Then  the  kernel  of  B  →  I  will be 
isomorphic to  C . 

We  once  again  hit  a  distinction  between  non-arrow-theoretic  and  arrow-theoretic  condi­
tions;  while the property  of being  a short  exact  sequence is not preserved  under  an arbitrary 
additive  functor,  the  property  of  being  split  short  exact  is.  That  is  because  a  splitting  of 
0  →  A  →  B  →  C  →  0  speciﬁes  a  pair  of  endomorphisms  e1 , e2  :  B  →  B  whose  sum  is  B , 
namely  B  →  A  →  B  and  B  →  C  →  B ,  and  conversely  these  endomorphisms  determine  the 
sequence. 
Proposition.  Let  T ·  be  a  cohomological  functor  such  that  T i  is  eﬀaceable  for  i >  0  (so in 
particular  it  is  universal).  Then  for  any  injective  object  I ,  T i (I ) = 0  for  i >  0. 

Proof.  Choose  a  monomorphism  u  :  I  →  B  with  T i (u)  =  0,  then  form  the  short  exact 
sequence 

Since  this  sequence  splits,  the  resulting  sequences 

0  →  I  →  B  →  C  →  0. 

0  →  T j (I ) →  T j (B ) →  T j (C ) →  0 
are  exact  for  all  j .  Consequently,  the  connecting  homomorphism  δ i−1  :  T i−1(C ) →  T i (I ) is 
zero.  On  the  other  hand,  the  morphism  T j (I ) →  T j (B ) is just  T j (u),  which  is  also  zero.  So 
δi−1 
T i (u)
the  exactness  of  the  sequence  T i−1(C ) →  T i (I )  →  T i (B ) forces  T i (I ) = 0. 

This  more  or  less  forces  us  into  the  following  deﬁnition.  We  say  that  the  category  C  has 
enough injectives  if  for  any  ob ject  X  there  exists  a  monomorphism  X  →  I  with  I  injective. 
Then  any  universal  cohomological  functor  can  be  computed  using  injective  resolutions.  On 
the  other  hand,  given  an  ob ject  X ,  we  can  always  ﬁnd  an  injective  resolution;  better  yet, 
given  any  morphism  X  →  Y  and  an  injective  resolution  of  X ,  we  can  ﬁnd  an  injective 
resolution  of  Y  and  a  morphism  inducing  X  →  Y  on  cohomology.  This  suggests  that  we 
deﬁne the  right derived functors  of  a  left  exact  functor  F  by  saying  for  any  ob ject  X , if  I ·  is 
an  injective  resolution  of  X , put 

RiF (X ) =  hi (F (I ·)). 

7 

Theorem.  Assume that  C  has  enough  injectives.  Then  the  previous  deﬁnition  gives  a  wel l-
deﬁned  cohomological  functor,  which  is  eﬀaceable  and  hence  universal. 

The  eﬀaceability  is  obvious  from  the  fact  that  injectives  are  acyclic  under  this  deﬁnition 
(if  X  is  injective,  use  0  →  X  →  0  →  · · ·  as  the  injective  resolution).  The  hard  part,  or 
rather  the  easy  but  tedious  part,  is  to  check  that  what  you  are  writing  down  is  really  a 
well-deﬁned  cohomological  functor  in  the  ﬁrst  place.  This  is  so  tedious  I  won’t  even  make 
you do it  as  an  exercise;  rather, I’ve just  asked you to list  which  compatibilities  need to be 
checked  in  the  ﬁrst  place,  which  is  already  a  nontrivial  eﬀort. 

6  Examples 

Here are some possibly familiar examples of derived functors.  Some of these admit reasonable 
explicit  computations;  see  exercises. 
For  X  ∈  ModR ,  X ⊗ ·  is a right  exact  covariant functor from ModR  to ModR , hence a left 
op  to ModR 
op .  The  derived  functors  are  called  Tori (X, ·). 
exact  covariant  functor  from  ModR 

Proposition.  For  X  ∈  ModR ,  the  fol lowing  are  equivalent. 

(a)  X  is  ﬂat. 

(b)  Tori (X, Y ) = 0  for  any  i >  0  and  any  Y  ∈  ModR . 

(c)  Tor1(X, Y ) = 0  for  any  Y  ∈  ModR . 

Proof.  Given (a),  the functor  X  ⊗ ·  is exact,  so its derived functors are zero, proving (b). 
Given (b), (c)  is trivial.  Given (c), for  any  short  exact  sequence 0  →  A  →  B  →  C  →  0,  we 
get  a  long  exact  sequence 

0  →  X  ⊗ A  →  X  ⊗ B  →  X  ⊗ C  →  Tor1(X, A) = 0 

so  X  ⊗ A  is  exact, proving (a). 

This  is  of  course  a  totally  general  argument:  if  F  is  a  left  exact  covariant  functor,  then 
F  is  exact  iﬀ  RiF  = 0  identically  for  all  i >  0 iﬀ  R1F  = 0 identically. 
Given  that  the  tensor  product  is  symmetric,  one  would  like  to  identify  Tori (X, Y ) with 
Tori (Y , X ).  However,  the  deﬁnition  of  Tor  is  asymmetric,  so  this  takes  a  bit  of  thinking 
(which  I’ll  do  using  the  dual  language  of  projective  resolutions  and  homology  and  lower 
indices, but you can  switch back if you like).  Before starting,  note that  at least the fact that 
Tori (X, Y ) is functorial in X  (not just in Y ) is clear from the universal property of  universal 
cohomological functors. 

8


Let  P·  and  Q·  be  projective  resolutions  of  X  and  Y ,  respectively.  Then  we  have  a  double 
complex 

. . . 

. . . 

. . . 

· · · 

P1  ⊗ Q1 

� P1  ⊗ Q0 

� P1  ⊗ Y 

· · · 

� P0  ⊗ Q1 

� P0  ⊗ Q0 

� P0  ⊗ Y 

· · · 

� X  ⊗ Q1 

� X  ⊗ Q0 

� X  ⊗ Y 

� 0 

� 0 

� 0 

0 

0

0 

in  which  the  homology  of  the  bottom  row  computes  Tori (X, Y ),  the  homology of  the  right 
column  computes  Torj (Y , X ),  and the  other  rows  and  columns  are  exact. 
∼
It  is  now  a  diagram  chase  to  check  that  we  have  canonical  isomorphisms  Tori (Y , X ) = 
Tori (X, Y ).  For  instance,  say  I  start  with  a  class  in  Tor1(X, Y ) represented  by  x  ∈  X  ⊗ Q1 . 
Lift  x  to  P0 ⊗ Q1 , then push  to  P0 ⊗ Q0 .  The  result  maps  to  0  in  X ⊗ Q0 ,  so  lifts  to  P1 ⊗ Q0 ; 
push  to  P1 ⊗ Y  to get  a class in Tor1 (Y , X ).  (This is really an example of  a  spectral  sequence ; 
more  on  those  a  bit  later.) 

Corollary.  Let  0  →  A1  →  A2  →  A3  →  0  be  an  exact  sequence  of  R-modules  with  A3  ﬂat. 
Then  for  any  R-module  M ,  0  →  M  ⊗ A1  →  M  ⊗ A2  →  M  ⊗ A3  →  0  is  again  exact. 

Proof.  We  have  a  long  exact  sequence 

Tor1(M , A1 ) →  M  ⊗ A1  →  M  ⊗ A2  →  M  ⊗ A3  →  0 

but  the  left  term  can  be  identiﬁed  with  Tor1 (A1 , M ),  which vanishes  because  A1  is  ﬂat. 

The  example  of  Tor  is  particularly  important  in  algebraic  geometry  because  of  Serre’s 
intersection  multiplicity  formula.  Let  X  be  a  regular  excellent  scheme,  let  Y , Z  be  two 
integral  closed  subschemes  deﬁned  by  the  ideal  sheaves  I , J ,  and  let  x  be the generic point 
of  a  component  of  Y  ∩ Z . The  na¨ıve  intersection  multiplicity  of  Y  and  Z  at  x  is 

OY ∩Z,x  =  OX,x /(IJ )x , 

and  this  gives  the  correct  answer  when  dim(X ) =  2,  dim(Y )  =  dim(Z ) = 1 (meaning the 
answer that makes B´ezout’s theorem work)  but not in general.  Serre found  that the  “right” 
multiplicity is 
 
(−1)i  lengthOX,x  Tori 
(OX,x/Ix , OX,x/Jx).
OZ,x 

�
i 

9


�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
�
It  was  an  open  question  for  a  long  time  to  give  a  “geometric”  interpretation  of  the  Tor 
contributions  in  this  formula;  such  an  interpretation  was  recently  provided  by  Jacob  Lurie 
using  derived  algebraic  geometry.  (Roughly  speaking,  one  replaces  rings  by  certain  topo­
logical  rings  before  applying  Spec;  the  intersection  multiplicity  then  appears  as  the  Euler 
characteristic  of  the  “derived  schematic  intersection”.) 
A  similar  example  occurs  using  the  bifunctor  Hom,  except  that  it  is  really  a  bifunctor 
from  C op  → C .  (Here  C  can be  any  abelian  category,  not just ModR .)  Anyway,  the  right 
derived  functors  of  Hom(X, ·) are  called  Exti (X, ·),  and  they also  occur  as  derived  functors 
of Hom(·, Y  ) by  the double  complex  argument (with  arrows  appropriately  reversed). 
One  more  important  example:  if  G  is  a group (considered  with the discrete topology, if 
you must), let Z[G] be the group  algebra  of  G  with  coeﬃcients in  Z, i.e., additively  the direct 
sum  ⊕g∈GZ[g ] with  Z-linear multiplication characterized by [g ][h] = [gh].  Then the covariant 
functor  ·G  : ModZ[G]  →  ModZ  computing  G-invariants  is  left  exact;  its  derived  functors  are 
called  group cohomology  and denoted  H ·(G, M ).  The covariant functor · G  : ModZ[G]  →  ModZ 
computing  G-coinvariants (i.e.,  M  maps to the quotient  of  M  by  g (m) − m  for all  g  ∈  G  and 
m  ∈  M ) is right exact; its derived functors are called  group homology  and denoted  H· (G, M ). 
These  are  actually  special  cases  of  the  previous  example,  namely 

H ·(G, M ) = Exti 
(Z, M ),
ModZ[G] 

ModZ[G] (Z, M ).
H· (G, M ) = Tor 
i 

(More  generally,  one  could replace  Z  with  an  arbitrary  ring.) 

10 


