6.006 Intro to Algorithms
Newton’s Method
Find root of f (x) = 0 through successive approximation e.g., f (x) = x2 − a

Recitation 12

October 26, 2011

Figure 1: Newton’s Method.
Tangent at (xi , f (xi )) is line y = f (xi ) + f (cid:48) (xi ) · (x − xi ) where f (cid:48) (xi ) is the derivative.
xi+1 = intercept on x-axis

xi+1 = xi −

f (xi )
f (cid:48) (xi )

Square Roots
We want to ﬁnd the square root of a number a through successive approximation using
Newton’s Method, so that our answer x will converge on a1/2 . It looks like f (x) = a1/2 − x
has a root at x = a1/2 . Let’s try to use it with Newton’s Method.
f (x) = a1/2 − x
f (cid:48) (x) = −1
χi −
f (χ )
i
f (cid:48) (χi )
− χ
a1/2
− −1
− χi
= χi + a1/2
1/2
= a

= χi

χi+1

=

The choice of this function was unsuccessful, since we’re unable to compute xi+1 using xi .
Let’s try squaring both sides of x = a1/2 . This time, it looks like we get something usable:

xixi+1y = f(x)16.006 Intro to Algorithms

Recitation 12

October 26, 2011

f (x) = x2 − a
i − a)
(χ 2
2χi

=

χi+1 = χi −

a
χ

i

χ
i

+

2

Error Analysis of Newton’s Method
√
a · (1 + n )
n may be + or -
Suppose Xn =
Then,

(cid:17)

Xn + a/Xn
Xn+1 = √ 2
(cid:16)
a(1 + n ) + √ a
a(1+
n )
(cid:112) (1 + n ) + 1
=
2
(a)(cid:112) (cid:18)
(cid:19)
(1+n )
=
2
(cid:19)
(cid:18)
2 + 2 +  2
= (cid:112)(a)
n
n
=
(a)
2(1 + n )
 2
n
1 +
2(1 + n )

Therefore,

 2
n
2(1 + n )
Quadratic convergence, as (cid:93) correct digits doubles each step.

n+1 =

Complexity of Computing Square Roots
We apply a ﬁrst level of Newton’s method to solve f (x) = x2 − a. Each iteration of this
ﬁrst level requires a division. If we set the precision to d digits right from the beginning,
then convergence at the ﬁrst level will require lg d iterations. This means the complexity
of computing a square root will be Θ(dα lg d) if the complexity of multiplication is Θ(dα ),
given that we have shown that the complexity of division is the same as the complexity of
multiplication.
However, we can do better, if we recognize that the number of digits of precision we
need at beginning of the ﬁrst level of Newton’s method starts out small and then grows. If
the complexity of a d-digit division is Θ(dα ), then a similar summation to the one above
tells us that the complexity of computing square roots is Θ(dα ).

26.006 Intro to Algorithms

Recitation 12

October 26, 2011

Termination

(cid:98)a/χ (cid:99)
(cid:98) i
(cid:99)
χ +
i
Iteration: χi+1 =
2
Do ﬂoors hurt? Does program terminate? (α and β are the fractional parts below.)
Iteration is

χi+1 =

=

− α

χi + a
− β
χ
i
2
χi + a
i − γ where γ = + β and 0
α
χ
2
2
√

≤ γ < 1

√

a
χi + χ
≥
≥
a + b
Since
i
ab,
2
2
won’t stay stuck above if i < 1

a, so subtracting γ always leaves us
(good initial guess).

√

≥ (cid:98)

(cid:99). This

a

Cube Roots

Now that we’ve seen square roots, let’s calculate cube roots. This time, x will converge on
a1/3 , instead. We can use f (x) = a − x3 :
f (x) = x3 − a
f (cid:48) (x) = 3x2
f (cid:48)(cid:18)(χi )
χi+1 = χi −
f (χ
i )
= χi −
1
χi
3
2
= χi +
3

(cid:19)

1 a
3 χ2
i

−

a
χ2
i

36.006 Intro to Algorithms
Suppose xi+1 = a1/3 · (1 + i )
Then,

Recitation 12

October 26, 2011

i may be + or -

=

1 a
3 χ2
i

2
χi+1 = χi +
3
(cid:18)
(cid:19)
2
1
a
= a1/3
(1 + i ) +
3 (a1/3 (1 +  ))2
3
n
(cid:19)
(cid:18)
a1/3
1
(cid:0)2(1 + 3i + 32
2(1 + i ) +
(1 + i )2
3
a1/3
1
i + 3
i ) + 1
(1 + i )2
3
(cid:19)
(cid:18)
+ 23
i + 62
a1/3 3 + 6
i
i
1 + 2i + 2
3
i
(cid:18)
(cid:19) i
a1/3
2 + 23
3
i
i
3 +
1 + 2i + 2
3
a1/3 1 + i + 2 3
2
3 i
(1 +  2
i )

=

=

=

=

(cid:1)

Notice that the cubic term gets dominated by the quadratic term in the numerator, and that
the denominator is very close to 1. Therefore, we have quadratic convergence here, just
like in the square root case. The running time analysis is very similar to the square root
case as well: the only difference is one additional multiplication in the denominator, so the
running time stays the same as the running time of a multiplication.

4MIT OpenCourseWare
http://ocw.mit.edu

6.006 Introduction to Algorithms
Fall 2011
 
 
 
For information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms .

