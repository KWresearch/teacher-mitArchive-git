Introduction to Algorithms
Massachusetts Institute of Technology
Professors Erik Demaine and Srini Devadas

November 17, 2011
6.006 Fall 2011
Quiz 2

Quiz 2
• Do not open this quiz booklet until directed to do so. Read all the instructions on this page.
• When the quiz begins, write your name on every page of this quiz booklet.
• You have 120 minutes to earn 120 points. Do not spend too much time on any one problem.
Read them all ﬁrst, and attack them in the order that allows you to make the most progress.
• This quiz is closed book. You may use two 8 1 (cid:48)(cid:48)
2 × (cid:48)(cid:48) or A4 crib sheets (both sides). No
11
calculators or programmable devices are permitted. No cell phones or other communications
devices are permitted.
• Write your solutions in the space provided. If you need more space, write on the back of the
sheet containing the problem. Pages may be separated for grading.
• Do not waste time and paper rederiving facts that we have studied. It is sufﬁcient to cite
known results.
• When writing an algorithm, a clear description in English will sufﬁce. Pseudo-code is not
required.
• When asked for an algorithm, your algorithm should have the time complexity speciﬁed in
the problem with a correct analysis. If you cannot ﬁnd such an algorithm, you will generally
receive partial credit for a slower algorithm if you analyze your algorithm correctly.
• Show your work, as partial credit will be given. You will be graded not only on the correct-
ness of your answer, but also on the clarity with which you express it. Be neat.
•
Good luck!

Problem Parts Points Grade Grader

1

2

3

4

5

6

1

14

5

5

1

3

1

28

26

25

15

25

Total

120

Name:

Wed/Fri
Recitation:

Ying
10, 11 AM

Kevin
11 AM

Sarah
12,
1 PM

Yaﬁm
12 PM

Victor
2, 3 PM

6.006 Quiz 2

Name

2

Problem 1.

[1 points] Write your name on top of each page.

Problem 2. True/False [28 points] (14 parts)
Circle (T)rue or (F)alse. You don’t need to justify your choice.
√(cid:98) a(cid:99) for an n-bit positive integer a can be done in O(lg n)
(a) T F [2 points] Computing
iterations of Newton’s method.
(b) T F [2 points] Suppose we want to solve a polynomial equation f (x) = 0. While
our choice of initial approximation x0 will affect how quickly Newton’s method
converges, it will always converge eventually.
(c) T F [2 points] Karatsuba’s integer multiplication algorithm always runs faster than
the grade-school integer multiplication algorithm.
(d) T F [2 points] If we convert an n-digit base-256 number into base 2, the resulting
number of digits is Θ(n2 ).
(e) T F [2 points] In a weighted undirected graph G = (V , E , w), breadth-ﬁrst search
from a vertex s ﬁnds single-source shortest paths from s (via parent pointers) in
O(V + E ) time.
(f) T F [2 points]
In a weighted undirected tree G = (V , E , w), breadth-ﬁrst search
from a vertex s ﬁnds single-source shortest paths from s (via parent pointers) in
O(V + E ) time.
(g) T F [2 points] In a weighted undirected tree G = (V , E , w), depth-ﬁrst search from
a vertex s ﬁnds single-source shortest paths from s (via parent pointers) in O(V +
E ) time.
(h) T F [2 points] If a graph represents tasks and their interdependencies (i.e., an edge
(u, v) indicates that u must happen before v happens), then the breadth-ﬁrst
search order of vertices is a valid order in which to tackle the tasks.
(i) T F [2 points] Dijkstra’s shortest-path algorithm may relax an edge more than once
in a graph with a cycle.
(j) T F [2 points] Given a weighted directed graph G = (V , E , w) and a source s ∈ V ,
if G has a negative-weight cycle somewhere, then the Bellman-Ford algorithm
will necessarily compute an incorrect result for some δ(s, v).
(k) T F [2 points] In a weighted directed graph G = (V , E , w) containing no zero- or
positive-weight cycles, Bellman-Ford can ﬁnd a longest (maximum-weight) path
from vertex s to vertex t.
(l) T F [2 points] In a weighted directed graph G = (V , E , w) containing a negative-
weight cycle, running the Bellman-Ford algorithm from s will ﬁnd a shortest
acyclic path from s to a given destination vertex t.
(m) T F [2 points] The bidirectional Dijkstra algorithm runs asymptotically faster than
the Dijkstra algorithm.

6.006 Quiz 2

Name

3

(n) T F [2 points] Given a weighted directed graph G = (V , E , w) and a shortest path p
from s to t, if we doubled the weight of every edge to produce G(cid:48) = (V , E , w (cid:48) ),
then p is also a shortest path in G(cid:48) .

6.006 Quiz 2

Name

4

Problem 3. MazeCraft [26 points] (5 parts)
You are playing SnowStorm’s new video game, MazeCraft. Realizing that you can convert a maze
into a graph with vertices representing cells and edges representing passages, you want to use your
newly learned graph-search algorithms to navigate the maze. Consider the following converted
graph.

D

B

F

A

C

E

G H

For the following questions, assume that the graph is represented using adjacency lists, and that all
adjacency lists are sorted, i.e., the vertices in an adjacency list are always sorted alphabetically.

(a) [4 points] Suppose that you want to ﬁnd a path from A to H . If you use breadth-ﬁrst
search, write down the resulting path as a sequence of vertices.

(b) [4 points] If you use depth-ﬁrst search to ﬁnd a path from A to H , write down the
resulting path as a sequence of vertices.

6.006 Quiz 2

Name

5

(c) [6 points] To determine whether the maze has cycles or multiple paths to the same
destination, you decide to use the edge classiﬁcation of depth-ﬁrst search. Run depth-
ﬁrst search on the graph reproduced below, starting from vertex A, and label every
edge with T if it’s a tree edge, B if it’s a back edge, F if it’s a forward edge, and C if
it’s a cross edge.
As a reminder, recall that an edge (u, v) is
• a tree edge (T) if v was ﬁrst discovered by exploring edge (u, v) (tree edges form
the depth-ﬁrst forest);
• a back edge (B) if v is u’s ancestor in a depth-ﬁrst tree;
• a forward edge (F) if v is u’s descendant in a depth-ﬁrst tree; and
• a cross edge (C) if none of the above apply.

D

B

A

C

E

F

G

H

6.006 Quiz 2

Name

6

(d) [6 points] Now suppose that the passages in the maze are directional. Rerun depth-
ﬁrst search in the directed graph below and label the edges accordingly.

D

B

A

C

E

F

G

H

6.006 Quiz 2

Name

7

(e) [6 points] Suppose each passage in the maze causes a different amount of damage to
you in game. You change the graph to use weights to represent the damage caused by
each edge. You then use Dijkstra’s algorithm to ﬁnd the path from A to H with the
lowest possible damage. Write down the order in which vertices get removed from the
priority queue when running Dijkstra’s algorithm.

2

3

C

1

A

B

1

D

2

1

3

1

E

F

4

G

3

H

1

6.006 Quiz 2

Name

8

Problem 4. Malfunctioning Calculator [25 points] (5 parts)
Former 6.006 student Mallory Funke is at a math competition, but her calculator isn’t working. It
seems to work ﬁne for whole numbers, but the numbers after the decimal point always seem to
be the sequence
repeated over and over again, making those digits useless. For one of the
problems, she has been asked to compute (cid:98)A3/4(cid:99) for a few different integer values of A. Mal knows
that Newton’s Method can be used to compute the square root or the cube root of an integer A. So
as a ﬁrst step in computing (cid:98)A3/4(cid:99), Mal wants to use Newton’s Method to compute (cid:98)A1/4
(cid:99). She
then plans to use that information to compute (cid:98)A /4(cid:99).
3
(a) [5 points] Mal decides to use the function f (x) = x4 − A, because it has a root
at x = A1/4 . Use Newton’s Method on f (x) to generate a formula for computing
increasingly accurate estimates of (cid:98)A1/4(cid:99).
In other words, give a formula for the
more accurate estimate xi+1 in terms of a less accurate estimate xi . The formula you
construct must use only addition, subtraction, multiplication, and division. (You do
not need to simplify the formula.)

6.006 Quiz 2

Name

9

(b) [5 points] Mal decides to use the technique from part (a) to compute the value B =
(cid:98)A1/4(cid:99). She then plans to compute (cid:98)A3/4(cid:99) by calculating the value C = B 3 = B ·B ·B .
Provide an explanation of why this technique does not work.
Hint: Deﬁne α to be the fractional part of A1/4 , so that B = A1/4 − α. What happens
when you compute C = B 3?

(c) [5 points] Mal clearly needs a way to check her answer for (cid:98)A3/4(cid:99), using only integers.
Given a pair of positive integers A and C , explain how to check whether C ≤ A3/4
using O(1) additions, subtractions, multiplications, and comparisons.

(d) [5 points] Explain how to check whether C = (cid:98)A3/4(cid:99), again using only O(1) addi-
tions, subtractions, multiplications, and comparisons.
Hint: Recall how the ﬂoor function is deﬁned.

6.006 Quiz 2

Name

10

(e) [5 points] Give a brief description of an algorithm that takes as input a d-digit positive
integer A and computes (cid:98)A3/4(cid:99). The only arithmetic operations you can use are inte-
ger addition, integer subtraction, integer multiplication, integer division, and integer
comparison. Your algorithm should use Θ(lg d) arithmetic operations in total, but par-
tial credit will be awarded for using Θ(d) arithmetic operations. For this question, you
may assume that Newton’s Method has a quadratic rate of convergence for whatever
function you devise.

6.006 Quiz 2

Name

11

Problem 5. The Tourist [15 points]
Your new startup, Bird Tours, brings people around Boston in a new aviation car that can both drive
and ﬂy. You’ve constructed a weighted directed graph G = (V , E , w) representing the best time to
drive or ﬂy between various city sites (represented by vertices in V ). You’ve also written a history
of Boston, which would be best described by visiting sites v0 , v1 , . . . , vk in that order.
Your goal is to ﬁnd the shortest path in G that visits v0 , v1 , . . . , vk in order, possibly visiting other
vertices in between. (The path must have v0 , v1 , . . . , vk as a subsequence; the path is allowed to
visit a vertex more than once. For example, v0 , v2 , v1 , v2 , . . . , vk is legal.) To do the computation,
you’ve found an online service, Paths ’R Us, that will compute the shortest path from a given
source s to a given target t in a given weighted graph, for the bargain price of $1. You see how to
solve the problem by paying $k , calling Paths ’R Us with (v0 , v1 , G), (v1 , v2 , G), . . . , (vk−1 , vk , G)
and piecing together the paths. Describe how to solve the problem with only $1 by calling Paths
’R Us with (s, t, G(cid:48) ) for a newly constructed graph G(cid:48) = (V (cid:48) , E (cid:48) , w (cid:48) ), and converting the resulting
path into a path in G.

6.006 Quiz 2

Name

12

Problem 6. Fill ’Er Up! [25 points]
You are traveling by car from one city to another city. Unfortunately, you have a hole in your
gas tank, and you have to reﬁll your gas tank to travel across more than two roads. In addition,
there is a toll booth on every road that charges you for using that road. Your goal is to ﬁnd the
least-expensive path from your start to your destination.
You represent the city network using a directed graph G = (V , E , w) with weights w deﬁned on
both edges and vertices. The vertices V represent the cities and the edges E represent the roads.
The weight w(e) of an edge e represents the toll amount on that road. The weight w(v) of a vertex
v is the price of ﬁlling your gas tank in that city (which is a ﬁxed price independent of how much
gas you have left, or ∞ if there is no gas available to purchase). You are allowed (but not obligated)
to end your journey with an empty tank, and you may assume that you always start your journey
with a full tank.
Below is an example graph that we will use to answer part (a). One seemingly cheap path from s
to t is (s, u1 , u2 , t) at a cost of $8. Unfortunately, this path is not valid, because our leaky gas tank
won’t permit moving across three edges without reﬁlling our gas tank.
One valid path is (s, u3 , u2 , t) at a cost of $22. (This is a valid path: we begin with a full tank,
travel across one edge to a gas station where we reﬁll our tank, and then travel two edges to the
destination, arriving with an empty gas tank. Notice that we are unable to continue the journey to
u5 if we wanted to, because even though there is a gas station there, we have to traverse a third
edge to get to it.)

There are some extra copies of this graph at the end of the exam (for your convenience).

Gas: FreeGas:$5Gas: $3NO GASNO GASToll: $5Toll: $7Toll: $2Toll: $1Toll: $2Toll: $10Toll: $3stNO GASToll: $1u1u2u3u4Toll: $4Gas: $1u5Toll: $9Toll: $1(a) [5 points] The valid path given in the description above is not the best path. Find a
least-expensive path from s to t in the graph above.

(b) [5 points] Find the least-expensive path from s to u5 in the graph above.

(c) [15 points] Give an O(V log V +E ) algorithm to ﬁnd, in a given graph G = (V , E , w),
a least-expensive valid path from a city s to a city t, or report that no such path exists.

Here are some extra copies of the graph from Problem 6 (for your convenience).

Gas: FreeGas:$5Gas: $3NO GASNO GASToll: $5Toll: $7Toll: $2Toll: $1Toll: $2Toll: $10Toll: $3stNO GASToll: $1u1u2u3u4Toll: $4Gas: $1u5Toll: $9Toll: $1Gas: FreeGas:$5Gas: $3NO GASNO GASToll: $5Toll: $7Toll: $2Toll: $1Toll: $2Toll: $10Toll: $3stNO GASToll: $1u1u2u3u4Toll: $4Gas: $1u5Toll: $9Toll: $1MIT OpenCourseWare
http://ocw.mit.edu

6.006 Introduction to Algorithms
Fall 2011
 
 
 
For information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms .

