16.810 
16.810

Engineering Design and Rapid Prototyping
Engineering Design and Rapid Prototyping 


Lecture 4 
Computer Aided Design (CAD)


Instructor(s) 

Prof. Olivier de Weck 

January 6, 2005


Plan for Today


  CAD Lecture (ca. 50 min) 
  CAD History, Background 
  Some theory of geometrical representation 
  SolidWorks Introduction (ca. 40 min) 
  Led by TA 
  Follow along step-by-step 
  Start creating your own CAD model of your part 
(ca. 30 min) 
  Work in teams of two 
  Use hand sketch as starting point 

16.810 

2 

Course Concept

today 

16.810 

3


Course Flow Diagram (2005)


Learning/Review 

Problem statement 

Design Intro / Sketch 

Hand sketching 

Deliverables 

(A) Hand Sketch 

(B) Initial Airfoil 

CAD Introduction 
FEM/Solid Mechanics 
Xfoil Airfoil Analysis 

Design Optimization 

CAM Manufacturing 
Training 

& Wind 
Structural 
Tunnel Testing 

CAD design 

FEM/Xfoil analysis 

(C) Initial Design 

Optimization 

optional 

Revise CAD design 

(D) Final Design 

Parts Fabrication 

Assembly 

Test 

(E) Completed Wing 
Assembly 

(F) Test Data & 
Cost Estimation 

16.810 

Final Review 

(G) CDR Package 

4 

What is CAD? 


  Computer Aided Design (CAD) 
  A set of methods and tools to assist product
designers in 
  Creating a geometrical representation of the artifacts they 
are designing 
  Dimensioning, Tolerancing 
  Configuration Management (Changes) 
  Archiving 
  Exchanging part and assembly information between teams,
organizations 
  Feeding subsequent design steps 
  Analysis (CAE) 
  Manufacturing (CAM) 
  …by means of a computer system. 

16.810 

5 

Input Devices 

Basic Elements of a CAD System

Main System 
Output Devices 
Computer 
CAD Software 
Database 
Ref: menzelus.com

Keyboard 
Mouse 

CAD keyboard 
Templates 
Space Ball 

Hard Disk 
Network 
Printer 
Plotter 

16.810 

6 

Human Designer 


Brief History of CAD 

  1957 PRONTO (Dr. Hanratty) – first commercial numerical-

control programming system

  1960 SKETCHPAD (MIT Lincoln Labs)

  Early 1960’s industrial developments

  General Motors – DAC (Design Automated by Computer)

  McDonnell Douglas – CADD

  Early technological developments

  Vector-display technology

  Light-pens for input

  Patterns of lines rendering (first 2D only)

  1967 Dr. Jason R Lemon founds SDRC in Cincinnati  

  1979 Boeing, General Electric and NIST develop IGES

(Initial Graphic Exchange Standards), e.g. for transfer of 

NURBS curves

  Since 1981: numerous commercial programs

  Source: http://mbinfo.mbdesign.net/CAD-History.htm 

16.810 

7 

Major Benefits of CAD

  Productivity (=Speed) Increase 
  Automation of repeated tasks 
  Doesn’t necessarily increase creativity! 
  Insert standard parts (e.g. fasteners) from database 
  Supports Changeability 
  Don’t have to redo entire drawing with each change 
  EO – “Engineering Orders” 
  Keep track of previous design iterations 
  Communication 
  With other teams/engineers, e.g. manufacturing, suppliers 
  With other applications (CAE/FEM, CAM) 
  Marketing, realistic product rendering 
  Accurate, high quality drawings 
  Caution: CAD Systems produce errors with hidden lines etc… 
  Some limited Analysis 
  Mass Properties (Mass, Inertia) 
  Collisions between parts, clearances 

16.810 

8 

Generic CAD Process


Engineering Sketch 

Start

3D 

-

Construct Basic 

Solids 
=  Boolean Operations 
(add, subtract, …) 

Settings 

dim


Units, Grid (snap), … 
2D


Create lines, radii, part
contours, chamfers 

extrude, rotate 

Add cutouts & holes 

Annotations 
Dimensioning 

x.x 

Verification 

Output 

CAD file 

Drawing (dxf)

IGES file 

9 

16.810 

Example CAD A/C Assembly


  Boeing (sample) parts 
  A/C structural assembly 
  2 decks 
  3 frames 
  Keel 
  Loft included to show 
interface/stayout zone to 
A/C 
  All Boeing parts in Catia
file format 
  Files imported into 
SolidWorks by 
converting to IGES 
format 

16.810 

Loft 

Nacelle 

FWD Decks 

Kee 
l 

Frames 

(Loft not shown) 

Aft Decks 

10


Vector versus Raster Graphics

Raster Graphics 

.bmp  - raw data format


  Grid of pixels 
  No relationships between 
pixels 
  Resolution, e.g. 72 dpi 
(dots per inch) 
  Each pixel has color, e.g. 
8-bit image has 256 
colors 

16.810 

12 

Vector Graphics

.emf format

CAD Systems use 
vector graphics 

Most common interface file: 
IGES 

  Object Oriented 
  relationship between 
pixels captured 
  describes both 
(anchor/control) points 
and lines between them 
  Easier scaling & editing 

16.810 

13 

Major CAD Software Products


  AutoCAD (Autodesk) Æ mainly for PC

  Pro Engineer (PTC) 

  SolidWorks (Dassault Systems) 

  CATIA (IBM/Dassault Systems)

  Unigraphics (UGS) 

  I-DEAS (SDRC) 


16.810 

14 

Some CAD-Theory 


Geometrical representation

(1)  Parametric Curve Equation vs. 
Nonparametric Curve Equation 

(2) Various curves (some mathematics !) 
- Hermite  Curve  
- Bezier Curve  
- B-Spline Curve  
- NURBS (Nonuniform Rational B-Spline) Curves 

Applications: CAD, FEM, Design Optimization 

16.810 

15 

Curve Equations

Two types of equations for curve representation 

(1)  Parametric equation 
x, y, z coordinates are related by a parametric variable  (u or  θ) 
(2) Nonparametric equation

x, y, z coordinates are related by a function


Example: Circle (2-D) 
Parametric equation 

x R cos θ, 
=

y R  sin θ  (0 ≤θ≤ 2π)
= 

Nonparametric equation 
 = 0 
 R
x
 y
+  2  −
2
2

(Implicit nonparametric form) 

y = ±  R

2 

 x
−  2 

(Explicit nonparametric form)

16.810 

16 

 
Curve Equations

Two types of curve equations 

(1)  Parametric equation	 Point on 2-D curve:  p = [ ( )   u

x u
y ( )]
Point on 3-D surface:  p = [ ( )   u z ( )]

x u
y ( )   u 
u : parametric variable and independent variable 
y
f ( )  :  2-D  ,
x	
  z
f ( x, y )  :  3-D  

(2) Nonparametric equation 

= 

= 

Which is better for CAD/CAE? 

: Parametric equation 

x R cos θ , 
=	

y R  sin θ	
= 

(0 ≤θ≤ 2π ) 

θ∆ 

2

x

+

2 

 y

2

R
− 

= 0 

y = ±  R

2

x
−  2 

It also is good for
calculating the 
points at a certain 
interval along a 
curve

16.810 

17 

 
 
Parametric Equations – 

Advantages over nonparametric forms 

1. Parametric equations usually offer more degrees of freedom for 
controlling the shape of curves and surfaces than do nonparametric forms. 
e.g. Cubic curve
au
Parametric curve:  x
  bu
  cu d
3  + 
= 
+
+ 
eu
y
  fu
  gx h
3  + 
+ 
+
= 
  cx d
Nonparametric curve: y
ax
  bx
2
3  + 
= 
+
+ 

2

2

2. Parametric forms readily handle infinite slopes 
dy / du 
dy
⇒  dx / du = 0  indicates dy / dx = ∞
dx 
dx / du 

=

3. Transformation can be performed directly on parametric equations
e.g. Translation in x-dir. 
Parametric curve:  x
au
= 
eu
y
= 
Nonparametric curve: y
=

  cu d
x
  bu
3  + 
+  + + 
0
  gx h
  fu
3  + 
2
+
+ 
x )3  + b( x
a ( x
−  0 

x ) + d 
−  0

2

x
−  0

 )  + c( x
2 

16.810 

18 

 
 
 
 
 
Hermite Curves


* Most of the equations for curves used in CAD software are of degree 3, because 
two curves of degree 3 guarantees 2nd derivative continuity at the connection point 
Æ The two curves appear to one. 

* Use of a higher degree causes small oscillations in curve and requires heavy 
computation. 

* Simplest parametric equation of degree 3 
P( )   [ ( )  
u =  x u y (u z (u )] 
)
= a0 + a1u + a  u 2 + a3u 
2 
a1 , a 2 , a3 :  Algebraic vector coefficients 
a
0 , 

(0 ≤ u ≤ 1) 

3

u

START  
(u = 0) 

END  
(u = 1) 

The curve’s shape change cannot be intuitively anticipated 
from changes in these values 

16.810 

19 

Hermite Curves

2  + a3
+ a 2
P( )  = a  + a1u
(0 ≤ u ≤ 1) 
u
u 
3 
0 
Instead of algebraic coefficients, let’s use the position vectors and the 
tangent vectors at the two end points! 

u

Position vector at starting point:  P0  = P(0) = a0 
P1  = P(1) = a0  + a1  + a 2  + a3 
Position vector at end point: 
′ 
Tangent vector at starting point:  P0  = P′ (0) = a1 
′ 
P1  = P′ (1) = a  + 2a 2  + 3a3
Tangent vector at end point: 
1 

′ 
P0 

P0
START  
(u = 0) 

u

′ 
P1

P1

END  
(u = 1)

Blending functions 

P( )  = − 3u
u
[1 

  u
2  + 2 3 

2 

  u
3 

  u
− 2 3 

u

u
− 2 2  +

u

3

2

  − u

+


u

: Hermit curve

⎡ P0  ⎤ 
⎢
⎥
P 
⎥
3 ] ⎢
1 
⎢
⎥ 
′
⎢ P
⎥
0
⎢ 
′ ⎥

⎣ P1  ⎦

No algebraic coefficients 
′ 
′
P P0 , P  P  :  Geometric coefficients
0 , 
1 ,
1 
The curve’s shape change can be intuitively anticipated from 
changes in these values 

16.810 

20 

 
 
 
 
Effect of tangent vectors on the  

curve’s shape


P0 
⎡ 
⎤
⎥
⎢ 
P
⎢ 
⎥
1 
⎢ 
⎥
′ 
P 
⎥
⎢ 
0 
⎥
⎢ 
′ 
P 
⎦ 
⎣ 
1 

⎡ P(0) ⎤
⎥
⎢ 
P 
(1) 
⎢ 
⎥ 
:  Geometric coefficient matrix 
= ⎢ 
⎥
′ 
P 
(0) 
⎥ 
⎢ 
⎥
⎢ 
′ 
P
(1) 
⎦ 
⎣ 

Geometric coefficient matrix 
controls the shape of the curve 

1 
⎡ 
⎢ 
5 
⎢ 
13 
⎢ 
⎢ 
13 
⎣ 

1 
1 
13 
-13 

⎤ 
⎥ 
⎥ 
⎥ 
⎥ 
⎦ 

START  
) 
(1, 1
u  = 
( 
0)

16.810 

u

Is this what you really wanted? 

1
1
⎡ 
⎤ 
⎢ 
⎥ 
5
1
⎢ 
⎥ 
5
5
⎢ 
⎥ 
⎢ 
⎥ 
5 -5  
⎦ 
⎣ 

1
1
⎡ 
⎤ 
⎥ 
⎢ 
1
5
⎥ 
⎢ 
2
2
⎢ 
⎥ 
⎥ 
⎢ 
2 -2  
⎦ 
⎣ 

1
1
⎡ 
⎤ 
⎥ 
⎢ 
1
5
⎥ 
⎢ 
1
1
⎢ 
⎥ 
⎥ 
⎢ 
1 -1  
⎦ 
⎣ 

END  
(5, 1
) 
u  = 
( 
1)

dy 
dx 

= 

dy  du 
/
dx  du 
/

⎡1 1 ⎤ 
⎢5 1 ⎥

⎥
⎢ 
⎢4 0⎥ 
⎢
⎥ 
⎣4 0⎦ 
0 
= 0 
=
4 

21 

 
 
 
 
 
 
 
 
 
Bezier Curve 

* In case of Hermite curve, it is not easy to predict curve shape according to 
′
′
changes in magnitude of the tangent vectors,  P0   and P1

* Bezier Curve can control curve shape more easily using several control 
points (Bezier 1960) 

,

n 
n
n !
n  ⎛ ⎞ i
⎛ ⎞ 
uP( )  = ∑ ⎜ ⎟ u (1 − u )  Pi 
  where  ⎜ ⎟ = 
n i
−
i
i 
i n   i
 ) !

!(  −
i =0  ⎝ ⎠ 
⎝ ⎠ 
Pi :  Position vector of the i th vertex (control vertices) 

Control vertices 
2P 
1P 

n=3 

Control polygon 

* Number of vertices: n+1 
(No of control points) 

* Number of segments: n 

P0

P3
* The order of Bezier curve is determined by the number of control points. 
n control points 
Order of Bezier curve: n-1 
16.810 

* Order of the curve: n 

22 

 
Bezier Curve 


Properties 
- The curve passes through the first and last vertex of the polygon. 
-The tangent vector at the starting point of the curve has the same 
direction as the first segment of the polygon. 
- The nth derivative of the curve at the starting or ending point is 
determined by the first or last (n+1) vertices. 

16.810 

23 

Two Drawbacks of Bezier curve 


(1) For complicated shape representation, higher degree Bezier curves are 
needed. 
Æ Oscillation in curve occurs, and computational burden increases. 

(2) Any one control point of the curve affects the shape of the entire curve. 
Æ Modifying the shape of a curve locally is difficult. 
(Global modification property) 

Desirable properties : 
1. Ability to represent complicated shape with low order of the curve 
2. Ability to modify a curve’s shape locally 

B-spline curve! 

16.810 

24 

B-Spline Curve 


( )uP 

n ∑ ,  ( )
P 
 u
N
= 
i
i k  
0i = 

* Developed by  Cox and Boor (1972) 

where 
P 
i 
: Position vector of the  th control point 
i 
  u N  
u t N   u  
t
u
( )   (  
)  
(  
)  
( )
− 
− 
 k
i
 i k
i k
i
1
 
,
 
 1
1,
+  − 
− 
+ 
+ 
 t
t
t
 t
− 
− 
i
i k  
i k  
i
1 
1 
+ − 
+ 
+ 
t
 u
t
≤ ≤ 
i 
i
1 
+
otherwise

N u
( )  
= 
i k  
, 

 

iN u =
,1 ( )

1 
⎧ 
⎨ 
0 
⎩ 

i
k
0 
0 
≤ < 
⎧ 
⎪ −  + 
it = 
n
i
k
k
i
1 
≤ ≤ 
⎨ 
⎪ − +
n i
n k
n k
2 
< ≤  + 
⎩ 
(Nonperiodic knots) 

k: order of the B-spline curve 
n+1: number of control points 

The order of curve is independent of the number 
of control points! 

16.810 

25 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
B-Spline Curve

Example

Order (k) = 3 (first derivatives are continuous)

No of control points (n+1) = 6

Advantages
(1) The order of the curve is independent of the number of control points (contrary to
Bezier curves)
- User can select the curve’s order and number of control points separately.
- It can represent very complicated shape with low order

(2) Modifying the shape of a curve locally is easy. (contrary to Bezier curve) 
- Each curve segment is affected by k (order) control points. (local modification property)

16.810

26

NURBS (Nonuniform Rational B-Spline) Curve


P( )  =
u 

u
 ( )  

n ∑ h N i k
P 
i
i
, 
i =0 
n ∑ h N i k
 ( )u
i 
, 
i =0 
P  : Position vector of the  th control point 
i
i 
hi : Homogeneous coordinate 

n 
⎛
⎜ B-spline :  P(u ) = ∑ P  N i k
i 
, 
⎝ 
i = 0 

⎞
 (u ) ⎟
⎠

* If all the homogeneous coordinates (hi) are 1, the denominator becomes 1 
n 
If hi  = ∀i, then ∑ h N
 u
0 
( 
) = 1. 
i
i =0 

i k
, 

* B-spline curve is a special case of NURBS. 

* Bezier curve is a special case of B-spline curve. 

16.810 

27 

 
 
 
 
Advantages of NURBS Curve over B-Spline Curve


(1)  More versatile modification capacity 
- Homogeneous coordinate hi, which B-spline does not have, can change. 
- Increasing hi  of a control point Æ Drawing the curve toward the control point. 

(2) NURBS can exactly represent the conic curves - circles, ellipses, parabolas, and 
hyperbolas  (B-spline can only approximate these curves) 

(3) Curves, such as conic curves, Bezier curves, and B-spline curves can be 
converted to their corresponding NURBS representations. 

16.810 

28 

Summary


(1) Parametric Equation vs. Nonparametric Equation 

(2) Various curves
- Hermite  Curve  
- Bezier Curve  
- B-Spline Curve  
- NURBS (Nonuniform Rational B-Spline) Curve 
(3) Surfaces
- Bilinear surface 
- Bicubic surface 
- Bezier surface 
- B-Spline surface 
- NURBS surface 

16.810 

29 

SolidWorks Introduction 


  SolidWorks 
  Most popular CAD system in education 
  Will be used for this project 
  40 Minute Introduction by TA 
  http://www.solidworks.com  (Student Section) 

16.810 

30 

