Queueing Systems: Lecture 4 

Amedeo R. Odoni

October 20, 2006


Lecture Outline 
•  M/G/1: a simple example 
•  Introduction to systems with priorities 
•  Representation of a priority queuing system 
•  The M/G/1 non-preemptive priority system 
•  An important optimization theorem 
•  … and an important corollary 
•  Brief mention of other priority systems 
•  Bounds for G/G/1 systems 

Reference: Chapter 4, pp. 222-239 (just skim
Sections 4.8.2 and 4.8.4) 

Expected values for M/G/1 

L = ρ+	

(ρ< 1)

ρ 2  + λ2  ⋅σ S 
2 
2(1 − ρ)

1  ρ 2  + λ2  ⋅σ S 
2

+
2λ(1 − ρ ) 
μ 
ρ 2  + λ2  ⋅σ S 
2 
2λ(1 − ρ )

=

W  =	

Wq  =

ρ 2 (1 + C S 
2 ) 
1  ⋅
ρ
= 
2λ(1 − ρ)  μ  (1 − ρ)

2 ) 
(1 + C S 
⋅ 
2 

Lq	 =

ρ 2
2 
2 
⋅σ 
λ
+ 
S 
(1 
2
) 
ρ
− 

Note :  C S  = 

σ 
S
E 
S ] 
[ 

= μ⋅σ S 

Runway Example 

•	 Single runway, mixed operations 
•	 E[S] = 75 seconds; σS = 25 seconds 
μ = 3600 / 75 = 48 per hour 
•	 Assume demand is relatively constant for a 
sufficiently long period of time to have 
approximately steady-state conditions 
•	 Assume Poisson process is reasonable 
approximation for instants when demands 
occur 

Estimated expected queue length 
and expected waiting time 

λ (per hour) 

ρ 

30 
30.3 

36 
36.36 

42 
42.42 

45 
45.45 

0.625 
0.63125 

0.75 
0.7575 

0.875 
0.88375 

0.9375 
0.946875 

Lq 

0.58 
0.60 

1.25 
1.31 

3.40 
3.73 

7.81 
9.38 

Lq 
(% change) 

3.4% 

4.8% 

9.7% 

20.1% 

Wq 
(seconds) 
69 
71 

125 
130 

292 
317 

625 
743 

Wq
(% change) 

2.9% 

4% 

8.6% 

18.9% 

Can also estimate PHCAP ≅ 40.9 per hour 

Announcements 

•	 Quiz #1: October 25, open book, in class; 
quiz begins at 10:00, ends at 12:30; pick 
any TWO hours (10-12 or 10:30-12:30) 
•	 Odoni: Office hrs Tu 10-12 
•	 Old quiz problems and solutions: posted 
•	 Quiz coverage for Chapter 4: Sections 4.0 
– 4.6 (inclusive) 

Background and observations 

•	 W, L, Wq  and Lq  are not affected by the order of 
service, as long as the queue discipline does
not give priority to certain classes of 
customers 
•	 WFIFO  = WSIRO  = WLIFO  (what about the
corresponding variances?) 
•	 However, we may be able to influence W in 
systems where customers are assigned to 
priority classes, if different classes have 
different service-time characteristics 
•	 Preemptive vs. non-preemptive priority 
•	 Preemptive-resume vs. preemptive-repeat 

M/G/1 system with non-preemptive 
priorities: background 

• 

• 
• 

• 
• 
• 
• 

r classes of customers; class 1 is highest 
priority, class r is lowest 
Poisson arrivals for each class k; rate λk 
General service times, Sk , for each class; 
fSk(s); E[Sk]=1/μk; E[Sk2] 
FIFO service for each class 
Infinite queue capacity for each class 
Define: ρk = λk /μk 
Assume for now that: ρ = ρ1 + ρ2 +….+ ρr <1 

A queueing system with r priority 
classes 

λ1 

λ2 

λk−1 

λk 

λk+1 

λr 

x 

x 

x  x 

x 

1 

2 

x 

k-1 

k 

x x x 

x 

k+1 

x 

x 

r 

Service 

Facility 

Expected time in queue of customer of 
class k who has just arrived at system 
k  1  ⋅ Lqi  + 
k 
−1 1  ⋅ M i

Wqk  = W0  + ∑ 
∑
i =1 μi

i =1 μi
W0 = expected remaining time in service of the customer who is 
occupying the server when the new customer (from class k) arrives 

Lqi = expected no. of customers of class i who are already waiting 
in queue at the instant when the newly arrived customer (from class 
k) arrives 

Mi  = expected number of customers of class i who will arrive while 
the newly arrived customer (from class k) is waiting in queue 

Expressions for the constituent parts 

(W0 | i ) = 

2 
S 
E 
[ 
]
i
S 
E
[ 
2 
] 
⋅ 
i 

=

2 ] 
[S i 
μi  ⋅ E 
2

[random incidence, see (2.66)]


2 ] 
r  ρi  ⋅μi  ⋅ E[S i 
r 
ρi  ⋅ (W0 | i) = ∑ 
Î  W0  = ∑ 
2
i =1 
i =1 

2 ] 
r  λi  ⋅ E[S i 
=∑ 
2

i =1


Lqi  = λi  ⋅Wqi 

M i  = λi  ⋅Wqk 

(1) 


(2) 

(3) 

A closed-form expression 

k −1

k
Wqk  = W0  + ∑ ρi  ⋅Wqi  + Wqk  ⋅ ∑ ρi 
i =1 
i =1


[from (1), (2) and (3)]


for  k  = 1, 2,......, r 

k

W0  + ∑ ρi  ⋅Wqi

i = 
1 
k 
−1 
1 − ∑ ρi

i =1

and solving (4) recursively, for k=1, k=2,….., we obtain (5): 
k 
W 
0 
∑
for  k  = 1, 2,......, r  where  a k  = 
ρi

(1 − a k − 
1 − a k ) 
1 )(
i 
1 
= 

(4)


Î 

Wqk  = 

Wqk  = 

Minimizing total expected cost 

ck = cost per unit of time that a customer of class k 
spends in the queuing system (waiting or being served) 
• Suppose we wish to minimize the expected cost (per 
unit of time) of the total time that all customers spend in 
the system: 
r

r
r
C  = ∑ ci  ⋅ Li  = ∑ ci  ⋅ ρi  + ∑ ci  ⋅λi  ⋅Wqi 
i =1 
i =1

i =1 
• For each class k compute the ratio 
ck  = ck  ⋅μk
f k	 = 
E[S k ] 

(6) 


Optimization Theorem and a Corollary 

•	 Theorem: To minimize (6), priorities should be 
assigned according to the ratios fk : the higher 
the ratio, the higher the priority of the class. 

•	 Corollary: To minimize the total expected time 
in the system for all customers, priorities 
should be assigned according to the expected 
service times for each customer class: the 
shorter the expected service time, the higher 
the priority of the class.  

Cost inflow and outflow in a 
priority queuing system 

Cost ($) 

Cost 
inflow 

c(t) 

Cost 
outflow 

ck 

ck 

t1 

t2 

Time 

A generalization 

• Let p be an integer between 1 and r such that 
ρ1 + ρ2 +….+ ρp <1 
while     ρ1 + ρ2 +….+ ρp + ρp+1 ≥ 1 
• Then customers in classes 1 through p experience 
steady-state conditions, while those in p+1 through r 
suffer unbounded in-system (or waiting) times 
• Customers in classes 1 through p occupy the server a 
fraction ρk of the time each (k = 1, 2, …, p); customers in 
class p+1 occupy the server a fraction 1- ap  ;and the other 
classes do not have any access 
• The expression (5) for Wqk can be modified accordingly 
by writing the correct expression for W0 in the numerator  

Generalized expression 

(1 − a p ) ⋅ E[S 2 
p  ρi  ⋅ E[S i 
2 ] 
p +1 ] 
∑ 
+ 
E[S 
Wqk  =  i =1 2 ⋅ E 
S 
2 
[
i ] 
p +1 ] 
⋅ 
a 
a
) 
)(1
1 
(
− 
−
k −1 
k 

for  k  ≤  p 

Wqk  = ∞  k  >  p 

Other priority systems 

•	 Simple closed-form results also exist for 
several other types of priority systems; 
examples include: 
_	 Non-preemptive M/M/m queuing systems with r classes 
of customers and all classes of customers having the 
same service rate μ 
_	 Preemptive M/M/1 queuing systems with r classes of 
customers and all classes of customers having the 
same service rate μ (see below expression for Wk) 
k 
(1 μ) 
for  k  = 1, 2,......, r  where  a k  = ∑ 
ρi
(1 − a k −1 )(1 − a k )	
i =1 

Wk  = 

A general upper bound for G/G/1 
systems 

• A number of bounds are available for very general 
queueing systems (see Section 4.8) 
• A good example is an upper bound for the waiting time at 
G/G/1 systems: 
2  +σ S 
2 ) 
λ⋅ (σ X 
2 ⋅ (1 − ρ)


(ρ< 1) 

W	 ≤ 
q 

(1) 


where X and S are, respectively, the r.v.’s denoting inter-
arrival times and service times 
• Under some fairly general conditions, such bounds can 
be tightened and perform extremely well 

Better bounds 

for a (not so) special case


• For G/G/1 systems whose inter-arrival times have the 
property that for all non-negative values of t0, 
1
E[ X  − t 0 | X  > t 0 ] ≤
λ  (what does this mean, intuitively?) 
it has been shown that: 
2  +σ S 
2 ) 
λ⋅ (σ X 
2 ⋅ (1 − ρ) 

1 + ρ 
B − 
≤ Wq  ≤ B = 
2λ	

(ρ< 1) 

(2)

• Note that the upper and lower bounds in (1) differ by, 
at most, 1/λ and that the percent difference between 
the upper and lower bounds decreases as ρ increases! 

