1.203J / 6.281J / 13.665J / 15.073J / 16.76J / ESD.216J 
Logistical and Transportation Planning Methods 

Problem Set 6 

 

Due: December 6, 2006 

 
 
 

 
 
Problem 1 

 

 

 

 

 

 

1.203J / 6.281J / 13.665J / 15.073J / 16.76J / ESD.216J 
Logistical and Transportation Planning Methods 

 

 

 

 

 
 

 

 

 
 

1.203J / 6.281J / 13.665J / 15.073J / 16.76J / ESD.216J 
Logistical and Transportation Planning Methods 

 
 
Problem 2 
 

 

 

 
 
 
Problem 3  
(a)  As suggested, we can prove the results by contraposition. Let’s suppose that the set of nodes T 
contains no solution to the 1-median problem. Then, the solution one of S’s nodes. Let y ∈ S be 
that node.  

≥  

),()(
tydSH

),()(
tdjh
j

),()(
jydjh

 

),()(
tdjh
j

),()(
tdjh
j

),(
)[
(
jydjh

+

,(
tyd

)]

 

),()(
tdjh
j

 

=  ∑
∈Tj
=  ∑
∈Tj
= J(t) 

 

 
 
This implies that the 1-median could be located at 
assumption.  
Therefore, the set of nodes T contains at least one solution to the 1-median problem on G(N,A).  

Tt ∈ , which contradicts our initial 

Then  

 

 

 

 

 

 

 

 

 

 

),()(
jydjh

),()(
jydjh

 

    J(y)   =  ∑
∈Tj

=  ∑
Tj
∈

(
),(
)[
tydjh

+

,(
td

j

= 

),()(
tydTH

),()(
j
tdjh

),()(
jydjh

 

),()(
jydjh

 

)]

+  ∑
∈Sj
+  ∑
∈Sj
+  ∑
∈Sj
+  ∑
∈Sj

+ ∑
∈Tj
+ ∑
∈Tj
+  ∑
Sj
∈
+  ∑
∈Sj

1.203J / 6.281J / 13.665J / 15.073J / 16.76J / ESD.216J 
Logistical and Transportation Planning Methods 

 
 

 
(b)  From part (a), we know that there is an optimal solution in T.  
     J(y) =  ∑
+  ∑
),()(
),()(
Ty ∈∀
jydjh
jydjh
 
∈Tj
∈Sj
=  ∑
),()(
jydjh
)
(
tTj
−∈

+ ∑
Sj
∈

),()(
tydth

+

 

 

)[
(
),(
tydjh

+

,(
td

j

)]

 

 

 

= ∑
),()(
jydjh
)
(
tTj
−∈

+

),()(
tydth

+

),()(
tydSH

),()(
tdjh
j

 

)([
(
)]
),(
tydSHth
+

),()(
tdjh
j

 

+ ∑
∈Sj
+ ∑
∈Sj

 

 

 

=  ∑
),()(
jydjh
)
(
tTj
−∈

+

 

  

Ty ∈∀

Therefore, we have:    
where C =  ∑
∈Sj
~
=  ∑
),()(
)(
jydjh
yJ
)
(
tTj
−∈

),()(
tdjh
j

and 

 

J(y) = 

~
)(
yJ

+ C 

 does not depend on y  

+

)([
(
)]
),(
tydSHth
+

 

~
J

is the objective function for the 1-median problem on 

,('
tATG

)

with the weight of node t 

given by 

)(
SH

+

)(
th

. 

 
(c)  The isthmus edge (g, i) separates the network into two distinct subnetworks with node sets S1 and 
T1, where: 
S1 = {a, b, c, d, e, f, g, h} 
T1 = {i, j, k, l, m, n, o, p, q} 

 

H(S1) = 32 and H(T1) = 41. Therefore, an optimal solution must be one of the nodes in T1.  

We now disregard the portion of the network involving nodes in S1 and increase the weight at  i to 

( )
( )SHih +

 = 5 + 32 = 37. Consider the isthmus edge (i, j) which divides the new graph into two 

distinct subnetworks with S2 = {j, k, l, m} and T2 = {i, n, o, p, q}. Clearly H(S2) < H(T2) (remember 
( )ih

 is now 37). So, we can disregard the portion of the new network involving nodes in S2. And 

that 

again, we must increase the weight at  i by H(S2). So, the weight at node  i  becomes 37 + H(S2) = 37 + 

17 = 54.  

The new network consists only of nodes i, n, o, p , q, and edges between pairs of nodes from this set. 

Now consider the isthmus edge (i, n) which divides the new graph into nodes sets S3 = {i} and T3 = 

{n, o, p, q}. H(S3) = 54 and H(T3) = 19. Therefore, an optimal solution to the 1-median problem is to 

locate at node i.  

 
 
 
 
 
 

1.203J / 6.281J / 13.665J / 15.073J / 16.76J / ESD.216J 
Logistical and Transportation Planning Methods 

 
 
Problem 4 
(a)  TD, the minimum spanning tree of D, has an even number of odd-degree nodes, like any 
undirected network.  
Let v be the point in D that is closest to s.  
We then have two cases:  
- 
v had an even degree in TD, or 
- 
v had on odd degree in TD. 
 
If v had an even degree, then the addition of the edge (s, t) will make v a node of odd degree in T. 
This increases the number of odd-degree nodes in the “D part” of the tree T by one. We have an 
odd number of odd-degree nodes in R.  
 
If v had an odd degree, then the addition of the edge (s, t) will make v a node of even degree in T. 
This decreases the number of odd-degree nodes in the “D part” of the tree T by 1. We then have 
an odd number of odd-degree nodes in R.  

 
(b)  (i) H adds one more incidence to all the odd-degree nodes in T. Therefore, the graph G has no 
nodes of odd-degree. It then has an Euler tour.  

 

(ii) The key observation here is that because of the large additional cost K associated with each 
pairing of a point in D with a point in P, there will be only one pairing of an odd-degree point in D 
(call it z) with an odd-degree point in P (call it w) in the optimal matching.  
(Note that from (a) we know that there will be one “left-over” odd-degree point from D and one 
“left-over” odd-degree point in P, after we have finished the pair wise matching of odd-degree 
points in D with one another and of odd-degree points in P with one another; please also note that, 
by construction, s will always have a degree of 2 in T).  
Thus we can begin at s, find an Euler path from s to z that visits all the points in D at least once, 
then use the link (z, w) to go to the points in P, and then find an Euler path from w to s that visits 
all the points in P at least once.  

 
 
Problem 5 
 

 

 

 

 

1.203J / 6.281J / 13.665J / 15.073J / 16.76J / ESD.216J 
Logistical and Transportation Planning Methods 

 
 

 
 
Problem 6 
 
(a)  For L1: according to step 2, the length between city 1 and 

( )1pi

is less or equal to 

 

1

k

(

L

−

2

d

)

+

d

max

max

. Therefore:  

L1   ≤  

≤  

1

k
1

k

 

(

L

−

2

d

)

+

d

max

(
)1,1pid
( )

  

+

max

(

L

−

2

d

)

+

2

d

 

max

max

For Lj where j∈ {2, 3, …, k-1}, we have from step 2 that: 
j

the length of L between 1 and 

 is less than or equal to 

( )jpi

(

L

−

2

d

max

)

+

d

,  

max

k

the length of L between 1 and 

) 11 +−jpi
(

 is greater than 

j

−

1

k

(

L

−

2

d

)

+

d

.  

max

max

) 11 +−jpi
(
)
++−
)
11

(
jp

Therefore, the length of L between 

 and 

( )jpi

 is less than or equal to 

This proves the results since 

(
,1

i

d

(
,1

i

d

)

( )
jp

≤

2

d

. 

max

 
For Lk, we have  
1
k
−

Lk 

L
−≤

[

(

L

−

2

d

max

)

+

d

]

+

d

= 

max

max

1

k

(

L

−

2

d

)

+

2

d

 

max

max

k

(
L

−

2d

)max

. 

j

k

 
(b)  From the previous question we have  
1

(

L

−

2

d

max

)

+

2

d

= 

max

L(Tlong) 

≤

L

k

+

2 max
d





1

−

1

k





 

k
We know the following: 
3

L  ≤  

*
L    

2

(Christofides algorithm) 

1.203J / 6.281J / 13.665J / 15.073J / 16.76J / ESD.216J 
Logistical and Transportation Planning Methods 

 
 

L

*

≤

≤

max

)

 

)

) 

*
L ≤

k
2
d

(
*
longTkL

(obvious, since 

(
*
longTL
(
)
*
longTL
Using successively the above three inequalities we have 


1
L
(
)


*
1
longTL



(obvious) 

2 max
d

 

≤

   

+

−

 

k

 

 

 

 

 

 

 

 

 

≤

≤

≤

≤

k

3

2

3

2




5

2

*
L

3

2

k

+

2

d

max





1

−

(
*
TL long

)

+

2

d

max

1

k








 

1

−

1

k





 

(
*
TL
long

)

+

(
*
TL
long


)



1

−

1

k





 

−

1

k





(
*
longTL

)

 

