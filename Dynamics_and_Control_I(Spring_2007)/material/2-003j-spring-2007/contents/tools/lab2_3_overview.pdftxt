MatLab & Programming

Programming
X=0

X=X-0.1

X+3<0.1
yes

Output x

No

Cite as: Peter So, course materials for 2.003J/1.053J Dynamics and Control I, Spring 2007. MIT OpenCourseWare
(http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD Month YYYY].

Programming

What is programming?
Programming is the preparation of a step-by-step 
instruction for a computer to follow

When is programming “profitable”
*repetitive computation
*automation/real time control
*reusable “code” – objects

Programming languages
C, C++, C#, java, m-lab script

Cite as: Peter So, course materials for 2.003J/1.053J Dynamics and Control I, Spring 2007. MIT OpenCourseWare
(http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD Month YYYY].

Anatomy of a program
Flow chart – a graphic representation of the logical
sequence of instructions

Algorithm – a sequence of instructions designed to
solve a specific problem

Action

X=0

Decision

X+3<0.1

Start
Terminal
Cite as: Peter So, course materials for 2.003J/1.053J Dynamics and Control I, Spring 2007. MIT OpenCourseWare
(http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD Month YYYY].

Conditionals
Conditional is a branching point in the program.  
Depending on specific condition, the program can take
different actions.
start

Example: a simple 
program that add 1 to 
odd integer 
input and do nothing to 
even integer input

input X

rem(X,2)==0

No

Yes

X=X+1

X=X

output x

end
Cite as: Peter So, course materials for 2.003J/1.053J Dynamics and Control I, Spring 2007. MIT OpenCourseWare
(http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD Month YYYY].

Programming in MatLab

Step 1: Create a m-file (xxx.m)
[Matlab Menu: file->new]

Step 2: Input sequence of MatLab instructions

Step 3: Save (in working directory) and run 
[Editor Menu:debug->save & run]

Cite as: Peter So, course materials for 2.003J/1.053J Dynamics and Control I, Spring 2007. MIT OpenCourseWare
(http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD Month YYYY].

MatLab realization of program

start

input X

rem(X,2)==0
No

yes

X=X+1

X=X

output x

end

x=input('input integer: ');
if (rem(x,2) == 0)
x=x;
else
x=x+1;
end
x

Cite as: Peter So, course materials for 2.003J/1.053J Dynamics and Control I, Spring 2007. MIT OpenCourseWare
(http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD Month YYYY].

Conditional: If, else, end

if logic condition
action1;
action1;

action2;
action2;

else

end

Check out also elseif

Cite as: Peter So, course materials for 2.003J/1.053J Dynamics and Control I, Spring 2007. MIT OpenCourseWare
(http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD Month YYYY].

Repetition
Example: fill a 1-D matrix A with length 10 with 2s.
start

Create A

i=1;

A(i)=2;

i=i+1;

i>10

Yes

No

end
Cite as: Peter So, course materials for 2.003J/1.053J Dynamics and Control I, Spring 2007. MIT OpenCourseWare
(http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD Month YYYY].

Repetition: for loop

start

Create A

i=1;

A(i)=2;

i=i+1;

start:
loop 
variable
initiation

no

loop 
variable 
update

A=zeros(10,1);
for i=1:10
A(i)=2;
end

for start/end condition
action1;
action1;
action1;

i>10
yes

end
end conditional
end
Cite as: Peter So, course materials for 2.003J/1.053J Dynamics and Control I, Spring 2007. MIT OpenCourseWare
(http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD Month YYYY].

More Conditionals – elseif

if logic condition
action1;
action1;

else

end

action2;
action2;

if logic condition 1
action1;
action1;
else if logic condition 2
action2;
action2;
else if logic condition 3
action3;
action3;

else

action4;
action4;

end
Cite as: Peter So, course materials for 2.003J/1.053J Dynamics and Control I, Spring 2007. MIT OpenCourseWare
(http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD Month YYYY].

More Conditionals – switch
switch variable
case var1
action1;
action1;
case var2
action2;
action2;
case var3
action3;
action3;
otherwise
action4;
action4;

end
Cite as: Peter So, course materials for 2.003J/1.053J Dynamics and Control I, Spring 2007. MIT OpenCourseWare
(http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD Month YYYY].

Switch -- examples

a=2;
switch a
case 1
disp('1')
case {2; 3; 4}
disp('2 or 3 or 4')
case 5
disp('5')
otherwise
disp('something else')

end

a='M';
switch a
case 'a'
disp('A')
case {'b'; 'c'; 'd'}
disp('B')
case 'M'
disp('m')
otherwise
disp('something else')

end

Cite as: Peter So, course materials for 2.003J/1.053J Dynamics and Control I, Spring 2007. MIT OpenCourseWare
(http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD Month YYYY].

Conditionals – if or switch

When should we use “if-elseif-else-end”
or “switch-case-otherwise-end”?

There are no fix rules … whatever makes the inherent 
logic clearer to the programmer and the reader

“if” is more binary decision process while “case” is
more tree-like
“if”

“case”

Cite as: Peter So, course materials for 2.003J/1.053J Dynamics and Control I, Spring 2007. MIT OpenCourseWare
(http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD Month YYYY].

Nesting – layers and layers
a='M';
switch a
case 'a'
disp('A')
case {'b'; 'c'}
switch a
case {'b'}
disp('B')
case {'c'}
disp('C')

a=a+2;

if a== 0
a=a-1;

else

end;
otherwise
disp('something else')

a=3;
if rem(a,2) ~= 0
a=a+1;

else

end;

end;
disp(a)

end;
Cite as: Peter So, course materials for 2.003J/1.053J Dynamics and Control I, Spring 2007. MIT OpenCourseWare
(http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD Month YYYY].

Loops: more for loops
for start/end condition
Ending condition is tested
action1;
at the “for” statement
action1;
action1;

end
for a=1:5
disp(a);

end
Output: 1, 2, 3, 4, 5
for a=1:2:5
disp(a);

for a=1:-2.5:-5
disp(a);

end
Output: 1, -1.5,-4
for a=-10:-2.5:-5
disp(a);

end
end
Output:
Output: 1, 3, 5
Cite as: Peter So, course materials for 2.003J/1.053J Dynamics and Control I, Spring 2007. MIT OpenCourseWare
(http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD Month YYYY].

Nesting “For” loops

for start/end condition1
action1;
action1;
for start/end condition2
action2;
action2;

end;

end;

Cite as: Peter So, course materials for 2.003J/1.053J Dynamics and Control I, Spring 2007. MIT OpenCourseWare
(http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD Month YYYY].

Example of Nested “For” Loops
Filling a 3x3 matrix where the element value
is equal to the sum of its row and column number 
except for the diagonal elements which are zeros

Output:

A=zeros(3,3);
for i=1:3
for j=1:3
if i~=j
A(i,j)=i+j;
end;
end;
end;
disp(A)
Cite as: Peter So, course materials for 2.003J/1.053J Dynamics and Control I, Spring 2007. MIT OpenCourseWare
(http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD Month YYYY].

0     3     4
3     0     5
4     5     0

How many times did the 
“if” loop get executed?

More Conditionals -- while

while start/end condition1
action1;
action1;

end;

a=1;
while a < 5
disp(a)
a=a+1;

end;
Output: 1, 2, 3, 4

Ending condition is tested
at the “while” statement

Cite as: Peter So, course materials for 2.003J/1.053J Dynamics and Control I, Spring 2007. MIT OpenCourseWare
(http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD Month YYYY].

Looping: “for” or “while”

Use “for” loop if you know how many time you want to 
repeat

Use “for” loop if index is stepwise incremented

Use “while” loop if you need to have more flexible
control of end condition
Make sure that the “while” loop will end!
a=3;
while a < 10
disp(a);
a=a-1;

end;
Cite as: Peter So, course materials for 2.003J/1.053J Dynamics and Control I, Spring 2007. MIT OpenCourseWare
(http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD Month YYYY].

Example: Calculate the air-borne time &
horizontal distance of a projectile

Initial velocity: 5i+5j, initial position: origin

(cid:5)(cid:5)
y
(cid:5)
y

y

v
0

y

g
−=
gt
+−=
1
2
Set y=0 to calculate t

tv
oy

−=

y

0

2

gt

+

+

(cid:5)(cid:5)
x
(cid:5)
x

=
=

0
v
ox

x

=

tv
ox

+

x
0

t

air

−

borne

=

y

2

v
0
g

x

=

2

vv
x
0
0
g

y

Cite as: Peter So, course materials for 2.003J/1.053J Dynamics and Control I, Spring 2007. MIT OpenCourseWare
(http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD Month YYYY].

Example: Calculate the air-borne time &
horizontal distance of a projectile numerically
start

X=0; y=0; vx=5;vy=5;t=0;dt=0.1

Y=<0
no

x=vx*dt;y=vy*dt;vy=vy-9.8*dt;t=t+dt;

yes

output x, t

end
Cite as: Peter So, course materials for 2.003J/1.053J Dynamics and Control I, Spring 2007. MIT OpenCourseWare
(http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD Month YYYY].

MatLab Code for Projectile

clear all;
x(1)=0;
y(1)=0;
vx(1)=5;
vy(1)=5;
dt=0.01;
t(1)=0;
i=1;

while y>=0
x(i+1)=x(i)+vx(i)*dt;
y(i+1)=y(i)+vy(i)*dt;
vx(i+1)=vx(i);
vy(i+1)=vy(i)-9.8*dt;
t(i+1)=t(i)+dt;
i=i+1;
end;

disp(x(i));
disp(t(i));
plot(x,y);

Cite as: Peter So, course materials for 2.003J/1.053J Dynamics and Control I, Spring 2007. MIT OpenCourseWare
(http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD Month YYYY].

