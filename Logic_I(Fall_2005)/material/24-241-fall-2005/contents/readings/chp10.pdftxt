Derivations in the Sentential Calculus 

Having already two methods for showing an SC argument to be valid, the method of truth 
tables and search-for-counterexamples, we now want to introduce a third, in which we show an 
argument to be valid by producing aprooJ  which is a sequence of sentences formed according to 
certain rules that guarantee that any sentence that the rules permit you to write down is a logical 
consequence of a specified set of premisses. It may  seem a little perverse to introduce a new 
technique when we have two already, but the actual situation is even worse than this, for the new 
procedure is, in a crucial respect, vastly inferior to the ones we have already. The old methods 
were decisionprocedures, which enabled us to test whether a given argument was valid. If the 
argument was valid, the procedure would show its validity, whereas is the argument was invalid, 
the procedure would show its invalidity. The new method is only aproofprocedure:  If an 
argument is valid, the method will enable to show that it is valid,  but the method won't provide us 
any way of showing that an invalid argument is invalid. If an argument is valid,  we can show it's 
valid by providing a proof, but the fact that we haven't been able to find a proof for a given 
argument doesn't show that the argument is invalid; maybe we just haven't looked hard enough. 

The new method is a giant step backward. The reason for taking it will only appear when 
we start work on the predicate calculus. For predicate calculus, there is no decision procedure -
the proof of this is one of the crowning glories of Logic I1 -but 
there is a proof procedure, and 
the proof procedure we will eventually learn for the predicate calculus will closely resemble the 
proof procedure we will now learn for the sentential calculus. Learning the proof procedure now 
will make our task later easier. 

There are a great number of systems of proof in use. The particular system we shall study 
here was developed by Benson Mates in his superb textbook, Elementary Logic (2nd ed. New 
York: Oxford University Press, 1972). 

Aproof  or derivation consists of a consecutively numbered sequence of sentences. The 
number of a sentence, which is written directly to its left, is its line number. To the left of the line 
number for the nth line is a (possibly empty) sequence of numbers < n. These are thepremiss 
numbers of the nth line. The sentences whose line numbers are the premiss numbers of the nth 
line constitute thepremiss set of the nth line. Sentences are written down in accordance with rules 
that make sure that each sentence we write down at any stage of a derivation is a logical conse- 
quence of its premiss set. If we introduce a new rule, what we have to make sure of is this:  If we 
use the new rule to add a new line to a derivation that up till now has had the property that each 
line was a logical consequence of its premiss set, the new line will likewise be a logical conse- 
quence of its premiss set. If all our rules have this property, we can be confident that any sentence 
we write down at any stage of a derivation will be a logical consequence of its premiss set. 

Before giving the rules, let me write down a derivation, so that you can see what an SC 
derivation looks like. The rules will come later. 

SC Derivations, p.  2 

1 . - - P  
1 
2 . ( - - - - P - - - P )  
1 
3.  - P  
3 
4 . - - - P  
2,3 
5 . ( - P - - - -
2 
TI31  7. (- - P - P) 
6.  P 
2 
The boldface "TH1" in the bottom left isn't a premiss number, and, in fact, it isn't a part of the 
derivation at all. It's a bookkeeping notation for keeping track of the things we've proved. I am 
keeping a tally, which is on the last page of this chapter. 

PI 
CP,  1 
PI 
MT, 2 , 3  
CP, 3 , 4  
MT,  1 , 5  
CP,  1 , 6  

P) 

Now  for the rules. The governing principle in devising the rules is to make sure that, at 
each stage of a derivation according to the rules, the sentence we write down is a logical 
consequ&ce  of its premiss set. Thifirst  four rules only involve the connectives "-"and  "-," and 
they suffice to capture all the valid arguments that only involve these two connectives. If I? is a 
set of SC sentences and cp  an SC sentence that contain no connectives other than "-" and "-," cp 
premiss set is included in r. Thus the derivation above will show that "(- - P - P)"  is a logical 
is a logical consequence of I? if and only if there is a derivation by the four rules of cp  whose 
consequence of the empty set, that it, that it is valid. Later, we'll add rules for the other 
connectives. 

Premiss Introduction Rule (PI). You may write down any sentence you 
like if you take the sentence as its own premiss set. 

Obviously, anything you write down by rule PI will be a logical consequence of its premiss set, 
since a sentence is a consequence of itself. One use of rule PI is simuly to let us write down the 
-
premisses of our argument. Other, more technical uses, will emerge. 

Our next rule gives us a method for proving a conditional: To prove a conditional, 
assume the antecedent as a premiss, then try to derive the consequent. This will be the central 
strategy for almost all our proofs. 
you may write ( 4  - $) with premiss set I? - {cp} .  
Conditional Proof Rule (CP). If you have derived $ with premiss set r, 
Rule CP is logical-consequence preserving, since, if $ is a logical consequence of I?,  then ( 4  -
$) is a logical consequence of r - {cp} .   Most of the time, when we apply CP, the antecedent cp 
will be an element of the premiss set r, and the effect of the rule is to reduce the size of the 
premiss set. Occasionally, we'll apply the rule when cp  isn't an element of 
this is what we did 
in line 2 of the derivation above. Such applications are legitimated by the fact that a conditional 
is a consequence of its consequent. 

- (Q - P))": 
A simpler illustration of the two ways of employing CP is the following derivation of "(P 

SC Derivations, p.  3 

PI 
CP,  1 
CP,  1 , 2  

Sentences like this that we derive ffom the empty set are called SC  theorems or theorems of 
logic. Any such theorem is logically valid. 
Modus Ponens Rule (MP).  If you have derived cp with premiss set r and 
(cp  - $) with premiss set A, you may write $ with premiss set r u A. 
(- cp  - - $) with premiss set A, you may write cp with premiss set r u  A. 
Modus Tollens Rule (MT). If you have derived $ with premiss set I?  and 
Clearly, if cp  is a logical consequence of I?  and (cp  - $) is a consequence of A, $ is a 
consequence of  u  A,  and furthermore, if $ is a consequence of I?  and (- cp  - - $) is a 
consequence of A,  cp will be a consequence of r u A. 
As an example, let us derive the so-called principle of the syllogism,"((P  - Q) -
((Q - R) - (P - R))),"  from the empty premiss set. 

PI 
PI 
PI 
m,193 
m,2 , 4  
CP, 3 , 5  
CP, 2 , 6  
CP,  1 , 7  

This derivation illustrates our standard strategy for proving conditionals: Assume 
the antecedent and try to derive the consequent. Once you have it, you can use CP to 
let's derive "((P  - (Q - R)) - (Q - (P - R)))"  ffom the empty premiss set. We begin by 
remove the antecedent from the premiss set. As another example of the same strategy, 
assuming the antecdent, hoping to fill the missing space in the following derivation: 

1 	

n.  (Q - (P - R)) 
n+ l .  ((P- (Q - R)) - ( Q - (P - R))) 

CP,  1, n 

Again, the thing we're trying to prove is a conditional, and we prove it by assuming the 
antecdennt and deriving the consequent: 

SC Derivations, p. 4 

SC Derivations, p.  5 

n-1.  (P- R) 

1,2 
(Q + 0'  + R)) 
n. 
1 
CP, 2, n- 1 

C P , l , n  
Q 
Q 
.
1
 ( 
P 
-
In trying prove "(P  - R),"  we follow the standard strategy, assuming "P"and trying to 
derive "R": 

PI 
PI 
PI 

1 
1.  ( P - ( Q - R ) )  
Q 
2. 
2 
3 
3. 
P 
. . .. . .. . .. . .. . .. . .. . .. . .. . .. . .. . .. . .. . .. . .. . . . .. . .. . .. . .. 
1,2,3 n-2. 
R 
n-1.  (P- R) 
1,2 
n+ l   (((P - (Q - R)) - (Q - (P - R))) 
(Q + 0'  + R)) 
1 
n. 
Now that we've gotten this far, we can complete the proof by filling in a couple of steps 
of modus ponem: 

CP, 3, n-2 
CP, 2, n- 1 
CP,  1, n 

. 
PI 
3. 
3 
P 
m,1 , 3  
4. 
1,2 
( Q - R )  
m,2 , 4  
1,2,3 5 .  
R 
CP, 3 , 5  
1,2 
6. 
( P - R )  
TH4  8.  (((P - (Q - R)) - (Q - (P - R)))  CP,  1 
7. 
(Q + (P+  R)) 
CP, 2 , 6  
1 
Our first derivation was the principle of double negation elimination, "(7 - P -
P)." Now  let's derive the converse principle of double negation introduction: 

PI 
PI 
CP, 2 
PI 
MT, 3 , 4  
CP, 4 , 5  
MT, 2 , 6  
CP, 2 , 7  
MT,  1 , 8  

SC Derivations, p.  6 

Looking at this proof, we see that lines 2 through 9 are exactly like the proof of TH1, 
except that "P"has been replaced everywhere bu 'GP."  This exemplifies a general 
phenomenon. Whenever we have a substitution s and a derivation of cp  kom the empty 
set, we can get a derivation of s(cp) by making the substitution uniformly throughout the 
proof. Once we have a proof of cp,  we know automatically that we can prove s(cp). There 
is nothing really to be gained by going through the whole rigamarole all over again. This 
observation motivates the following addition to the system of rules: 

Theorem Substitution Derived Rule (TH). If you have already proved cp 
ftom the empty set, you may,  at any time in any derivation, write down 
any substitution instance of cp,  again with the empty premiss set. 

TH isn't one of the basic rules of the system. It's a shortcut rule that we feel we are entitled to 
use because we know that anythmg we can derive with the rule we can already derive more 
laboriously without it. Adopting it is a way of resolving a certain tension. If we want to prove 
things about the system, it is good to have a streamlined system with as few rules as possible, but 
if we want to actually want to use the system to show arguments are valid, a more robust system 
is more practical. Use of derived rules like TH -demonstrably redundant rules that aren't part 
of the basic system -let's us have it both ways. Using TH the proof of DNI is simplified to this: 

PI 
TH1 
MT,  1 , 2  
CP,  1 , 3  
TH1 and TH5 together assure us that - - cp  and cp  are interderivable. In proofs, we need 
of Duns Scotus, "(- P - (P - Q))": 
to be able to go back and forth between them, for example, in the following derivation of the law 
1 
1 . - P  
2 
2. P 
3 . ( P - - - P )  
4 . 7 - P  
2 
5 . ( - Q - - - P )  
2 
7. (P - Q) 
6 . Q  
1,2 
TI36  8. (7 P - (P - Q)) 
1 
Reductio ad absurdurn is the method of proof in which you prove a statement by 
assuming the negation of the statement and then showing that this assumption leads to a 
contradiction. The earliest example that I know of is Pythagoras's proof that the square root of 2 
is irrational. Assume, for reductio ad absurdurn, that ./2 is rational, so that there are relatively 
prime positive integers p and q with f i =  Multiplying both sides by q and then squaring both 

PI 
PI 
TH.5 
m,293 
CP, 4 
MT,  1 , 5  
CP, 2 , 6  
CP,  1 , 7  

SC Derivations, p.  7 

sides gives us 2 qZ = pZ. This implies that pZ is even, which in turn implies that p is even, so that 
there is an r  such that p = 2 r and pZ = 4 ?. Dividing both sides by 2 gives us qZ= 2 ?. This tells 
us that qZ is even, which implies that q is even. But this contradicts the initial assumption that p 

and q were relatively prime.  So we are able to conclude that  J2  was irrational all along. 
prove the law of Clavius, "((- P - P) - P)."  Once we have this, our method of proving cp will be 
To get a formalized version of reductio ad absurdurn within our deductive system, we 
to first assume - cp  and go for a contradiction, using the law of Duns Scotus along the way: 
PI 
I . ( - P - P )  
PI 
2.  - P  
4. (- P - (P - -(- P - P))) 
3.  P 
M p ,  132 
5. (P - -(-P  - P)) 
TH6 
6.  -(- P - P) 
M P ,  2 , 4  
7 . ( - P - - - (  p - PI) 
M p ,  3 , 5  
CP, 2 , 6   

((- P - P) - P) 
MT,  1 , 7   

8.  P 
9. 
CP,  1 , 8  
As an application, let's prove the theorem, "(((P  - Q) - R) - ((P  - R) - R))."  This 
theorem isn't at all obvious intuitively, but  if you work out the truth table you'll see that it's 
valid. We  start out with our basic strategy for proving conditionals, assuming the antecedents 
and trying to derive the consequents: 

1 
2 

1,2 
1 

1.  ( ( P - Q ) - R )  
2.  ( P - R )  
n+ l .  ((P - R) - R) 
n.  R 
n+2. ((0'- Q) - R) - ((P - R) - R))) 
CP, 2, n 
CP,  1, n+ l  
"-R" and try to derive "R."  Then we can discharge the assumption to derive "(- R - R),"  from 
Now we're stuck, but we have a new strategy to apply in cases where we're stuck. We assume 
which we can derive "R" by the law of Clavius. 

1 
2 
3 

1.  ( ( P - Q ) - R )  
2.  ( P - R )  
- R  
3. 

1,2,3 n-3.  R 
1,2 
n - 2 . ( -R -R )  
n - I . ( ( - R - R ) - R )  
n+ l .  ((P  - R) - R) 
n.  R 
n+2. (((P - Q) - R) - ((P - R) - R))) 

1,2 
1 

CP, 3, n-3 
TH7 
M P ,  n-2, n-1 
CP, 2, n 
CP,  1, n+ l  

Working from the top down, we want to derive "- P"  from lines 2 and 3. The rule of inference 

SC Derivations, p.  8 

is sometimes referred to as modus  tollens, and it's a perfectly good rule, but  it's not one of the 
ent and consequent are both negated. No problem. We  can convert line 2 to "(- - P - - - R)"  by 
rules of our formal system. Our system only allows modus  tollens in cases in which the anteced- 
applying TH1 and TH5. 

1.  ( ( P - Q ) - R )  
2.  ( P - R )  
- R  
3. 
4. 
- - P  
5.  ( 7 - P - P )  
6.  P 
7.  R 
8.  ( R - - - R )  
9. 
- - R  
10.  ( - - P - - - R )  
11.  - P  

PI 
PI 
PI 
PI 
TH1 
M P ,  495 
M P ,  2 , 6  
TH5 
M P ,  7 , 8  
CP, 4 , 9  
MT, 3 ,10  

1,2,3 n-3.  R 
n - 2 . ( - R - R )  
1,2 
CP, 3, n-3 
TH7 
n - I . ( ( - R - R ) - R )  
n+ l .  ((P  - R) - R) 
M P ,  n-2, n-1 
n.  R 
1,2 
n+2. (((P - Q) - R) - ((P - R) - R))) 
1 
CP, 2, n 
CP,  1, n+ l   

An application of the law of Duns Scotus, which permits us to infer "(P  - Q)"  from "-P," 

enables us to complete the proof: 

1.  ( ( P - Q ) - R )  
2.  ( P - R )  
- R  
3. 
4. 
- - P  
5.  ( - - P - P )  
6.  P 
7.  R 
8.  ( R - 7 - R )  
9. 
- - R  
10.  ( - - P - - - R )  
12.  (- P - (P - Q)) 
11.  - P  
13.  ( P -   Q) 

PI 
PI 
PI 
PI 
TH1 
M P ,  4,5 
M P ,  2 , 6  
TH5 
M P ,  7 , 8  
CP, 4 , 9  
MT, 3 ,10  
TH6 
M P ,  11 ,12  

SC Derivations, p.  9 

1,2 
1 

1,2,3 14.  R 
16.  ((- R - R) - R) 
1,2 
15.  ( - R - R )  
17.  R 
18.  ( ( P - R ) - R )  
19.  ((0'  + Q) + R) + ((P + R) + R))) 
Our proofs usually look like this. We work from the two ends toward the middle, hoping 
- Q) - ((-P  - Q) - Q))":  Since we're proving conditionals, the first thing we do is to assume the 
eventually to connect the two parts. Here's another example, the proof from the empty set of "((I'
antecedents and try to derive the consequents: 

M P ,  1 ,13  
CP, 3,  14 
TH7 
M P ,  15 ,16  
CP, 2,  17 
CP,  1, 18 

1,2 
1 

n+ l .  ((-P  - Q) - Q) 
n.  Q 
n+2. ((I'- Q) - ((-I'  - Q) - Q)) 
Now we work on a reductio strategy, assuming "-Q  and trying to derive " Q :  

CP, 2, n 
c p ,  1, n+ l  

1,2 
1 

1,2,3 n-3.  Q 
n - 2 . ( -Q -Q )  
1,2 
n-1. ( ( - Q - Q ) - Q )  
n+ l .  ((-P  - Q) - Q) 
n.  Q 
n+2. ((I'- Q) - ((-P  - Q) - Q)) 
We want to use lines 2 and 3 to derive "P."  Basically, we use MT, but there's an added step of 
double negation introduction: 

CP, 3, n-2 
T H ~  
M P ,  n-2, n-1 
CP, 2, n 
CP,  1, n+ l  

PI 
PI 
PI 
PI 
M P ,  294 
TH5 
M P ,  5 , 6  
CP, 4,7 
MT, 3 , 8  

SC Derivations, p.  10 

1,2 	

1,2 	
1 

n - 2 . ( -Q -Q )  
n-1. ( ( - Q - Q I - Q )  
n+ l .  ((-P  - Q) - Q) 
n.  Q 
n+2. ((P  - Q)  - ((-P  - Q)  - Q)) 
The two ends have finally met, since we can use  1 and 9 to derive n-3 by MP: 

CP, 3, n-2 
TH7 
M P ,  n-2, n-1 
CP, 2, n 
CP, I, n+ l  

PI 
PI 
PI 
PI 
m,2 , 4  
TH 
M P ,  5 6  
CP, 4 ,7  
MT, 3 , 8  
M P ,  1 , 9  
CP, 3, n-2 
TH7  

M P ,  11,12 
CP, 2 ,13  
CP,  1, 14 

It is now time to introduce the rules for the other connectives. 

Rule for Defmition of Connectives P C ) .  You may write an instance of 

((cpV6) - (-cp  - 6 ) )   

any of the following six schemata with the empty premiss set: 

((cp A 6 )  - - (cp   - - 6 ) )   

((-cp- 6)-(cpV6))  

(-(cp  - - 6 )  - (cp  A 6 ) )  
((cp  - 6 )  - ((cp  - $1  A ( 6  - cp))) 
(((cp - 6 )  A  ( 6  - cp))  - (cp  - 6 ) )  

Notice that any substitution instance of a sentence we are entitled to write by rule DC is again a 
sentence are allowed to write by rule DC. It follows that it's legitimate to employ TH with 
theorems whose use employed TH. 
Here are some basic laws for "V":  First, "(P  - (P V Q))": 

SC Derivations, p.  11 

I@,  3 , 4  
CP,  1 , 4  

T H l O  6.  (P  - (P V  Q)) 
1 
5.  ( PVQ )  
Next, "(Q  - (P V  Q))": 
2.  (-P  - Q) 	
1.  Q 	
PI 
1 
1 
CP,  1  
DC 
3.  ( ( - P - Q ) - ( P V Q ) )  
~ 5 .  1(Q -1(PVQ ) )  
1 
4.  ( PVQ )  
I@,  2 , 3  
CP,  1 , 4  
~
Finally, the principle of disjunctive syllogism, "((P  - R) - ((Q - R) - ((P  V Q) - R)))": 
1 
PI 
1.  ( P - R )   	
PI 
2.  ( Q - R )   	
2 
PI 
3 
3.  ( PVQ )   	
5.  (-P  - Q) 	
DC 
4.  ( ( P V Q ) - ( - P - Q ) )   	
3 
M P ,  324 
PI 
6.  - P  
6 
m,5 , 6  
7.  Q 
3,6 
9.  (-P  - R) 
2,3,6  8.  R  
M P ,  2 , 6  
2,3 
CP, 6 , 8  
10.  ( ( P - R ) - ( ( - P - R ) - R ) )   	
TH9 

MP,  1 , lO   

MP, 9 ,11   

CP, 3,  12 

CP, 2,  13 

CP,  1, 14 

Now let's prove some laws for "A":  First, "((P  A  Q) - P)": 
PI 
l . ( P A Q )  
DC 
2 . ( ( PAQ ) - - ( P - -Q ) )  
3 . - ( P - -Q )  
I@,  192 
(P  - -Q))   	
4 . - P  
PI 
6. (P - - Q) 	
5. ( - P -
TH6 
I@,  495 
8. - -(P  - - Q) 	
7. ((P- -Q )   - - - ( P -  
-Q)) 
TH5 
(P - - Q)) 
I@,  6 7  
9 . ( - P - - -
CP, 4 , 8  
1 
10. P  
MT, 3 , 9  
T H 1 3  l l . ( ( PAQ ) - P )  
CP,  1 , lO  
Next, "((P  A  Q) - Q)": 

1 
4 

1 

4 

4 

SC Derivations, p.  12 

DC 
M p ,  132 
PI 
CP, 4  
TH5 

M P ,  5 , 6  
CP, 4 , 7  
MT, 3 , 8  
CP,  1 , 9  
Finally, the conjunction introduction principle, "(P  - (Q - (P A  Q)))": 
PI 
1. P  
1 	
2. Q 
2 	
PI 
3 . - - ( P - -Q )  
PI 
3 	
5. (P - -Q )  
TH1 
4 . ( - - ( P - -Q ) - ( P - -Q ) )  
I@, 
3 	
394 
7. ( -Q   - (Q - - ( P 4 -Q ) ) )  
I@, 
6 . - Q  
1 , 5  
1,3 	
8. (Q - -(P  - - Q)) 
TH6
1,2,3 9. -(F'  - - Q) 
M P ,  6 7  
1,3 
M P ,  2 , 8  
CP, 3 , 9  
lo . ( - - (P - -Q ) -* - -Q ) )  
1,2 
TH7 
l l . ( ( - - ( P - -Q ) - - ( P - -Q ) ) - - ( P - -Q ) )  
M P ,  1 0 , l l  
12 .-(P--Q)  
DC 
13.(-@'--Q)-PAQ)) 
M P ,  12,13 
1 4 . v A Q )  
1,2 
1 
15 . (Q -   (PAQ ) )  
CP, 2 ,14  
THl5 1 6 . P - ( Q - ( P A Q ) )  
CP,  1 ,15  

1,2 

Now that we've proved these three theorems, they're practically the only facts about "A"  that 
we'll ever need. Thus if you're asked to prove something of the form (cp  A  $), you'll do it by 
have to go back an make use of the equivalence of (cp  A $) with -(cp  - - $). 
fust proving cp  and then $, before using the theorem to put the two together. We'll hardly  ever 
To prove a biconditional, prove the two directions separately. This works, because "((P  -
Q) - ((Q  - P) - (P  - Q)))"  is an SC theorem: 

PI 
PI 
TH15 
M P ,  1 , 3  
M P ,  2 , 4  
DC 
m,5 , 6  
CP, 2 , 7  
CP,  1 , 8  

SC Derivations, p.  13 

We also have "((P  - Q) - (P - Q))"  and "((P  - Q) - (Q - P))": 
1. (P - Q) 
2. ((P - Q) - (0'  - Q) A  (Q - P))) 
PI 
1 	
DC 
MP, 1 , 2  
3 . ( ( P - Q ) A ( Q - P ) )  
1 	
T H I ~  
( P -Q ) )  
4 . ( ( ( P - Q ) A ( Q - P ) ) -
TH17  6 .  ((P - Q) - (P - Q)) 
m,394 
5. ( P -   Q) 
1 
CP,  1 , 5  
1. (P - Q) 
PI 
1 	
DC 
2 . ( ( P - Q ) - ( ( P - Q ) A ( Q - P ) ) )  
4. ((0' 	 - Q) A  (Q - PI) - (Q - PI) 
m,1 , 2  
3 . V - Q ) A ( Q - P I )  
1 
TH14 
TI318  6 .  ((P - Q) - (Q - PI) 

m,394 
5. (Q - P I   

1 
CP,  1 , 5  
To practice proving biconditionals, let's prove the contraposition principle, "((P  - Q) -
(- Q - - P)),"  as an SC theorem. The principle will be h e l p l l ,  since it let's us turn a conditional 
around to a more convenient form. First, the left-to right direction: 

PI 
PI 
PI 
TH1 
m,334 
m,1 , 5  
TH5 
m,6 , 7  
CP, 3 , 8  
MT, 2 , 9  
CP, 2,  10
CP,  1, 11 

PI 
PI 
MT,  1 , 2  
CP, 2 , 3  
CP,  1 , 4  

- PI) 	

Now, right-to-left: 

1 	
I . ( - Q - - P )  
2.  P 
2 
4. ( p  - Q) 
3.  Q 
1,2 
1 
TH20  5 . ( ( - Q - - P ) - ( P - Q ) )  

Finally, we put the parts together: 

SC Derivations, p.  14 

The left-to-right direction is substantially more complicated than its converse because the 
particular form in which MT is written requires us to perform double negation introducution and 
elimination. The form of MT isn't entirely arbitrary. i f  we replaced MT b y  an the following 
alternative rule, which is valid and no less natural, we would no longer be able to derive TH1: 
If you have derived - $ with premiss set I?  and (cp  - $) with premiss set 
A, you may write - cp with premiss set I?  u A. 
A 
As a more complicated example, let's prove one of de Morgan's laws, namely, "(-(I'
Q)  -(-PV-Q))" :  

1 
2 

1 

2 	

2 	

2 
1,2 
1  

l . - ( PAQ )  
2 . 7 - P  
3 . ( - - P - P )  
5. (P - (Q - (P A Q))) 	
4.  P  
6. (Q - (P A  Q)) 
8. (-(P 	 A  Q) - -
7 . ( ( Q -   ( PAQ ) ) - ( - ( PAQ ) - -Q ) )  
Q) 
9 . - Q  
l o . ( - - P - -
Q) 
1 1 . ( ( - - P - -Q ) - ( - PV -Q ) )  
13. (-(PAQ)  - ( -PV -Q ) )   	
12 . ( -PV -Q )  
14. ((P A  Q) - P) 	
15. (((p A  Q) - PI - (- p  - -@'  A Q))) 	
16. (-P   - -(P A  Q)) 	
17. ( ( PAQ )  - Q) 	
18. (((PA Q) - Q) - (- Q - -@'A  Q))) 
20. ((- P - -0'  A Q)) - ((- Q - -(P  A Q)) -
1 9 . ( - Q - - P A Q ) )  
((- P V - Q) - -(P  A  Q)))) 
21. (- Q - -(P  A Q))-((- P V - Q) - -(P  A  Q))) 	
TH12 
M P ,  16,20 
M P ,  19,21 
22. ( ( - PV -Q ) -
-(PAQ))   	
23 .N-(PAQI-
( ( ( - P V - Q ) - - P A Q ) )   

( - P V 7 Q ) ) -
24. ((7 P V - Q) - -(I'  A Q))-(-(P  A Q) - (- P V - Q)))  MP,  13,23 
~  ~ 
- ( - ( PAQ I -
( -PV7Q ) ) ) )  
MP, 22,24 
TH22  25 . ( - (PAQ ) - ( -PV -Q ) )  

PI 
PI 
TH1 
M P ,  293 
TH15 
M P ,  4 , 5  
TH19 
M P ,  6 7  
M P ,  1 , 8  
CP, 2 , 9  
DC 
M P ,  1 0 , l l  
CP,  1, 12 
TH13 
TH19 
M P ,  14 ,15  
TH14 
TH19 
M P ,  17 ,18  

1 

6 


We've been looking exclusively at argument with the empty premiss set, but we can 
apply the methods with arbitrary arguments. One reason for focusing on the empty-premiss-set 
case is that that way we are able to bulk up the collection of SC theorems available for the 

application of TH.Now I'd like to look at a case where we start with a English argument, 
translate it into SC, then prove the English argument valid by deriving the translated conclusion 
kom the translated premisses. Here's the English argument: 

SC Derivations, p.  15 

Either Preston or Quincy is a member of the Logic Club. If either Quncy  
or Rudolf is a member, Stuart is not. Unless Stuart is a member, Trumbull 
is a member and Rudolf is not. But Preston is not a member. Conse- 
quently, Quincy and Trumbull are both members. 

Now the translation: 
P v Q) 

( (QVR )  - - S )   

( -S   - (TA -R ) )
- P 
... (Q A TI 

Finally, the derivation: 
2. ((Q V R) - - S) 	
l . ( P V Q )   	
1 
3. (-S   - (TA -   R)) 
2 
3 
4 . - P  
4 
5. ( - P -   Q) 	
1 
7. (Q - (QVR ) )  
6 . Q  
1,4 	
1,2,4 9. - S 
1,4 
8 . (QV R )  
1,2,3,4 10. (T A - R) 
11. ( (TA -R )   - T) 	
13. (Q - (T - (Q A TI) 
1,2,3,4 12. T 	
1,4 
1 4 . (T - (QAT ) )  
1,2,3,4 15. (Q A  T) 

PI 
PI 
PI  
PI 
PI 
M P ,  435 
TH
M P ,  6 , 7  
M P ,  2 , s  
M P ,  399 
TH13 
M P ,  1 0 , l l   

TH15

M P ,  6 ,13  
M P ,  12,14 

Basic Rules of Deduction 

SC Derivations, p.  16 

PI 	

CP 	

MP   	

MT 	

You may write down any sentence you like if you take the sentence a s  its own premiss 
set. 
If you have derived 6 with premiss set I?,  you may write (4 - 6)with premiss set I'-
{ c p l .  
If you have derived cp with premiss set I'and (cp  - 6) with premiss set A, you may write 
6 with premiss set I? u  A. 
If you have derived 6 with premiss set I? and (- cp  - - 6) with premiss set A, you may 
write cp with premiss set I'u  A. 

DC 	 You may write an instance of any of the following six schemata with the empty premiss 
((cpV'4)  - (-cp-6)) 

set: 
((cp  A 6) - -(cp  - - 6)) 

6)-  (cpV6)) 

( ( - c p -
(-(cp  - - 6) - (cp  A 6)) 
((cp  - 6) - ((cp  - $ ) A   (6 - cp))) 
(((cp  - 6) A  (6 - (PI)  - 6))
- (cp 

Derived Rule 

TH  	

If you have already proved cp  kom the empty set, you may, at any time in any derivation, 
write down any substitution instance of cp  again, with the empty premiss set. 

SC Theorems We Have Proved Thus Far 

SC Derivations, p.  17 

Double negation elimination 

Principle of the syllogism 

Double negation introduction 
Law of Duns Scotus 
Law of Clavius 

A disjunction introduction principle 
A disjunction introduction principle 
Principle of disjunctive syllogism 
A conjunction elimination principle 
A conjunction elimination principle 
Conjunction introduction principle 

Principle of contraposition 
One of de Morgan's laws 

