Sentential Calculus Revisited: Boolean Algebra 
 
Modern logic began with the work of George Boole, who treated logic algebraically. 
Writing “+,” “ ⋅,” and “-” in place of “or,” “and,” and “not,” he developed the sentential calculus 
in direct analogy to the familiar theories of groups, rings, and fields. Now that we have the 
predicate calculus with identity, we can discern the consequences of the axioms Boole wrote 
down, and we’ll find that Boole’s algebraic formalism got it exactly right. Here are the principles 
he discovered: 
Definition.  The language of Boolean algebra is the language whose 
individual constants are “0” and “1,” whose function signs are the unary 
function sign “-” and the binary function signs “+” and “ ⋅,” and whose 
predicates are the binary predicates “=” and “≤
.” 
 
For readability, we write “(x+y)” and (x⋅y)” in place of “+(x,y)” and “ ⋅(x,y).” So the terms of the 
language of Boolean algebra will constitute the smallest class of expressions which contains the 
variables and “0” and “1,” contains -τ whenever it contains τ , and contains (τ+ρ) whenever it 
contains τ and ρ. We have unique readability, as usual. 
 

Definition. A structure is a Boolean algebra just in case it satisfies the 
following axioms: 
 
Associative laws: 
( ∀ x)( ∀ y)( ∀ z)((x+y)+z) = (x+(y+z)) 
( ∀ x)( ∀ y)( ∀ z)((x⋅y) ⋅z) = (x ⋅(y ⋅z)) 
 
Commutative laws: 
( ∀ x)( ∀ y)(x+y) = (y+x) 
( ∀ x)( ∀ y)(x⋅y) = (y ⋅x) 
 
Idempotence: 
( ∀ x)(x+x) = x 
( ∀ x)(x⋅x) = x 
 
Distributive laws: 
( ∀ x)( ∀ y)( ∀ z)(x + (y⋅z)) = ((x+y)⋅(x+z)) 
( ∀ x)( ∀ y)( ∀ z)(x⋅(y+z)) = ((x ⋅y) + (x ⋅z)) 
 
Identity elements: 
( ∀ x)(x+0) = x 
( ∀ x)(x⋅1) = x 
 
Complementation laws: 
( ∀ x)(x+-x) = 1 
( ∀ x)(x⋅-x) = 0 
 

Non-triviality: 
¬0=1 
Definition of “ ≤ ”: 
( ∀ x)( ∀ y)(x ≤
 y ↔
 
Definition. A sentence that’s true in every Boolean algebra is a theorem of 
Boolean algebra. 

 (x+y)=y 

 

Among the theorems of Boolean algebra are the universal closures of the following 
formulas: 
 

Boolean algebra, p. 2 
 

 y=1) 
 y=0) 
 y=0) 
 y=1) 

Alternative definition of “ ≤ ”: 
x ≤
 y ↔
 (x ⋅y) = x 
 
Further principles governing 1 and 0: 
(x + 1) = 1 
(x⋅0) = 0 
((∀ x)(x+y) = y ↔
((∀ x)(x⋅y = y ↔
((∀ x)(x+y) = x ↔
((∀ x)(x⋅y = x ↔
 
Further principles governing “-”: 
-1 = 0 
-0 = 1 
--x = x 
(x = -y ↔
x ≤
 y ↔
 
De Morgan’s laws: 
-(x+y) = (-x⋅-y) 
-(x⋅y) = (-x + -y) 
 
Absorption principles: 
(x + (x ⋅y)) = x 
(x⋅(x+y)) = x 
 

 ((x+y) = 1  ∧
 -y  ≤
 -x 

 (x ⋅y) = 0)) 

 is reflexive: 
x ≤
 x 
 

 is transitive: 
((x  ≤
 z)  →
 y ≤
 y ∧
 

 x ≤

 z) 

≤
≤
 y = 1) 
 y = 0) 
 y ≤
 (x+y)) 
 (x ⋅y)  ≤
 y) 
 (x+y) ≤
 z)  ↔
 z) 
 (x ⋅y)) 
 y)  ↔
 z ≤

 is antisymmetric: 
((x  ≤
 y ∧
 y ≤
 x)  →
 x = y) 
 
Lattice principles: 
x ≤
 1 
0 ≤
 x 
 y ↔
((∀ x)x ≤
((∀ x)y ≤
 x ↔
 (x+y) ∧
(x ≤
 x ∧
((x⋅y)  ≤
 y ≤
 z ∧
((x  ≤
((z ≤
 x ∧
 z ≤
 
Further characterizations of ≤ : 
 y ↔
x ≤
 (-x + y) = 1 
x ≤
 y ↔
 (x  ⋅ -y) = 0 
 ( ∃ z)(y⋅z)=x) 
 y ↔
(x ≤
(x ≤
 y ↔
 ( ∃ z)(∃ w)(x+z) = (y⋅w) 
 
Tests for equality: 
 ((x + -y) = 1  ∧
(x = y  ↔
 (-x + y) = 1)) 
 ((x  ⋅ -y) =0 ∧
(x = y  ↔
 (-x  ⋅ y) = 0)) 
 (x+y) = (x⋅y)) 
(x = y  ↔
 
The simplest example is the two-element Boolean algebra, whose elements are the 
integers 0 and 1. “0” denotes 0, and “1” denotes 1. The sum of two elements of the domain is 
defined to be their maximum, the product is their minimum, and the complement of x is defined 
to be 1 - x. In a table, 
 

Boolean algebra, p. 3 
 

a          b          (a+b)         (a⋅b)         - a          
1          1             1                1           0 
1          0             1                0           0 
0          1             1                0           1 
0          0             0                0           1 
 
Definition. The augmented language of Boolean algebra is the language 
obtained from the language of Boolean algebra by adding infinitely many 
additional constants c0, c1, c2, c3,.... 
 
Definition.  For τ a term of the augmented language of Boolean algebra, 
the dual of τ, τd, is the term obtained from τ by exchanging “0” and “1” 
everywhere and exchanging “+” and “⋅” everywhere. 
 

≤
Boolean algebra, p. 4 
 
Duality Principle. Let τ and ρ be terms of the augmented language of 
Boolean algebra. If the universal closure of τ=ρ is a theorem of Boolean 
algebra, so is the universal closure of τd = ρd.  If the universal closure of 
τ≤ ρ is a theorem of Boolean algebra, so is ρd ≤
 τd. 
 
Proof: Suppose that B is a Boolean algebra and σ is a variable 
assignment for B that fails to satisfy τd = ρd in B. Let the interpretation 
A be defined as follows: 
 

 A
 =  B
 
A(ci) = B(ci), for each i 
A(“1”) = B(“0”) 
A(“0”) = B(“1”) 
x “+”A y = x “⋅ ”B y 
x “ ⋅” A y = x “+”B y 
“-”A x = “-”B x 
A(“≤ ”) = {<y,x>: <x,y> ∈

 “ ≤ ”B 

 
It is easy the verify that, for each term µ and variable assignment δ, 
Denδ,A(µ) = Denδ,B(µd). Consequently, σ fails to satisfy τ=ρ in A. It is 
also easy to verify, by examining the axioms one by one, that A is a 
Boolean algebra. So A is a Boolean algebra in which the universal 
closure of τ=ρ is false. 
 

We prove the second part of the Duality Principle — the part 
about “≤ ” — by deriving it from the first part. Suppose that the 
universal closure of τ ≤
 ρ is a theorem of Boolean algebra. It follows 
by the definition of “ ≤ ” that the universal closure of (τ+ρ) = ρ is a 
theorem of Boolean algebra. Using the first part of the Duality 
Principle, we conclude that the universal closure of (τ+ρ)d = ρd, which 
is the same as (τd ⋅  ρd) = ρd, is a theorem of Boolean algebra. It follows 
from the alternative definition of “≤
,” together with the commutative law 
for “⋅,” that ρ d ≤
 τd is a theorem of Boolean algebra. _X 
 

We now make the connection between Boolean algebra and the 
sentential calculus. Let us fix our attention on some SC language whose 
atomic sentences have been arranged in an infinite list. 
 
Definition. For φ an SC sentence whose only connectives are “ ∨
,” “ ∧
,” 
and “¬,” let us take the algebraic translation of φ, φa, to be the closed 
term of the augmented language of Boolean algebra, obtained as follows: 

Boolean algebra, p. 5 
 
Replace the ith atomic sentence, wherever it occurs, by ci, and replace 
,” and “¬,” wherever they occur, by “+,” “ ⋅,” and “-,” respectively.  
“ ∨
,” “ ∧
Definition. If Γ is a set of SC sentences whose only connectives are “∨
,” 
“ ∧
,” and “¬,” Γa = {γa: a ∈
 Γ}. 
 
Theorem. Let φ and ψ be SC sentences whose only connectives are “∨
“ ∧
,” and “¬.” We have the following: 
(a) φ is a tautology iff φa = 1 is a theorem of Boolean algebra. 
(b) φ is a contradiction iff φa = 0 is a theorem of Boolean algebra. 
(c) φ and ψ are logically equivalent iff φa = ψa is a theorem of Boolean 
     algebra. 
(d) φ implies ψ iff φa ≤
 
Proof: We present the proof in the following wacky order: First, we prove the right-to-left 
direction of (c), then the give the left-to-right direction of (b), and finally we fill in the rest. 
 
(c) ⇐
 Suppose that φ and ψ are not logically equivalent. Define an interpretation A of the 
augmented language of Boolean algebra, as follows: For χ an SC sentence, let [χ] be the set 
of all formulas that are logically equivalent to χ; [χ] is called the logical equivalence class of 
χ. 
 

 ψa is a theorem of Boolean algebra. 

,” 

 A
 = {[χ]: χ an SC formula}. 
A(ci) = the logical equivalence class of the ith atomic sentence. 
1A = the set of tautologies. 
0A = the set of inconsistent sentences. 
For a and b elements of   A
, define a “+”A b to be the unique member c of 
 A
 such that there exist sentences χ and θ with a = [χ], b = [θ], and c = 
[(χ ∨
 θ)].  

 
In order for this definition to make sense, we have to persuade ourselves that, for any a and b in 
 A
, there is indeed one and only one element c of   A
 that meets the condition; but that’s 
easy. 
 

For a and b elements of   A
, define a “⋅ ”A b to be the unique member c of 
 A
 such that there exist sentences χ and θ with a = [χ], b = [θ], and c = 
[(χ ∧
 θ)]. 

For a an element of  A
, define “-”A to be the unique member c of   A
such that there exists a sentence χ with a = [χ] and c = [¬χ]. 

 

 

 

It is routine to verify that A, so defined, is a Boolean algebra. For example, the 
commutative law holds for “+” because, for any sentences χ and θ, (χ ∨
 θ) is logically equivalent 

Boolean algebra, p. 6 
 
 χ). The associative law holds for “ ⋅” because, for any sentences  χ, θ, and η, ((χ ∧
to (θ ∨
is logically equivalent to (χ ∧
 (θ ∧
 η)). And so on. 
 

 θ) ∧

 η) 

It is also straightforward to verify that, for any formula χ whose only connectives are “∨
“ ∧
,” and “¬,” A(χa) = [χ]. Since [φ] ≠
 [ψ], A is a Boolean algebra in which φa = ψa fails. 
(b) ⇒ We define a set ∆ of closed terms to be a-inconsistent (for algebraically inconsistent) 
just in case there exist elements δ1, δ2,..., δn of ∆ such that the sentence (δ1 ⋅( δ2 ⋅...⋅δ n)...) = 0 is a 
theorem of Boolean algebra. a-consistent sets will play a role analogous to the role played by d-
consistent sets in the proof of the Completeness Theorem. We have the following: 
 

,” 

Lemma. For any set of closed terms Ω and closed term τ, if Ω ∪
Ω ∪
 {-τ} are both a-inconsistent, then Ω is a-inconsistent. 
 
Proof: Exactly analogous to the corresponding proof for the sentential calculus. _X 
 

 {τ} and 

If φa = 0 isn’t a theorem of Boolean algebra,  {φa} is a-consistent. Listing the sentences 
whose only connectives are “∨
,” “ ∧
,” and “¬” as ζ0, ζ1, ζ2, ζ3,..., we define: 
 

Γ0 = {φ} 
a ∪
a} is a-consistent, then Γn+1 = Γn ∪
If Γn
 {ζn
Otherwise, Γn+1 = Γn ∪
 {¬ζn}. 

 {ζn}. 

 
It follows from the lemma that Γn+1
 

Γ ∞  = the union of the Γns, 

a is a-consistent if Γn

a is. Consequently, if we define 

a is a-consistent. Moreover, for each sentence ζ, either ζ ∈

 Γ ∞  or ¬ζ ∈

 Γ ∞ .  

 
we see that Γ ∞
 

 

Define a N.T.A. ℑ

 by stipulating that 

(χ) = 1 iff χ ∈

 Γ ∞ , 

 
for χ atomic. We want to see that, for any SC sentence χ whose only connectives are “∨
,” “ ∧
,” 
and “¬,” ℑ
(χ) = 1 iff χ ∈
 Γ ∞ .  Since φ ∈
 Γ ∞ , this will tell us that ℑ
 is a N.T.A. under which φ is 
true, hence that φ isn’t a contradiction. 
 

We proceed by reductio ad absurdum, supposing that the statement we’re trying to prove 
is false, and deriving a contradiction. Let χ be a simplest counterexample to the statement we’re 
trying to prove; that is, χ is a simplest sentence whose only connectives are “ ∨
,” “ ∧
,” and “¬” 
such that it’s not the case that ℑ
(χ) = 1 iff χ ∈
 Γ ∞ .  We want to show that this supposition leads 
us to a contradiction. There are four cases: 
 
Case 1. χ atomic. This is impossible, since ℑ

 Γ ∞  holds by the definition of ℑ

(χ) = 1 iff χ ∈

. 

ℑ
 v). There are two subcases: 

Boolean algebra, p. 7 
 
 
Case 2. χ is a disjunction, say (µ  ∨
 
Subcase 2a. ℑ
(χ) = 1 and χ ∉
 Γ ∞ . So either  ℑ
(µ) = 1 or ℑ
(v) = 1. Since µ and v are both simpler 
than χ, it follows that either µ  ∈
 Γ ∞  or v  ∈
a. Since (µ ∨
 Γ ∞ , and so either µa or va is in Γ ∞
 v) isn’t 
in Γ ∞ , ¬(µ  ∨
 v) is in Γ ∞ , and so (¬(µ  ∨
 v))a = -(µa + va) is in Γ ∞ . But this is impossible. Since  
µa ⋅-(µ a + va)) = 0 and va ⋅-(µ a + va)) = 0 are both theorems of Boolean algebra, no a-consistent set 
can contain both µa and -(µa + va), and no a-consistent set can contain both va and -(µa + va). 
 
Subcase 2b. ℑ
 1 and χ ∈
(χ) ≠
(µ) nor ℑ
.. So neither  ℑ
 Γ ∞
(v) is equal to 1. So, since µ and v are 
both simpler than χ, neither µ nor v is in Γ ∞ . So both ¬µ and ¬v are in Γ ∞ . But this means that 
(¬µ)a = -(µa) and -(va) are both in Γ ∞
a. But this is impossible: No a-consistent set can contain 
both -(µa), -(va), and χa = (µa + va), because (-(µa) ⋅(-(v a) ⋅(µ a + va))) = 0 is a theorem of Boolean 
algebra. 
 
Case 3. χ is a conjunction. Similar. 
 
Case 4. χ is a negation. Similar. 
 
(a)⇒ If φ is a tautology, then ¬φ is a contradiction. By the left-to-right direction of (b), (¬φ)a = 0 
is a theorem of Boolean algebra. Since (¬φ)a = -(φa), φa = 1 is a theorem of Boolean algebra. 
 
(a) ⇐
 Take an atomic sentence η. If φa = 1 is a theorem of Boolean algebra, φa = (η ∨
 ¬η)a is a 
theorem of Boolean algebra. So, by the right-to-left direction of (c), φ is logically equivalent to  
(η ∨
 ¬η). Hence, φ is tautological. 
 
(b) ⇐
 If φa = 0 is a theorem of Boolean algebra, (¬φ)a = 1 is a theorem of Boolean algebra. So 
by the right-to-left direction of (a), ¬φ is a tautology. So φ is a contradiction. 
 
 ¬ψ) and (¬φ ∨
(c) ⇒ If φ and ψ are logically equivalent, then (φ ∨
 ψ) are both tautologies. It 
follows by the left-to-right direction of (1) that (φ ∨
 ¬ψ)a = 1 and (¬φ ∨
 ψ) = 1 are both theorems 
of Boolean algebra. In other words, (φa + -ψa) = 1 and (-φa + ψa) = 1 are both theorems of 
Boolean algebra. It follows by one of our “tests for equality” that φa = ψa is a theorem of 
Boolean algebra. 
 
(d) 

φ implies ψ 
iff (¬φ ∨
 ψ) is a tautology 
iff (¬φ ∨
 ψ)a is a theorem of Boolean algebra [by (1)] 
iff (-φa + ψa) = 1 is a theorem of Boolean algebra  
iff φa ≤
 ψa is a theorem of Boolean algebra [by one of our “further characterizations  
of ≤ ”] _X 
 

Boolean algebra, p. 8 
 

Corollary. There is an algorithm for determining whether the universal 
closure of an equation τ = ρ of the augmented language is a theorem of 
Boolean algebra. 
 
Proof: We can simplify the proof by making use of the following general fact, which follows 
immediately from the observation that Universal Generalization is a valid rule of proof: 
 

Fact. For Γ a set of sentences and χ a formula, let χc be a sentence 
obtained from χ by replacing all its free variables by new constants — that 
is, constants that do not appear either in χ or the members of Γ — in such 
a way that different occurrences of the same variable are replaced by the 
same constant and occurrences of different variables are replaced by 
different constants. Then the universal closure of χ is a logical 
consequence of Γ if and only if χc is a logical consequence of Γ. 
 
Because of the fact, we can restrict our attention to the case in which τ and ρ are closed. 
We can find sentences φ and ψ such that φa = τ and ψa = ρ are both theorems of Boolean algebra 
by performing the following operations: First, replace each occurrence of ci by the ith atomic 
sentence. Second, replace each occurrence of “1” by some tautology and each occurrence of “0” 
by some contradiction. Finally, replace each occurrence of “+,” “⋅,” and “-” by “ ∨
,” “ ∧
,” and 
“¬,” respectively. 
 

By (c), to test whether τ = ρ is a theorem of Boolean algebra, it will suffice to determine 
whether φ and ψ are logically equivalent, which we can do either by truth tables or by the 
search-for-counterexample method. _X 
 

Sentential logic is one of the places where Boolean algebra is useful, but it’s not the only 
place. Another application is to the theory of sets. In order to exhibit the connection between 
sentential logic, Boolean algebra, and set theory, we make the following: 
 

Definition. A power set interpretation of the augmented language of 
Boolean algebra is an interpretation A that meets the following 
conditions: 
For some nonempty set S,  A
 is the set of all subsets of S. (  A
what set theorists call the power set of S.) 
“1”A = S. 
“0”A = ∅
, the empty set. 
For any subsets A and B of S, A “+”A B = A∪ B, which is, by definition, 
{x: x∈ A or x∈ B}. 
A “⋅ ”A B = A∩ B, which is, by definition, {x: x∈ A and x∈ B}. 
“-”A A = S ~ A, which is, by definition, {x: x ∈
 S and x∉ A}. 
 

 is 

Boolean algebra, p. 9 
 
Notice the correlation between the set theoretic operations and the logical operations of 
sentential calculus: For any subsets A and B of S and any element c of S, we have: 
 

c is an element of A∪ B iff c is an element of A or c is an element of B. 
c is an element of A∪ B iff c is an element of A and c is an element of B. 
c is an element of  -A iff c is not an element of A. 
This is the connection we wish to exploit. 
 

Theorem. For any terms τ and ρ of the augmented language, the 
universal closure of τ=ρ is a theorem of Boolean algebra if and only if 
it’s true in every power set interpretation of the language. 
 
Proof: The left-to-right direction is just a matter of checking that every power set 
interpretation is a Boolean algebra. Nothing to it. 
 

For the right-to-left direction, we begin by noting, just as in the proof of the 
last corollary, that we may restrict our attention to the case in which τ and ρ are 
closed. Assuming that τ=ρ is not a theorem of Boolean algebra, find SC sentences φ 
and ψ such that φa = τ and ψa = ρ are theorems of Boolean algebra. Since every 
theorem of Boolean algebra is true in every power set interpretation, in order to 
find a power set interpretation in which τ=ρ is false, it will suffice to find a power set 
interpretation under which φa = ψa is false. 
 

Let A be a power set interpretation, defined as follows: 

 

 

 A
 = the power set of the set of all N.T.A.s. 
“1”A = the set of all N.T.A.s. 
“0”A = the empty set. 
ciA = the set of all N.T.A.s under which the ith atomic sentence is true. 

,” 

,” “∧

We want to see that, for any sentence χ whose only connectives are “ ∨
and “¬,” χaA = the set of N.T.A.s under which χ is true. Let Σ be the set of all 
sentences χ, whose only connectives are “∨
,” “∧
,” and “¬,” such that χaA = the set of 
N.T.A.s under which χ is true. We need to see that Σ contains the atomic sentences 
and that it contains (χ ∨
 θ), (χ ∧
 θ), and ¬χ, whenever it contains χ and θ. 
 
Σ contains all atomic sentences.  If χ is the ith atomic sentence, χaA = ciA = the set of 
N.T.A.s under which χ is true. 
 
 θ)aA = (χa + θa)A = χaA ∪
Σ is closed under “ ∨
.” Assume that χ and θ are in Σ. (χ ∨
= {N.T.A.s under which χ is true}  ∪
 {N.T.A.s under which θ is true} = {N.T.A.s 
under which either χ or θ is true} = {N.T.A.s under which (χ ∨ θ) is true}. 
 

 θaA 

Boolean algebra, p. 10 
 
Σ is closed under “∧ ” and “¬.” Similar. 
 

Since φ and ψ are not logically equivalent, {N.T.A.s under which φ is true} is 
not equal to {N.T.A.s under which ψ is true}. Hence φaA ≠
 ψaA, so A is a power set 
interpretation in which φa = ψa is false, and so a power set interpretation in which 
τ=ρ is false. _X 

