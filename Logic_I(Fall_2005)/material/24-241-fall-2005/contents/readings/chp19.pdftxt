Derivations in the Predicate Calculus

The rules of proof for the full predicate calculus are the
same as those for the monadic predicate calculus, with only the
teeniest changes to accommodate the extra variables:

PI

TC

CP

US

UG

QE

EG

ES

At any stage of a derivation, you may write down a sentence
φ with any set that contains φ as its premise set.

If you have written down sentences ψ1, ψ2,..., ψn in a deri-
vation, and φ is a tautological consequence of
{ψ1,ψ2,...,ψn}, then you may write down sentence ψ, taking
the premise set to be the union of the premise sets of the
ψis. In particular, if φ is a tautology, we can write φ with
the empty premise set.

If you have derived ψ with premise set Γ ∪
write (φ →
ψ) with premise set Γ.

{φ}, you may

If you've derived (∀ v)φ, you may derive φv/c with the same
premise set, for any variable v and individual constant c.

For any variable v, if you've derived φv/c from Γ and if the
individual constant c doesn't appear in φ or in any of the
sentences in Γ, you may derive (∀ v)φ with premise set Γ.

From ¬(∀ v)¬φ, you may infer (∃ v)φ with the same premise
set, and vice versa, for each variable v.
From (∀ v)¬φ, you may infer ¬(∃ v)φ with the same premise
set, and vice versa, for each variable v.
From ¬(∀ v)φ, you may infer (∃ v)¬φ with the same premise
set, and vice versa, for each variable v.
From (∀ v)φ, you may infer ¬(∃ v)¬φ with the same premise
set, and vice versa, for each variable v.

If you have written φv/c, for any variable v and individual
constant c, you may write (∃ v)φ with the same premise set.

Suppose that you have derived (∃ v)φ with premise set ∆ and
that you have derived ψ with premise set Γ ∪
{φv/c}, for
some individual constant c and variable v. Suppose further
that the constant c does not appear in φ, inψ, or in any
member of Γ. Then you may derive ψ with premise set ∆ ∪

Γ.

Predicate Calculus Derivations, p. 2

Our first two example will be simple changes of variable.
We'll show that "(∀ x)Fx" implies "(∀ y)Fy" and that "(∃ x)Fx"
implies "(∃ y)Fy":

1
1
1

1
2
2
1

1. (∀ x)Fx
2. Fa
3. (∀ y)Fy

1. (∃ x)Fx
2. Fa
3. (∃ y)Fy
4. (∃ y)Fy

PI
US,1
UG,2

PI
PI (for ES)
EG,2
ES,1,2,3

We'll now show that the sentence "((∃ x)(∀ y)Fxy →
(∀ y)(∃ x)Fxy)" ("If there is someone who is a friend of everyone,
then everyone has a friend") is valid:

1
2
2
2
1
1

1. (∃ x)(∀ y)Fxy
2. (∀ y)Fay
3. Fab
4. (∃ x)Fxb
5. (∃ x)Fxb
6. (∀ y)(∃ x)Fxy
7. ((∃ x)(∀ yFxy →

PI
PI (for ES)
US,2

EG,3
ES,1,2,4
UG,5
CP,1,6

(∀ y)(∃ x)Fxy)

Next we formalize the argument:

All cows are animals.
Therefore all heads of cows are heads of animals.

The example is due to Augustus de Morgan,* who used it to illus-
trate the appalling weakness of the traditional Aristotelian

* To those of you of a literary bent, de Morgan will be best
known as the author of these two poems:

Big fleas have little fleas
Upon their backs to bite 'em.
And little fleas have littler still,
And so, ad infinitum.

Big fleas have greater fleas,
Upon their backs to gnaw on.

Predicate Calculus Derivations, p. 3

logic. The inference is simple and obvious, yet to formalize it
lies far beyond the capabilities of the traditional logic. For
the predicate calculus, however, it's easy:

1
2
3
3
3
1
1,3
1,3
1,3
1,2
1
1

1
2
3
3
3
3
3
8
8
8
3,8
3,8

1. (∀ x)(Cx →
PI
Ax)
2. (∃ y)(Cy ∧
PI
Hay)
3. (Cb ∧
PI (for ES)
Hab)
TC,3
4. Cb
TC,3
5. Hab
6. (Cb →
US,1
TC,4,6
7. Ab
8. (Ab ∧
TC,5,7
Hab)
9. (∃ y)(Ay ∧
EG,8
Hay)
10. (∃ y)(Ay ∧
ES,2,3,9
Hay)
(∃ y)(Ay ∧
Hay) →
11. ((∃ y)(Cy ∧
CP,2,10
Hay))
(∃ y)(Ay ∧
Hay) →
12. (∀ x)((∃ y)(Cy ∧
Hay))
UG,11

Ab)

Next we formalize the following argument:

Tereza caught a fish if any of the Brazilians did.
A fish that was under the pier was caught by a Brazil-
ian.
Therefore, Tereza caught a fish.

PI

(∃ x)(Fx ∧
(∃ y)(Fy ∧
Cxy)) →
1. ((∃ x)(Bx ∧
(∃ y)(By ∧
Px) ∧
2. (∃ x)((Fx ∧
Cyx))
Pa) ∧
3. ((Fa ∧
(∃ y)(By ∧
Cya))
4. (Fa ∧
Pa)
5. Fa
6. Pa
7. (∃ y)(By ∧
Cya)
8. (Bb ∧
Cba)
9. Bb
10. Cba
11. (Fa ∧
Cba)
12. (∃ y)(Fy ∧
Cby)

Ctx))
PI
PI (for ES)
TC,3
TC,4
TC,4
TC,3
PI (for ES)
TC,8
TC,8
TC,5,10
EG,11

And great fleas have greater still,
And so on, and so on.

Predicate Calculus Derivations, p. 4

3,8
3,8
3
2

1
2
2
4
1
4
4
1,4
1,4
1,2

(∃ y)(Fy ∧
13. (Bb ∧
Cby))
(∃ y)(Fy ∧
14. (∃ x)(Bx ∧
Cxy))
(∃ y)(Fy ∧
15. (∃ x)(Bx ∧
Cxy))
16. (∃ x)(Bx ∧
(∃ y)(Fy ∧
Cxy))

TC,9,12
EG,13
ES,7,8,14
ES,2,3,15

Now let's symbolize the argument:

Anyone who flies is admired by everyone.
Not everyone admires himself.
So there is someone who doesn't fly.

(∀ y)Ayx)

1. (∀ x)(Fx →
2. ¬(∀ x)Axx
3. (∃ x)¬Axx
4. ¬Aaa
5. (Fa →
(∀ y)Aya)
6. (∃ y)¬Aya
7. ¬(∀ y)Aya
8. ¬Fa
9. (∃ x)¬Fx
10. (∃ x)¬Fx

PI
PI
QE,2
PI (for ES)
US,1
EG,4
QE,6
TC,5,7

EG,8

ES,3,4,9

We now prove that our two translations of "If any dog can
fly, Tarmin can" are logically equivalent:

1
2
2
1,2
1
1

8
9
10
8
8,10
8,9
8

Fx) →

Fx)

1. ((∃ x)(Dx ∧
2. (Da ∧
Fa)
3. (∃ x)(Dx ∧
4. Ft
5. ((Da ∧
Fa) →
6. (∀ x)((Dx ∧
7. (((∃ x)(Dx ∧

Ft)
Fx) →
Fx) →

Fx) →
8. (∀ x)((Dx ∧
9. (∃ x)(Dx ∧
Fx)
10. (Db ∧
Fb)
11. ((Db ∧
Fb) →
12. Ft
13. Ft
14. ((∃ x)(Dx ∧
15. ((∀ x)((Dx ∧

Fx) →
Fx) →

Ft)

Ft)

Ft)
Ft) →

Ft)

(∀ x)((Dx ∧

Fx) →

Ft)
Ft) →

((∃ x)(Dx ∧

Fx) →

PI
PI
EG,2
TC,1,3
CP,2,4
UG,5
Ft))
CP,1,6
PI
PI
PI (for ES)
US,8
TC,10
ES,9,10,12
CP,9,13
Ft))
CP,8,14

Predicate Calculus Derivations, p. 5

16. (((∃ x)(Dx ∧

Fx) →

Ft) ↔

(∀ x)((Dx ∧

Fx) →

Ft))
TC,7,15

Now we'll do the same thing for our two translations of "Any
dog who chases any dog who chases any rabbit will be put in the
pound":

Cbc))

Cbc)

(Rc ∧

Cyz)) ∧

Cxy)) →

(∃ z)(Rz ∧
(∃ y)((Dy ∧
Cbc))) ∧
(Rc ∧
Cab)
(Rc ∧
Cbc))

Px) PI
PI
TC,2
TC,2
TC,3
TC,3
TC,6
TC,6
TC,8
TC,8
US,1
EG,8

1. (∀ x)((Dx ∧
1
2. ((Da ∧
(Db ∧
2
3. (Da ∧
(Db ∧
2
2
4. Cab
2
5. Da
6. (Db ∧
2
2
7. Db
8. (Rc ∧
2
2
9. Rc
2
10. Cbc
(∃ y)((Dy ∧
11. ((Da ∧
1
12. (∃ z)(Rz ∧
2
Cbz)
13. (Db ∧
(∃ z)(Rz ∧
TC,7,12
2
Cbz))
Cbz)) ∧
(∃ z)(Rz ∧
14. ((Db ∧
TC,4,13
2
Cab)
(∃ z)(Rz ∧
15. (∃ y)((Dy ∧
Cyz)) ∧
EG,14
Cay)
2
16. (Da ∧
(∃ y)((Dy ∧
(∃ z)(Rz ∧
Cyz)) ∧
TC,5,15
2
TC,11,16
1,2 17. Pa
Cab) →
Cbc))) ∧
(Rc ∧
18. (((Da ∧
(Db ∧
CP,2,17
Pa)
1
Cab) →
Cbz))) ∧
(Rz ∧
(Db ∧
19. (∀ z)(((Da ∧
UG,18
Pa)
1
Cay) →
Cyz))) ∧
(Rz ∧
20. (∀ y)(∀ z)(((Da ∧
(Dy ∧
Pa)UG,19
1
Cxy) →
21. (∀ x)(∀ y)(∀ z)(((Dx ∧
(Dy ∧
(Rz ∧
Cyz))) ∧
Px)
1
UG,20
(∃ z)(Rz ∧
Cyz)) ∧
Cxy)) →
Px) →
Cxy) →
Cyz))) ∧
(Rz ∧
(Dy ∧

22. ((∀ x)((Dx ∧
(∃ y)((Dy ∧
(∀ x)(∀ y)(∀ z)(((Dx ∧

Cay))

(∃ z)(Rz ∧

Cyz)) ∧

Cay)) →

Pa)

Px))

23
24
24
24
27
27
27
27
27

Cyz))) ∧
(Rz ∧
Cyz)) ∧
Cdy)

23. (∀ x)(∀ y)(∀ z)(((Dx ∧
(Dy ∧
24. ((Dd ∧
(∃ z)(Rz ∧
(∃ y)((Dy ∧
25. Dd
26. (∃ y)((Dy ∧
(∃ z)(Rz ∧
Cyz)) ∧
Cdy)
Cez)) ∧
(∃ z)(Rz ∧
27. ((De ∧
Cde)
28. (De ∧
(∃ z)(Rz ∧
Cez))
29. Cde
30. De
31. (∃ z)(Rz ∧

Cez)

Cxy) →

CP,1,21
Px) PI

PI
TC,24
TC,24
PI (for ES)
TC,27

TC,27
TC,28
TC,28

Predicate Calculus Derivations, p. 6

Cef)

32 (Rf ∧
32
33. Rf
32
34. Cef
32
35. (∀ y)(∀ z)(((Dd ∧
23
36. (∀ z)(((Dd ∧
(De ∧
23
(Rf ∧
(De ∧
37. (((Dd ∧
23
38. (De ∧
(Rf ∧
Cef))
32
39. (Dd ∧
(De ∧
(Rf ∧
24,32
24,27,32 40. ((Dd ∧
(Rf ∧
(De ∧
23,24,27,32 41. Pd
42. Pd
23,24,27
23,24
43. Pd
44. (((Dd ∧
23

(∃ y)((Dy ∧

Cdy) →
Cyz))) ∧
(Rz ∧
(Dy ∧
Cde) →
Cez))) ∧
(Rz ∧
Pd)
Cde) →
Cef))) ∧
Pd)

Cef)))
Cef))) ∧

Cde)

(∃ z)(Rz ∧

Cyz)) ∧

PI (for ES)
TC,32
TC,32
Pd)US,23
US,35
US,36
TC,30,32
TC,25,32
TC,29,39
TC,37,40
ES,31,32,41
ES,26,27,42
Cdy) →
Pd)
CP,24,43
Cyz)) ∧
Cxy) →

23
Px)

Cxy)

Cxy)

45. (∀ x)(((Dx ∧

(∃ y)((Dy ∧

(∃ z)(Rz ∧

UG,44
Cyz))) ∧
(Rz ∧
46. ((∀ x)(∀ y)(∀ z)(((Dx ∧
Cxy) →
(Dy ∧
(∃ z)(Rz ∧
(∃ y)((Dy ∧
Px) →
(∀ x)(((Dx ∧
Cyz)) ∧

Px))
(∃ z)(Rz ∧
47. ((∀ x)((Dx ∧
(∃ y)((Dy ∧
(∀ x)(∀ y)(∀ z)(((Dx ∧
Px) ↔
(Dy ∧

CP,23,45
Cxy)) →
Cyz)) ∧
(Rz ∧
Cyz))) ∧

Px))

TC,22,46

The proof of the Soundness and Completeness Theorems is
virtually unchanged from the MPC. To prove soundness, we verify
that the roles preserve logical consequence by examining the
rules, one by one, the same as before. We prove completeness by
showing that every d-consistent set is consistent. We show this
by demonstrating, just as before, that every d-consistent set is
contained in a Henkin set. Then we show that, given a Henkin set
∆, we can construct a model A in which all and only the members
of ∆ are true. A is obtained as follows:

|A| = {natural numbers 0,1,2,...}
A(ci) = i
A(R) = {<i1,...,in>: Rci1,...,cin ∈
predicate

∆}, for R an n-place

Once we have srong completeness, we can derive the Compact-
ness Theorem and the Löwenheim-Skolem Theorem, just as before.

→
→
