D. E. Troxel 
                                               Rev. May 5, 2002 
 
Setup a maxplus2.ini file in your home directory somehow. 
This probably will happen automatically when you run max2win. 
 
The command is max2win which should be run in the background. 
One may have to run maxplus2 first to get a maxplus2.ini file in 
your home directory.  You may get a pop up menu about fonts. 
If you do then click OK (what else?). 
 
    max2win& 
 
This will take a long time to load.  It should be quicker on the 
utlra 5 servers in the digital lab. 
 
The steps are: 
 
  1.  Compile a top level .vhd file. 
  2.  Run a simulation. 
  3.  Select a device. 
  4.  Rerun the compiler to fit the design. 
 
Step 1 - Compile a top level .vhd file. 
 
     1.1 Select a top level xxx.vhd file. e.g. fulladd.vhd 
         Beware - xxx.vhd must have an entity xxx defined in it. 
         Also, xxx must be a legal VHDL identifier. 
 
         Click on   file->open  or type ctrl+O 
 
         A window pops up. You double click to get the right directory 
         and click to highlight fulladd.vhd and click on ok. 
 
         This pops up a text editor window with the file in it. 
         I always use emacs as my text editor but you can use this 
         one if you wish. 
 
     1.2 Set your project to this top level file. 
 
         Click on file->project->set project to current file 
         or type ctrl+shift+J 
 
     1.3 Compile your file. 
 
         maxplus2 will automatically find dependent files (if they are 

         in the same folder).  This is a plus in that you do not have 
         to deal with them separately.  It is a minus in that it is 
         not a good idea to have multiple architectures for the same 
         entity. 
 
         Click on MAX+plus II->Compiler 
 
         A window pops up. 
         Click on Start. This takes quite a while. It also did the 
         fitting from an earlier device selection.  I have to figure 
         out how to disable the device for doing the initial testing. 
         Likely one has to edit ~/maxplus2.ini 
         When it is done, then a window pops up and says it is done 
         and how many errors it found. 
         Click on OK (what else can you do?). 
 
Step  2 - Run a simulation. 
 
      2.1 Click on MAX+plus II->Simulator 
          A window pops up. 
      2.2 Click on File->New then click on Waveform Editor 
          then click on ok  
          Yet another window pops up. 
      2.3 Click on File->End Time... 
          Enter the end time in the window that pops up. Choose 10us. 
          This later time will eventually show up in he simulator 
          window after you save the file. It may be necessary to close 
          the simulator and reopen it in order for it to show up. 
      2.4 Click on Node->Enter Nodes from SNF... 
          Then click on list (to get nodes). 
          Select desired nodes and move them to the right (selected). 
          Click on OK. 
      2.5 Now to enter some waveforms for the inputs. 
          Right click on a signal name, go to overwrite->clock and let 
          go.  A window pops up. Choose the desired "Multiplied" 
          factor (1, 2, or 4) and click OK. 
          Alternatively, on can click on a region of the signal and 
          set it to 1 or 0.  Left click on value selects the whole 
          signal. 
      2.6 Click on File->Save (or type ctrl+S) and another window pops 
          up for you to specify the file name.  In this case choose 
          fulladd.scf. 
      2.7 Now, finally, you are ready to simulate 
          Click on MAX+plus II -> simulator then, in the pop up 
          window, click on start and another window will pop up when 
          it is done. 

          You can see the results in the Waveform Editor window. 
 
Step 3 - Select a device. 
 
     3.1 Click assign->device to pick a device. 
     3.2 Choose the device family to be FLEX10K. 
     3.3 Choose the device to be EPF10K100GC503-3  (Change this!) 
 
Step 4 - Rerun the compiler to fit the design. 
 
to set pin assignments 
  maxplusII -> floorplan editor 
click on layout->device view 
 
 
       
       
           Programming Altera Devices 
       
                                                   Donald E. Troxel* 
                                                   June 25, 2001 
                                               Rev June 25, 2001 
 
Open your project file, xxx.vhd by clickng on file->open or typing 
CTRL+O. 
 
Set your project to the current file by clicking on file->project->set 
project to current file or type CTRL+SHIFT+J 
 
Assign your device.  Specify the device family as flex10k 
 
1.  Generate the proper programming and configuration files. 
 
2,  Select the Bitblaster as the hardware type. 
 
3.  In order to program your devices, the very first thing you need to 
do is to generate the proper programming and configuration files. 
Programming files are called POF's (programmer object file) in 
MAX+PLUS II and contain information for programming an EEPROM device 
like the EPC2.  Configuration files are called SOF's (SRAM object 
file) in MAX+PLUS II and contains information for configuring a SRAM 
device like the FLEX 10K.  This is what you need to do to generate 
these two files:  
 
4. Make sure your project is set to the current file by pressing 
CTRL+SHIFT+J. 

5. Click on Assign->Device.  This will bring up the Device Selector box. 
Select your device family (FLEX 10K, FLEX 10KE, etc.) and the specific 
device you want.   
6. Click on the "Device Options" button in the Device Selector box.  This 
will bring up the FLEX 10K/ACEX 1K Individual Device Options Box.  In the 
Configuration Device drop-down box, select the EPC2.  Click OK until you 
return to the MAX+PLUS II main window.   
 
7. Compile your design.  When MAX+PLUS II finishes, a .pof and 
.sof will have been created.   
 
8. In order to use the BitBlaster to program your devices, you must first 
select it as the hardware type.  To do this, make sure the MAX+PLUS II 
programmer is the active window.  If you haven't noticed already, MAX+PLUS 
II changes its menus according to which module (compiler, simulator, 
programmer etc.) is active.  Next, click on Options->Hardware Setup.  This 
will open the Hardware Setup Box.  Select "BitBlaster" as the Hardware Type, 
specify your COM port, and then select the baud rate.  You can configure the 
baud rate of the BitBlaster by setting its dip switches.  Refer to page 6 of 
the BitBlaster  
datasheet  for information on setting the switches. 
 
9. The next thing to do is setup your multidevice JTAG chain.  Open your 
MAX+PLUS II programmer and select JTAG->Multidevice JTAG Chain Setup.  Click 
on the "Select Programming File" button and browse to the POF file that was 
generated by the compiler.  When you find it, highlight it and click OK. 
The name of the file and its corresponding device should now appear in the 
"Programming File Name" and "Device Name" box, respectively.  Click on "Add" 
to add the programming file to the chain. 
You should only use one file for programming. 
 
10. After setting up your chain click OK to return to the MAX+PLUS II 
main window.  Make sure that the programmer is set to multi-device mode by 
clicking on the JTAG menu and verifying that "Multi-device JTAG chain" is 
checked.   
 
That should do it.  All you have left to do is hit the "Program" button in 
the MAX+PLUS II programmer.   
------- 
* Adapted from an email from Albert Lin, Altera Corp. June 5, 2001. 
 
 

