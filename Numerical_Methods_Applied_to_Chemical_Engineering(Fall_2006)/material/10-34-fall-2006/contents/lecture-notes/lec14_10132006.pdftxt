10.34, Numerical Methods Applied to Chemical Engineering 
Professor William H. Green 
Lecture #14: Implicit Ordinary Differential Equation (ODE) Solvers. Shooting. 
 

 
Implicit ODE Solvers 
dy/dt = -y 
ytrue = e-t
y(t=0) = 1 
with explicit Euler  G = F(Y(t)) 

for this case, instability if Δt > 1 

(t+Δt))         For Δt = 2, 

 

 

 

 

 

 

 

 

 

 

 

ynew  = 1+2(-ynew) 

3ynew = 1 (cid:206) ynew = 1/3 
e-2=ytrue

ynew  = 1/3
 + 2(-ynew) 
3ynew = 1/3 (cid:206) ynew = 1/9 
e-4=ytrue

with implicit Euler  G = F(Y
t*F(Y
Y
Y
)
Δ
t
t

new

+

old

new
=Δ+
t
 

 

 

 

 

 

1 
 
 

1/3

1/4

 

 

 

 

 

x 

 

 

 

 

 

 

 
x
 
true 
 

           2       4 

 
Figure 1. Comparison of implicit Euler to true value. 
 
Accuracy low, but Implicit Euler does not become numerically unstable. Explicit Euler decays 
too fast. Implicit Euler decays too slow, but it allows one to use larger timesteps. 
Stiff Solvers 
Stiff:  tf – t0 >> Δtmax
 
 
 
 

because of instability 

 

 

because of accuracy 

 
Explicit |λ|maxΔt ≤ 1  for stability 
Stiff solvers: 
ode15s (cid:197) usually better 
 
 
ode23s (cid:197) super stiff 
Non-stiff 
 
ode45 (cid:197) explicit method 
Example: 
CO + ½O2 (cid:198) CO2
 
In the presence of H2, H2O 
OH + CO (cid:198) H + CO2
H + O2 (cid:198) OH + O 
1/λOH ~ 10-9 s  
Δtexplicit ≤ 10-9 s 

 

 

 

 

 

 
 
1/λCO ~ 1 s 

Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to Chemical 
Engineering, Fall 2006. MIT OpenCourseWare (http://ocw.mit.edu), Massachusetts Institute of 
Technology. Downloaded on [DD Month YYYY]. 

9 orders of magnitude difference in time scales 
2 ~ 1/(Δx)2 so a fine mesh makes the problem very 
In diffusion problems λfast/λslow ~ Nmesh
stiff. 

Shooting 

Figure 2.  
                      |-------------------| x 

 

Y(t=0)=

y = height of cannonball 
known
Y
0
guess
Y
0

⎞
⎛
⎟
⎜
⎟
⎜
⎠
⎝
Y(tf) (cid:197) ode15s(…,Yos,…) 

 

 

Yi(tf) = Yspecial  

guess],tol) 

Root-finding (Newton, Broyden)  
g(Yguess) = 0  g = Yi(tf) – Yspecial  
Yi(tf) (cid:197) ode15s(…, Yguess,…) 
guess = bisect(@g, [Ylow
guess,Yhigh
Ybest
guess)|<ftol
|g(Ybest
 
guess – Ytrue
guess| < xtol 
|Ybest
function error = g(Yguess) 
Y0 = […, Yguess] 
 
Yf = ode15s(@F,Yo,tf,tol,options) 
error = Yf(nspecial) - Yspecial 
inside ode’s  events (cid:206) stop integrating when something happens 

 

 

 

10.34, Numerical Methods Applied to Chemical Engineering 
Prof. William Green 
 
 
Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to Chemical 
Engineering, Fall 2006. MIT OpenCourseWare (http://ocw.mit.edu), Massachusetts Institute of 
Technology. Downloaded on [DD Month YYYY]. 

Lecture 14 
Page 2 of 2 

