10.34, Numerical Methods Applied to Chemical Engineering 
Professor William H. Green 
Lecture #19: Boundary Value Problems (BVPs) Lecture 2.  
Finite Differences 
x
xf
xf
(
(
)
df
−Δ+
x
dx
2
Δ

)   Relatively good accuracy, better convergence 

(
xO
(
Δ

Δ−

2)

≡

+

x

)

o

o

x

0

df
dx

≡

x

0

xf
(

o

x
)
−Δ+
x
Δ

xf
(

o

)

(
)xO
Δ

  

+

ONE SIDED upwind differencing: The error leads 

to numerical stability but is a mathematical trick. Adds in error Deff = Dtrue + V
Pelocal, eff < 2. Still wrong, because artificially increased. 
(cid:86)2φ + v·(cid:86)φ + S(φ) = 0 
  
v
2
φφφ
φφ
−
+
−
i
i
i
i
i
1
1
1
−
+
+
x
x
(
)
2
Δ
Δ

(
x
)(
φ

) 0
=

+

+

f

 

xΔx/2 and 

linear   

linear   

linear or nonlinear 

M

φ
+×

f

(
(
φ

)

)

x
1

0

⎛
⎜
⎜
⎜
⎝

f

(
(
φ

x

2

)

)

0

(cid:37)

⎞
⎟
⎟
⎟
⎠

=

0

 

 

 

 

 

f

(
φ
1

)

0

M

+×
φ

⎛
⎞
⎜
⎟
⎜
⎟
⎜
⎟
⎝
⎠
approx. to differential operators 

(
φ
2

(cid:37)

=

0

0

)

f

 

 
 

 

 
 

 

 
 

 

Newton’s Method 
F(φ) = 0 

JΔφ = -F 

(cid:205) Newton update J = M + 

f
∂
φ
∂
φ
1

0

⎛
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎝

f
∂
φ
∂
φ
2

0

(cid:37)

 

⎞
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎠

Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to Chemical 
Engineering, Fall 2006. MIT OpenCourseWare (http://ocw.mit.edu), Massachusetts Institute of 
Technology. Downloaded on [DD Month YYYY]. 

)
)

2

yxv
(
,
z
1
1
yxv
(
,
z
1
(cid:35)
yxv
,
(
N
z
1
xv
y
(
,
z
1

2

)
y
)

 

⎞
⎟
⎟
⎟
⎟
⎟
⎟
⎠

Example: Rectangular Duct With Incompressible Flow 
Rectangular duct with incompressible fluid being pulled by gravity:   
(cid:86)2vz(x,y) = ρg/μ 
No slip at walls: vz(boundaries) = 0 
 

 

2
∂
x
∂

2

+

2
∂
y
∂

2

Δy 

Ny 

y(cid:199) 

 

 

 

 

 

yx
,
(
φ
i
i
n
i
(
−=

)
→
*)1

n
)(
ϕ
N
+

y

j

ϕ
=
     

⎛
⎜
⎜
⎜
⎜
⎜
⎜
⎝

•
↑
•→•←•
↓
•

 

••
••
••
••

 

x (cid:198) 

Nx 

Δx 

4
3
2
1

•
•
•
•

•
•
•
•

 

Ny

+

1

(1,1) 

Figure 1. Rectangular duct with incompressible flow. 
 
NxNy = # points  
xv
y
(
,
z

xv
(
z

yxv
,
(
i
z

+

y

i

1
+

i

1
−

)

j

)

j

,

+

Interior: 

j

yxv
(2)
,
−
z
i
x
(
)
2
Δ

 

j

1
+

yxv
(2)
,
−
z
i
y
(
)
2
Δ

)

+

yxv
(
,
z
i

j

)

j

1
−

 

Rows of M look like this: 

10.34, Numerical Methods Applied to Chemical Engineering 
Prof. William Green 
 
 
Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to Chemical 
Engineering, Fall 2006. MIT OpenCourseWare (http://ocw.mit.edu), Massachusetts Institute of 
Technology. Downloaded on [DD Month YYYY]. 

Lecture 19 
Page 2 of 4 

M

=

0

.....

1
x
Δ

(

2

)

⎛
⎜
⎜
⎝

000

1
y
Δ

(

2

)

−

⎛
⎜⎜
2
⎝

1
x
Δ

(

2

)

+

1
y
Δ

(

2

)

⎞
⎟⎟
⎠

00

1
x
Δ

(

2

)

00

1
y
Δ

(

2

)

00

 

⎞
⎟
⎟
⎠

 
{Mφ = b} 
Mφ = ρg/μ 
Shown in MATLAB 

function makeAforLaplacian(Nx,Ny,Xmax,Ymax) 

Ymax 
(cid:199) 

(cid:198)  Nx 

 
Non-sparse:  A(n, n+1) = 1/(Δy)2
Sparse format:   
mvec(k) = n 
ηvec(k) = n+1 
A vec(k) = 1/(Δy)2

 

 

 

 

 

 

 

MATLAB for Sparse Matrix 
Nx = 20;  Ny = 30; 
Xmax = 40;  Ymax = 10; 
A_sparse = makeA_sparse(Nx,Ny,Xmax,Ymax); 
b = zeros(Nx*Ny,1);  % unknown vector 
b = b+1; 
phi = A_sparse\b; 
check = A_sparse*phi; 
check(400)  ans = 1.0 
bbig = 1e7*b 
phi = A_sparse\bbig; 
check = A_sparse*phi; 
 
ans = 1e7 
 

 
How do know if correct? 
 
V_shaped = reshape(phi, Ny, Nx); 
 
surf(V_shaped) 
Makes a beautiful plot of the solution 

Adding Convection 
Pe = vL/D
Peclet number 
Pelocal = vxΔx/D 

 

 

 

10.34, Numerical Methods Applied to Chemical Engineering 
Prof. William Green 
 
 
Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to Chemical 
Engineering, Fall 2006. MIT OpenCourseWare (http://ocw.mit.edu), Massachusetts Institute of 
Technology. Downloaded on [DD Month YYYY]. 

Lecture 19 
Page 3 of 4 

x

v

S

+

+

D

)(
ϕ

+
ϕ

∂
ϕ
x
∂

(cid:86)(vφ) + D(cid:86)2φ + S(φ) = 0 
v
2
∂
∂
ϕ
x
x
x
2
∂
∂
'
ϕ
⎛
ϕ
⎛
⎞
⎜
v
v
1'
∂
−=⎟⎟
⎜⎜
⎜
x
−
ϕ
'
ϕ
⎝
⎠
x
D
D
∂
⎝
Recall from ODE discussion: 

∂
x
∂

−
ϕ

x

 

 

 

∂ϕ
x∂

 

=

0

⎞
⎟
⎟
⎠

S
D

 
ϕ
∂
t
∂
)'(
ϕ
∂
x
∂

−=
λϕ

t
<Δ

2
 
λ

 

numerical stability of explicit solvers 

−=

v
x
D

'
ϕ
+

stuff

v
x
D

=

λ

x
<Δ

2
λ

x
<Δ⇒

2
v
x
D

 

local <
Achieve Pelocal < 2 by making Δx smaller. This leads to stiffness. Difficulties when implicit 
solving. Use adaptive meshing  with Gear predictor-corrector. 

Pe

2

 

Deff = Dtrue + 

v

x
Δ
x
2

f
∂
x
∂

xD

xf
(

0

=

x
)
−Δ+
x
Δ

xf
(

)

0

+

xO
(
Δ

)

 

Pe local <  
2
Method of lines for flow only in x-direction 

D
2
+∇+
ϕ

.....

 

v

x

∂
ϕ
x
∂
∂
ϕ
x
∂

x

v

+

D

Δ+

zy
zyx
,(2),
),
−
ϕ
y
(
)
2
Δ

yx
,(
2
⎛
⎞
∂
ϕϕ
D
⎜⎜
+⎟⎟
+
x
2
∂
⎝
⎠
PDE (cid:198) ODE {works only if: vy, vz ~ negligible; Pelocal< 2} 
Equations like this for all discrete z and y values in mesh. 
 

yx
,(
ϕ

zy
),

Δ−

.....

+

 

 

 

10.34, Numerical Methods Applied to Chemical Engineering 
Prof. William Green 
 
 
Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to Chemical 
Engineering, Fall 2006. MIT OpenCourseWare (http://ocw.mit.edu), Massachusetts Institute of 
Technology. Downloaded on [DD Month YYYY]. 

Lecture 19 
Page 4 of 4 

