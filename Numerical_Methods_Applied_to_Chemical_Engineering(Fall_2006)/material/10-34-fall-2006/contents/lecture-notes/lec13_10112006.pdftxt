10.34, Numerical Methods Applied to Chemical Engineering 
Professor William H. Green 
Lecture #13: Stiffness. MATLAB® Ordinary Differential Equation (ODE) Solvers.  
From Last Lecture: Numerical Integration 
G: estimated time average slope from t (cid:198) t+∆t 
Y(t0) = Y0 
dY/dt = F(Y)   
 
General Algorithm:  Y(t+∆t) = Y(t) + ∆t*G(Y) 

G = (time avg. slope) + δ 

 

 

 

 

 

 

 

 

 

 

  error 

Rectangle Rule:  Explicit Euler G = F(Y(t))   

EXPLICIT 

Trapezoid Rule:  G = ½(F(Y(t)) + F(Y(t+∆t)) 

IMPLICIT 

 

unknown 
δ ~ O((∆t)m) 
want ∆t (cid:200) 
Requirement for accuracy sets ceiling on ∆t 

 
Figure 1. Linear approximation to a function. 
  
 
MATLAB 
ode45 
Runge-Kutta: G formula where error scales (∆t)5
If ∆t is small, error is small, but takes many steps 

(tradeoff) 

* new t (cid:197) t+∆t 
Adding big numbers and small numbers (cid:198) lose log10(Ntimesteps) sig figs 
 

 

as ∆t decreases. This can be a significant problem. 

If computer has 14 sig figs 
If you want 6 sig figs in Y(tf): Ntimesteps < 108
(tf – t0)/<∆t> < 108  {FLOOR} 
 

 
Figure 2. If ∆tfloor is larger than ∆tmaximum, then a solution cannot be found. 
 
 

Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to Chemical 
Engineering, Fall 2006. MIT OpenCourseWare (http://ocw.mit.edu), Massachusetts Institute of 
Technology. Downloaded on [DD Month YYYY]. 

Adaptive Timestepping 
Use small ∆t when necessary (to keep δ small) 

Use big ∆t everywhere else to save CPU  time and minimize roundoff error. 
δ ~ O((∆t)m) 

Richardson Extrapolation 
Solve ODE using ∆t = 0.1s    

Y(tf; ∆t=0.1) 
Y(tf; ∆t=0.05) 
Solve same ODE using ∆t = 0.05s    
Y(tf; ∆t) = Ytime(tf) + c(∆t)m + …  
(unknown higher order of error) 
Y(tf; ∆t/2) = Ytime(tf) + c(∆t/2)m + … 
if m = 2  Ytrue = 4/3Y(tf; 0.05) – 1/3Y(tf; 0.1) 
c is approximately the same is both equations: 
f
1
6
3

For example: 

t
(
Y Δ
0

3
∂
t
∂

)

 

 

3

x 

x 

x 

Δt 

Δt=0   

Romberg Extrapolation is Richardson Extrapolation Applied to 
Integrals 
 
 
Ycalculate 
 
 
 
 
 
     Ytime 
 
 
 
 
 
 
 
Figure 3. Diagram of Romberg Extrapolation on 
an increasing function. 
 
 
 
 
 

10.34, Numerical Methods Applied to Chemical Engineering 
Prof. William Green 
 
 
Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to Chemical 
Engineering, Fall 2006. MIT OpenCourseWare (http://ocw.mit.edu), Massachusetts Institute of 
Technology. Downloaded on [DD Month YYYY]. 

Lecture 13 
Page 2 of 4 

Numerical Instability 
Example uses Explicit Euler 
dy
dt

1)
=

ty
( 0

−=

y

y

true

e
−=

t

 

 

Y1 = Y0+Δt*F(Y0) 

Y2 = Y1+Δt*F(Y1) 
Δt = 0.5    (.) 
Y1 = Y0+0.5*F(Y0) 
    = 1 + 0.5*-1 = 0.5 
Y2 = 0.5 + 0.5*-0.5 = 0.25 

Δt = 1.0    (0) 
Y1 = 0 
 
Y2 = 0 
Figure 4. Graphs of function’s true and model values. 
 
 

 
Figure 5.  Difference between true and model values. 
    
 
 
 
 

Δt = 2.0    (x) 
Y2 = 1 
Y1 = -1 

 

 

 

 

 

 

 

 

 

 

 

 

Δt = 3.0 
 
Y1 = -2 

Y2 = 4 

 

 

 

     

I Δ+

Jt

 

 

 

 

 

 

 

 

 

    needs to be  

between -1 and 1 for  
)
)0YGJt
(
N

 stability

Δ+

Y

Y

Y

J

0 = …………   
1 = …………   
2 = ………… +  (
I
G
∂
Y
∂

=

 

True slope +δ 

Figure 6. Growth of instability. 

 ≤ +1 

Stability 
-1 ≤ λi of  (
)Jt
I Δ+
10.34, Numerical Methods Applied to Chemical Engineering 
Prof. William Green 
 
 
Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to Chemical 
Engineering, Fall 2006. MIT OpenCourseWare (http://ocw.mit.edu), Massachusetts Institute of 
Technology. Downloaded on [DD Month YYYY]. 

Lecture 13 
Page 3 of 4 

Numerical Stability (For Explicit Methods): 
||I + Δt J || ≤ 1 

* In Beers’ textbook… implicit/explicit averaging 

 
Stiffness 
 
 
 
 
 
 

if (tf – t0) > Max Ntimesteps  (cid:197)  adding big & small 
   max Δt 
  we can 
 tolerate 

(accuracy δ) 

 

(||I + Δt J || ≤ 1) 

 

 

not a huge deal 

 

 

very important 

Y

=

 

⎞
⎟⎟
⎠

major
minor

⎛
⎜⎜
⎝
slow λ (cid:198) major time scales 
{λ} of J  
fast λ (cid:198) reactive intermediates 
 
 
 (tf – t0)  ~ O(1/λslow)   
λfast
(max Δt) ~ O(1/λfast)   (cid:206)      λslow
 

If too stiff, you cannot use explicit methods and must turn to implicit methods such as 
Trapezoid. To keep stable, keep ∆t small. But cannot go too small in Δt: major stays the 
same if ∆t< eps. 

10.34, Numerical Methods Applied to Chemical Engineering 
Prof. William Green 
 
 
Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to Chemical 
Engineering, Fall 2006. MIT OpenCourseWare (http://ocw.mit.edu), Massachusetts Institute of 
Technology. Downloaded on [DD Month YYYY]. 

Lecture 13 
Page 4 of 4 

