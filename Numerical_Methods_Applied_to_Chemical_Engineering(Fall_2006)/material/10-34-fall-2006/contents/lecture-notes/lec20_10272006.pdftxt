10.34, Numerical Methods Applied to Chemical Engineering 
Professor William H. Green 
Lecture #20: Boundary Value Problems Lecture 3. Finite Differences, Method of 
Lines, and Finite Elements.  

Finite Differences 
mesh 
finite
difference
Dˆ
S
A
0
for 
=+⋅⎯⎯⎯ →
⎯=
φ

ˆ
D
S
)(
+
ϕϕ

0

 

 

 

Jin = 

 
iF
∂
φ∂
n

Fi(φ) = (ΣAijφj) + S(φi) = 0 

i = 1, Nmesh*Nscalar fields

 

 

Solve F(φ) = 0  by Newton-type methods 

⎛
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜⎜
⎝

Need Jacobian J: Jin = Ain +δinS’(φi). 

J

=

Iterative, need good initial guess φguess! 
(normally, JΔφ = -F ) 

0

0

(cid:37)

(cid:37)

(cid:37)

(cid:37)(cid:37)
(cid:37)(cid:37)(cid:37)
(cid:37)(cid:37)(cid:37)
(cid:37)(cid:37)(cid:37)
(cid:37)(cid:37)(cid:37)
(cid:37)(cid:37)(cid:37)
(cid:37)(cid:37)(cid:37)
(cid:37)(cid:37)(cid:37)
(cid:37)(cid:37)

(cid:37)

(cid:37)

(cid:37)

0

0

+

(cid:37)
0

⎛
⎜⎜
⎝

0
(cid:37)

⎞
⎟⎟
⎠

 

⎞
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟⎟
⎠

Method of Lines 
e.g. 2D, vy = 0, vx independent of φ: 
v
⎛
∂
x
⎜⎜
ϕ
x
∂
⎝

yxv
,(
x

∂
ϕ
x
∂

D

+

+

yx
,

yx
,

)

2
2
⎞
∂
∂
ϕϕ
+⎟⎟
+
x
y
2
2
∂
∂
⎠

i

i

S

(
yx
,(
ϕ

)

)

=

0

⋅∇

v
(
ϕ

)

=

∂
x
∂

v
(
ϕ

x

)

+

∂
y
∂

v
(
ϕ

y

)

 

replace 

0     if vy = 0 

yx
,(2)
ϕ
−
y
(
)
2
Δ

)

+

yx
,(
ϕ

)

i

1
−

i

 

           convection    diffusion coefficient D 
 
 

 

 

 

yx
,(
ϕ

i

1
+

Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to Chemical 
Engineering, Fall 2006. MIT OpenCourseWare (http://ocw.mit.edu), Massachusetts Institute of 
Technology. Downloaded on [DD Month YYYY]. 

ui(x) = φ(x,yi)     

d
dx

⎛
⎜
−=
⎜
⎜
⎝

)

i

yxv
,(
x
D

w
i

−

1
D

v
∂
x
x
∂

u

i

−

yx
,

i

w
i
u
i
1
+
y
)
Δ

(

−

2

2

u
i
y
Δ

(

2

)

−

u
i
1
−
y
)
Δ

(

2

−

)

i

uS
(
D

 

⎞
⎟
⎟
⎟
⎠

u
1
w
1
u
2
w
2
(cid:35)
u
i
w
i
(cid:35)

u
N
w

x

y

y

⎛
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎝

⎞
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎠

w(x) = ∂φ/∂x|(x,yi)
 
A mess, but we can solve stiff ODEs better than PDEs. Variables: 2Nmesh. Coarse 
discretization easy; finer mesh makes complexity rise. Better for steep front. 
 
Diffusion/conduction dominated – Elliptic PDEs 
•  microfluidics, cells, reaction no convection  
•  no sharp fronts 
 
every φ(xi, yj) depends on all the others  
 

Finite Differences, Method of Lines 

Convection-dominated, wave equations – Hyperbolic PDEs 
• 
• 

information flows in a direction, shockwaves, flames  

sharp fronts (cid:197)-----(cid:198) numerical instabilities, oscillations   

 

Stiff ODEs solve with 

adaptive mesh 

 

 
Finite Element Method (FEM)  (cid:206)  FEMLAB 

Galerkin’s Method 
( )
∑=
x
c
nχ
φ
   want to retain sparsity 
n
local basis functions 
)
(
x
mechanics (must consider electrostatic attraction). 

 
χ
n

x −

n

 points connected only to neighbors. Used in fluid mechanics and quantum 

1D example 

10.34, Numerical Methods Applied to Chemical Engineering 
Prof. William Green 
 
 
Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to Chemical 
Engineering, Fall 2006. MIT OpenCourseWare (http://ocw.mit.edu), Massachusetts Institute of 
Technology. Downloaded on [DD Month YYYY]. 
 

Lecture 20 
Page 2 of 4 

χ
n

=

|

x

−

|

n

x
−
x
Δ
0

⎧
1
⎪
⎨
⎪⎩

x
 xif
<<
1-n
otherwise

x

n

+

1

 

 

Figure 1. Add points close to steep 
gradient. Separate into parts at 
 
 
 
 
 
singularity. 

 

dx

χ
n

∫

 
)(
ϕ
)

1
+

)
0
=
0
=

(
ˆ)(
xDx
S
)(
+
ϕ
f
,
,
(
φφφ
n
n
n
n
1
−
F
)(
0
=
φ

Add lots of xn close to steep gradient 

Singularities but can integrate by parts. 
)ϕχ
(
2
∫
∫
∫
ϕχ
ϕχ
⋅∇−∇⋅∇−=∇
∇
n
n
n
 

0 

 

 

 

n

=

,1

N

mesh

Local integral: 0 except in range xn-1< x < xn+1. 
Nonzero close to mesh point. 
 
 
Method good when there are only short range 
forces. 

This equation is difficult to write. Usually use software that is already written: e. g. MATLAB 
PDE Tool Box or FEMLab 
(cid:37)(cid:37)
0
⎞
⎛
⎟
⎜
(cid:37)(cid:37)(cid:37)
⎟
⎜
⎟
⎜
(cid:37)(cid:37)
0
⎠
⎝

  { easy to solve this Jacobian for finite differences, sparse matrix 

=

J

Discussion 
(cid:86)2φ 

cylindrical:  

 

r

∂
ϕ
⎞
⎟
r
∂
⎠

1
∂
⎛
⎜
r
r
∂
⎝
Nmesh ~ 106
J ~ 106 x 106 = 1012  (computer cannot store this) 

3D 

 

 
Conjugate gradient-type solvers for JΔφ = -F (N steps: still 106) 
MatLAB solver:  GMRes  Works even if matrix is not positive definite 
f(Δφ) = ||JΔφ + F||2  (minimize this within N steps) 

 

Preconditioning 
Text has a number of tricks for good preconditioning (i.e. Jacobi method see textbook) 
Initial guess of φ is important for convergence 

 

10.34, Numerical Methods Applied to Chemical Engineering 
Prof. William Green 
 
 
Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to Chemical 
Engineering, Fall 2006. MIT OpenCourseWare (http://ocw.mit.edu), Massachusetts Institute of 
Technology. Downloaded on [DD Month YYYY]. 
 

Lecture 20 
Page 3 of 4 

=

Finite Volumes 
ϕ
∂
ˆ
S
D
)(
+
ϕϕ
t
∂
Operator splitting Method 
transport
t
t
t/2
⎯ Δ+→
ϕ
⎯⎯⎯ →
new

tyx
,
),.
i
i

(
ϕ
d
dt

 

 

 

 

Instead of mesh points, we use mesh volumes. 

)~,.
tyx
,
i
i

(

 

s
( i
)
ϕϕ =
i

  using Nmesh ODE solver: φ(t0) = φnew

ϕ
new

t
 
chemistry,
Δ
⎯
⎯⎯⎯⎯
→
ϕ
i

t
(

f

)

t
( 
transport,
)2/
Δ
(
⎯⎯⎯⎯⎯
⎯
→
ϕ

tyx
,
,
i
i

t
Δ+

)

  splitting error ~(Δt)2

Δt< Δx/vx to prevent numerical instability 
Model system must have no mixing. Nspecies  compare to NspeciesNmesh for Method of Lines 

10.34, Numerical Methods Applied to Chemical Engineering 
Prof. William Green 
 
 
Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to Chemical 
Engineering, Fall 2006. MIT OpenCourseWare (http://ocw.mit.edu), Massachusetts Institute of 
Technology. Downloaded on [DD Month YYYY]. 
 

Lecture 20 
Page 4 of 4 

