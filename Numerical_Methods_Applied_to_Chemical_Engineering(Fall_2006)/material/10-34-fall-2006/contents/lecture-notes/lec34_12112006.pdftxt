10.34, Numerical Methods Applied to Chemical Engineering 
Professor William H. Green 
Lecture #34: Fourier Transforms and Fast Fourier Transforms (FFT).  
Fourier Analysis / Transforms 
( )
= ∑
xf
m

φ
mm

sin(

x
)(

φ
m

mx

)

=

c

Basis Set Methods 

 

Convolution Integral  

2

∂
x
∂

2

=
φλφ
mm
m

          

   

φ
m

=

cos(

mx

)

 

          

  
φ
m

imx

=

e

≡

hg
*

∞
∫
∞−
)*(ˆ
hgF

g

th
()(
τ

−

d
)
ττ
 

)(ˆ)(ˆ
hFgF

 

=

Correlation (g,h) 

≡

ˆ
F

(
Correlatio

hg
,(n

)

∞
∫
∞−
)

=

tg
(

+

d
h
)()
τττ
 
[
]    (cid:197) complex conjugate 
*)(ˆ)(ˆ
hFgF

Quantum Mechanics 
Ψ(x) = eikx  (cid:197) state of definite momentum px = ħk 
Ψ(φ) = eimΦ  (cid:197) definite angular momentum JΦ = ħm 
 

Spectroscopy 
ν = ΔE/h 
pulsed NMR: time domain measurement of I(ν) 

FTIR: 

I

Figure 1. Diagram showing the path of light in an FTIR. 

l

 

Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to Chemical Engineering, Fall 
2006. MIT OpenCourseWare (http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD 
Month YYYY]. 

These methods are powerful, but require a computer to interpret the results 

Scattering Experiments 
X-ray stattering 

neutron scattering 

light scattering 

Fourier Series 
if f(t) = f(t+2P) 
M
1
∑
2
m
1
=
2
∫
0

t
)(

t
)(

⎛
cos
⎜
⎝

1
P

⎡
⎢
⎣

+

=

=

a

a

a

f

f

P

n

o

m

 
tm
π
P

⎞
+⎟
⎠

b
m

dt

 

⎛
cos
⎜
⎝
⎞
⎟
⎠

tn
π
P

Euler’s Formula 

f

t
)(

=

t
im
π
P

∞
∑
ec
m
m
−∞=

c

n

=

1
P
2

P

∫
−

P

sin

⎛
⎜
⎝

% P = half-period 
tm
π
P
1
P

⎤
⎞
⎟
⎥
⎠
⎦
P
2
∫
0

t
sin)(

b
n

=

f

⎛
⎜
⎝

tn
π
P

⎞
⎟
⎠

dt

 

MO
(

2

effort
 )

t
in
π
P

dt

 

f

et
)(

eiθ = cos(θ) + i sin(θ) 
 

If you do not know P, compute Fourier 

Transform instead of Fourier Series 

∫∞
∞

1
2
π
1
∫∞
2
π
∞

F

)
(
ω

=

f

t
)(

=

 

f

et
)(

−

t
iω

dt

 

 

Plot |F(ω)|2 vs. ω, where F(ω) is power density 

F

ω de
t
i)
(
ωω
 

 

(Inverse Fourier Transform) 

f

=

(
(

F
n

Discrete Fourier Transform 
tk = 0 … T 
f(tk) 
f((k-1)Δt) 
k = 1 … N evenly spaced time points 
N
∑
k
1
=
nF
(
⎛
⎜
⎝
1
N

2)1
π
−
⎞
⎟
T
⎠
N
∑
n
1
=

)
et
)1
Δ−

effort
  )

NO
(

eF
n

Tt
/)1
−

F
n

t
)(

/)1
−

)(1
−

(2
π

(2
π

≈

≈

k

N

f

−

 

n

n

2

i

i

k

 
10.34, Numerical Methods Applied to Chemical Engineering 
Prof. William Green 
 
 
Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to Chemical Engineering, Fall 
2006. MIT OpenCourseWare (http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD 
Month YYYY]. 

Lecture 34 
Page 2 of 3 

 

Fast Fourier Transform (FFT) 
N = 2k

F
n

=

N
∑
even
 

k

f

(
(

k

)
et
)1
Δ−

i

(2
π

n

)(1
−

k

/)1
−

N

+

N
∑
k
odd 

f

(
(

k

)
et
)1
Δ−

i

(2
π

n

)(1
−

k

/)1
−

N

F
n

=

e

i

(2
π

n

/)1
−

N

N
F
n

=

e

i

(2
π

n

/)1
−

f

(
l
2(

N
2/
∑
l
1
=
(
)
N
N
2/
F
n
offset
  

 
Can do this 
iteratively. One 
 
M
nF
can split each 
 
into even and odd 
 
series. 
 

 

MatLAB: fft and ifft 

i

(2
π

n

)(1
−

l

/()1
−

N

)2/

+

N
2/
∑
l
1
=

)1
Δ−

)
et

N

)2/

+

(
F
n

f

(
l
2(

)2
Δ−

)
et

i

(2
π

n

)(1
−

l

/()1
−

N

)2/

 

)N
(
NO
 effort. This is much less than 
log
2
O(N2). That is why this transform is called 
Fast. 

10.34, Numerical Methods Applied to Chemical Engineering 
Prof. William Green 
 
 
Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to Chemical Engineering, Fall 
2006. MIT OpenCourseWare (http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD 
Month YYYY]. 

Lecture 34 
Page 3 of 3 

