 

10.34, Numerical Methods Applied to Chemical Engineering 
Professor William H. Green 
Lecture #5: Introduction to Systems of Nonlinear Equations. 
Ill-Conditioning and Condition Numbers 
 
A·xtrue = btrue   

If measurements perfect 

Know 
exactly 
 
If one can solve exactly, xtrue gives the actual flows in a reactor system, for example. 
 
In reality, there are errors in the measurements 
 
b = (btrue + δb), so: A(xtrue + δx) = (btrue + δb) 
 
Assume A is non-singular (A has an inverse) 
Axtrue + Aδx = btrue + δb  (cid:206)  Aδx = δb 
δx = A-1δb  
 
 
 
 
 
                                                    
||δx|| ≤ ||A-1||·||δb|| 
x
||
||
δ
b
A
||  
  
||
||
||
≤
δ
x
||
true

cond(A) = ||A||·||A-1|| 
b
||)
||
δ
A
cond(
b
||
||

||
          
          
         
||

b||
true
||A||

||
x||
  
  
≤

A
||
||
b
true

true

=

||

||

1
−

⋅

⋅

 

 

 
 

 

x
||
||
δ
x
||
||
true

  
  
cond(
≤

A

b
||
||)
δ
b
||
||

 ≈ 10-2,10-3: # of sig figs in b  

 
cond(A) ≥ 1   Means error is always amplified. 
cond(cA) = cond(A) 
cond(A) = |λ|max/|λ|min 
 
x
A
bA
||
||
δ
δδ
⎛
)
+
⎜
x
b
A
||
||
⎝
   ~10-2  ~10-3 

cond(
  
  
≤

machε

⎞
⎟
⎠

+

  

 

 

 

 

 (cid:198)  cond(A) (cid:198) ∞, if λi = 0  

if cond(A) = 1: is what you expect 
if cond(A) > 104: no accuracy 
 
Need cond(A) to be small to bound 
error 

λ: eigenvalue 

εmach : machine stores 10-15; still have machine 
error even when you measure everything 
perfectly. 

Axsoln = b  
Lose ~log10(cond(A)) significant figures in  x.       just because x gives right solution, does  
not mean you have the true x 

 
What is my tolerance for error? 
Have to know this in order to have useful expectations. 
 
You have to know ahead of time which numbers you care about. If A is singular, model is 
probably wrong. If A is not singular and cond(A) is bad, maybe the scaling is off (different 
units, for example). Good scaling means that all numbers are within 102 of one another. If 
you know the uncertainties in A, scale so the uncertainties are all similar. 
 

Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to Chemical Engineering, Fall 
2006. MIT OpenCourseWare (http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD 
Month YYYY]. 

 

 
 

when you add numbers 
it depends on order of magnitude 

3.1248 
2.4761·10-11   these are negligible 
loss of sig figs 

cond(A) is the function of physical scenario AND how you scale the equations. 
 
This happens because:  x + y = z   
 
 
 
5 sigs   5 sigs 
 
 
3.1248 
2.4761       while 
5 sig figs 
 
 
Try to scale the equations by choosing appropriate units 
 
) ~ 4/ε2
cond(A
 
⎛
⎜⎜
⎝

1(1
)++
εε
⎞
x     
          
⎟⎟
ε
⎠

⎛ 1
⎞
⎜⎜
⎟⎟
ε
⎝
⎠

ε
⎛
⎞
⎜⎜
⎟⎟
⎠
⎝

⎞
=⎟⎟
⎠

x
1
x

1
−

+
1

⎛
⎜⎜
⎝

ε

=

1

 

1

2

Gaussian Elimination on an Augmented Matrix 
⎛
⎞
⎛
⎞
1
11
1
2
2
+
+
ε
ε
1
1
++
++
εε
εε
⎜
⎟
⎜
⎟
⇒⎟
⎜
⎜
⎟
2
2
−1
1
0
ε
1(1
1
1)(
++−
εε
⎝
⎠
⎝
⎠
 

)−
ε

ε

 

 

 

 

1-(1-ε3) ≈ 0 ≈ junk, if computer cannot add 1 
 and ε3 without loss of accuracy 

xsoln ~ 

x2 = junk/ε2 ≈ 0   [incorrect] 
1
⎞
⎛
2
εε
++
⎟⎟
⎜⎜
0
⎠
⎝
If you get warning in MATLAB that cond(A) is too high, you should be aware that your 

off by order of ε in small number 

 

 

 

=

A

Banded matrix occurs when neighboring 
numbers affect each other but have little 
effect on variable far away (i.e. finite 
difference ODE problems) 

solution may be complete nonsense 
000
•
•
•
⎞
⎛
⎟
⎜
00
•
•
•
•
⎟
⎜
⎟
⎜
0
•
•
•
•
•
⎟
⎜
0
•
•
•
•
•
⎜
⎟
⎟
⎜
00
•
•
•
•
⎟
⎜
⎟
⎜
000
•
•
•
⎠
⎝
A banded solver ignores the zeros:  O(Nm2) not O(N3) where “m” is the band width 
 
 
 
 
 
* saves memory and time 
SPARSE 
A = spalloc(M,N,Nnonzero) 
MxN matrix 
 
 
memory space for up to N nonzero entries 

‘help sparfun’ for 
more info on 
sparse matrices 

10.34 Numerical Methods Applied to Chemical Engineering 
Prof. William Green 
 
 
Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to Chemical Engineering, Fall 
2006. MIT OpenCourseWare (http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD 
Month YYYY]. 

Lecture 5 
Page 2 of 3 

 

A(47, 22) 

 

0

0

0

  

x

0

0

⎞
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎠

 
⎛
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎝
 
In Gauss elimination, the spaces with zeros get filled in and the problem becomes difficult 
and requires a lot of bandwidth. 
 

Fill-in Problem – Avoid this 
and maintain symmetrical 
 
structure to use SPARSE 

x
•
x

0

0

0

x

 

Non-Linear Systems 
 
F(x) = 0 
f1(x,y) = 0 
 
f2(x,y) = 0 
 
 
 

 
 

We want (x,y) that  
is true for f1 and f2

f(x) = 0 

1-D problem 

 
 

 
 

 
Figure 1. 2-Dimensional problem. 
 
 
 
 
 
 
  
 
 

 
 

 

   How many solutions? 
   Impossible to tell. 

 

In our problems (i.e. 20-dimensional), graphical interpretation impossible 

10.34 Numerical Methods Applied to Chemical Engineering 
Prof. William Green 
 
 
Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to Chemical Engineering, Fall 
2006. MIT OpenCourseWare (http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD 
Month YYYY]. 

Lecture 5 
Page 3 of 3 

