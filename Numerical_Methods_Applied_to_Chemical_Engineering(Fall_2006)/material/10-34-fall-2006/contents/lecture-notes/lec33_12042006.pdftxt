10.34, Numerical Methods Applied to Chemical Engineering 
Professor William H. Green 
Lecture #33: Operator Splitting. Strang Splitting. 
 

 

 

 

≈

t
τ

rand

Poisson Statistics 

Problem Set 11 
t
(
)
rand
ln−=
τ
−
e
 
Poisson statistics can be found in applications such as radioactive decay, droplets hitting a 
roof, and average time between uncorrelated events. 
 
Gillespie Algorithm – Must run many times 
Continuum view: assume Poisson statistics 
 
)
(rand
t
 
Operator Splitting 
Problem 
Aˆ and  Bˆ have no time derivative. 
(
)
( yB
) 
y
∂
ˆ +
ˆ
(
)
yA
ty
=
→
 
t
∂

 The τfailure is from the continuum equations. 

τ−=
failure

failure

ln

 

0

)(cid:11)(cid:10)(cid:11)(cid:9)(cid:8)
(
ty
t
Δ+
0
1

 

 

t

 

t

0

   

=

0

 

 

 

 

y

0

 

t

0

   

)

)

(
ty

 ∗y

      

∗= y

t
+→
0

(
ty 0
⎛
ty
⎜
⎝

t
Δ
2
t
t
Δ+→ 0
t
Δ
2

Split Operators 
( yA
)  
y
∂
ˆ=
t
∂
) 
( yB
y
∂
ˆ=
t
∂
)  
( yA
y
∂
ˆ=
t
∂
 
Are 1 and 2 the same? No. They are not the same. Operator splitting introduces error. 
Why do we do this? In a reacting flow problem, maybe the two parts have solution methods 
that are tailored for each part. 
Generalization 
(
)
xy
(
)
∂
(
)
ˆ
n
txy
,
Τ=
i
t
∂

⎞
t
Δ+→⎟
0
⎠

)(cid:11)(cid:10)(cid:11)(cid:9)(cid:8)
(
ty
t
Δ+
0
2

)txyS
(
ˆ
(
)
,
i

⎞
∗∗=⎟
y
⎠

 Error O((Δt)2) 

t
Δ
2

        

 ∗∗y

      

⎛
⎜
⎝

t

0

+

+

0

+

 

i

 
 
 

  

Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to Chemical Engineering, Fall 
2006. MIT OpenCourseWare (http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD 
Month YYYY]. 

 

 At 

)2
sp

)2
sp

 . 

mesh N

ˆ=
yS

 

2
mesh N

(
NO

. This leads to a storage problem. 

The first term on the right hand side is spatially non-local, usually not that stiff. The 
stiffness in the first term comes from the use of a fine mesh. The second term on the right 
hand side is spatially local and stiff; it depends on all species. 
 
Most splitting methods give error O(Δt). Strang splitting is better, because it has an error 
O((J(Δt))2). So, we say Strang splitting is time accurate. The error is difficult to bound. 
Usually one runs the solution with a different Δt. 
 
Definition of  Aˆ and  Bˆ : Nmesh×Nspecies number of y’s.  
 
(
NO
Direct coupled: Number of variables scales as 
 
y
∂
t
∂
2
Nspecies at local point. J ~ Nsp
. The number of variables scales as 
Can then solve each mesh point in parallel. 
Steady State Considerations and Time March 
( ) 0=yF
If you only care about steady state, 
, the usual approach is to use a Newton-type 
(
)
guess
∞→t
yJ
yF
−=Δ
, Implicit Euler gives the same result. 

solver. 
 
With a reacting flow, a good guess is difficult. Possible approaches are: 
•  Work on finding a good guess. 
•  Solve a simpler problem; then, change the problem gradually into the one you have. 
•  Time march to steady state (see below); this works for continuous stirred tank 
reactors (CSTRs). 
y
∂
( )yF
(
ty
t
∂
(
)
ty
y
→arg
  At large t, the solution may approach a value that can be used as the 
e
l
initial guess for Newton’s method. 
 
In biology, there are often multiple steady states, so the solution might jump from one state 
to another. 
 
In laminar flow, one can analyze the steady states. 
 
In turbulent flow, one can calculate time average values but not fluctuations. 
 
Finding steady state can be difficult: if the problem has more than 10 variables, use time 
march. 
Explicit Euler 
Recall that Explicit Euler is numerically unstable. 
(
)
( )
( )
(
) t
ty
ty
t
tyF
=Δ+
+
Δ
 

One may have to march for a while. 

∞→t

  

)

=

0

y

0

 

=

 

guess

10.34, Numerical Methods Applied to Chemical Engineering 
Prof. William Green 
 
 
Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to Chemical Engineering, Fall 
2006. MIT OpenCourseWare (http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD 
Month YYYY]. 

Lecture 33 
Page 2 of 3 

(
yF

old

) t
Δ

 

new

old

=

y

+

y
 
Time Marching With Implicit Euler 
Although Implicit Euler is not time accurate, it is unconditionally numerically stable. 
( )
(
(
(
)
)
) t
ty
ty
t
tyF
t
=Δ+
+
ΔΔ+
 
) t
(
new
new
old
y
yF
y
+
Δ
=
 
 
=F
 
mnJ

(
yF

(
yJ

) t
Δ

) t
Δ

=

δ
mn

−

y

guess

2

new

new

old

−

−

y

 

 

=

F
∂
m
new
y
∂
n

guess
2
y
(cid:10)(cid:9)(cid:8)
solves
implicit
Euler
(
F

−=

refined

guess

y

)2

 

y
Δ

 
J mn
 
(
Jt
I
Δ−
 

)
y
Δ

refined

y
Δ−=

guess

2

(
yF

+

guess

2

) t
Δ

 

Right hand side is close to zero: 

Δ

⎛
Ft
⎜
⎝

−

y
Δ
t
Δ

⎞
⎟
⎠

 

 
I
Jt
I
Δ−
≈
For small Δt, 
, which is well-conditioned. 
Time march with implicit Euler instead of Newton’s method. Implicit Euler allows large time 
steps. 

10.34, Numerical Methods Applied to Chemical Engineering 
Prof. William Green 
 
 
Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to Chemical Engineering, Fall 
2006. MIT OpenCourseWare (http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD 
Month YYYY]. 

Lecture 33 
Page 3 of 3 

