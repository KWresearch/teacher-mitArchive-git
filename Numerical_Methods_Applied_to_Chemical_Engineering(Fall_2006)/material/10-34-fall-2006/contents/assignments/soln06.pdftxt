10.34 – Fall 2006 
Homework #6 - Solutions 

Problem 1 – Chemostat ODE 
This  problem  is  similar  to  the  Quiz  1  case,  with  some  changed  parameters  and  slight  structural 
changes to the equations.  The ODEs that should have been solved were: 

dN cells  = 
dt 

k N cells [ Nutrients  ]
1 
]) ( 
( 
]) 
1 [ 
[
1 + c  Nutrients  1 + d  P 

− V

N cells 
flow  V
rxtr 

[ 
] = 
d  Nutr 
1  { flow  ([ 
⎦} 
] 1 10  −6 ) 
([ 
] )
]
[ 
+ c  (Cell Mult ) ⎤

Nutr  − Nutr  − k  N cells  Nutr  − × 
V 
⎣⎡ 2 
2 
VRxtr

dt 
In 

]) ⋅ ( Nutrients ] − 0.01)2  − V 
cells  exp ( −  [
] = 
[
k N
d P  
1  ⎧⎪ 3 
d P  
[ 
⎨
⎪⎩ (1 + c1 [ Nutrients ]) 
flow 
VRxtr 
dt 

[

]P 

⎫⎪ 
⎬
⎪⎭ 

Note  that  the  reactor  volume  must  be  introduced  into  the  equations  written  in  terms  of 
concentration. 

The steady state of the seed reactor was found by integrating the ODE’s to a long time so that the 
steady-state condition will be reached.   The fsolve function should also work  to accomplish  this. 
The  230 L  reactor  part was  solved  by  using  two  subsequent ODE  solves.   The  first was  used  to 
solve the problem from t = 0 Æ t = tnutrient, and the second (with the nutrient solution flowing into 
the reactor) was used to solve from tnutrient Æ tfinal. 
Steady-State Solution to the 150 L CSTR
Number of Cells in Reactor = 7.403565e+007 
Concentration of Cells in Reactor = 4.935710e+005 
Concentration of Nutrients (M) = 0.051391
Concentration of Product (M) = 0.032908 
Steady-State Solution to the 230 L CSTR
Number of Cells in Reactor = 1.273906e+008 
Concentration of Cells in Reactor = 5.538720e+005 
Concentration of Nutrients (M) = 0.033451
Concentration of Product (M) = 0.018212 

**Part A and C: see subsequent  page for plots 
Part B:  Time to within 1% of steady state: 
- you need to take care to calculate the correct time for the case(s) that overshoot the SS value, 
i.e. you do not want the time point to get within 1% of the SS 
Time to 99% of steady state 
(sec and hrs, respectively) 
ode23s 
ode45 
ode23s 
3.59 
3.60 
12935 
2.74 
2.75 
9881 
31810 
8.84 
8.84 

tnut (hr) 
0 
2 
8 

ode45 
12947 
9897 
31813 

Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to 
Chemical Engineering, Fall 2006. MIT OpenCourseWare (http://ocw.mit.edu), 
Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 

Part  D:  (Note  that  the  tolerances  used  in  the  solution  were  an  RelTol  of  1e-10  and  an 
AbsTol of 1e-12.  The wall time and number of steps will change with the tolerance) 

Total wall time of 
solver (sec) 
ode23s 
ode45 
12.7283 
0.3305 
0.2904 
11.9472 
18.2162 
0.4406 

Total number of 
integrator steps 
ode23s 
ode45 
10576 
1938 
1822 
10120 
15560 
2766 

Time per integrator 
step (msec) 
ode23s 
ode45 
1.204 
0.171 
0.159 
1.181 
1.171 
0.159 

tnut (hr) 
0 
2 
8 

You  can  see  in  this  case  (and with  this  tolerance  set)  that  the  explicit  solver  is much  faster  than 
the  stiff  solver  because  it  takes  fewer  steps  and  takes  less  time-per-step.    The  explicit  method 
takes about an order of magnitude longer per time-step.   
The  table  below  shows  the  results  when  the  default  tolerances  (rtol = 1e-3  and 
atol = 1e-6)  are used  to  solve  the problem.   There  are  a  couple of  important  things  to note. 
The stiff solver now  takes much  fewer steps  to solve  the problem, but still  takes  longer  to do so. 
You  will  also  note  that  the  time-per-step  is  very  similar  to  the  above  case,  with  the  implicit 
solver  taking a bit  longer per step.   This  is  likely due  to  initially estimating  the Jacobian or other 
overhead  associated  with  the  solver,  and  since  there  are  fewer  steps  to  distribute  this  overhead 
among, the result is a slightly longer time-per-step. 

Total wall time of 
solver (sec) 
ode23s 
ode45 
0.0901 
0.0801 
0.0701 
0.0701 
0.1202 
0.0801 

Total number of 
integrator steps 
ode23s 
ode45 
72 
438 
410 
61 
100 
454 

Time per integrator 
step (msec) 
ode23s 
ode45 
1.251 
0.183 
0.171 
1.149 
1.202 
0.176 

tnut (hr) 
0 
2 
8 

The reason why the implicit solver works in fewer steps at a low tolerance and more steps at a 
high tolerance is likely due to the error in the neglected term of the expansion.  The ode45 solver 
is a 5th order expansion and the ode23s is a 3rd order expansion.  This means that the 5th order 
method will be able to take larger steps and still meet the high tolerances, since the error goes as 
(∆t)m.  Below is a table showing the results for the high-tolerances using ode15s (a 5th order stiff 
method).  You can see that in this case, the implicit solver does take fewer steps than the explicit 
method. 

Total wall time of 
solver (sec) 
ode15s 
ode45 
0.5808 
0.2804 
0.5001 
0.3004 
0.4206 
0.8713 

Total number of 
integrator steps 
ode15s 
ode45 
766 
1666 
739 
1734 
2562 
1167 

Time per integrator 
step (msec) 
ode15s 
ode45 
0.758 
0.168 
0.677 
0.173 
0.164 
0.747 

tnut (hr) 
0 
2 
8 

Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to 
Chemical Engineering, Fall 2006. MIT OpenCourseWare (http://ocw.mit.edu), 
Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 

Parts A and C: (ode45 and ode23s: RelTol of 1e-10 and an AbsTol of 1e-12) 
Stif f ODE Solver  (ode23s) wi th t = 0 hrs 
Explicit ODE  Solver  (ode45)  w ith t
= 0 hrs	
nut	
nut
109 
109	

100 

 
 

 
 

 
R
T
S
C
n
i
 
s
l
l
e
C
 
f
o
 
r
e
b
m
u
N

8	

10	

107 

106	

105	
10-2  
10-2

109	

8	

10	

107 

106	

 
R
T
S
C
n
i
 
s
l
l
e
C
 
f
o
 
r
e
b
m
u
N

105	
10-2  
10-2

109	

8	

10	

107 

106	

R
T
S
C
n
i
 
s
l
l
e
C
 
f
o
 
r
e
b
m
u
N

105	
10-2  
10-2

n
i
B
n
i
 
s
p
e
t
S
 
e
m
i
T
 
f
o
 
r
e
b
m
u
N

90 

80 

70	

60 

50 

40 

30	

20 

10 

0

20 

18 

16 

10-1  
10-1

100 
100

Time  [hr ]	

101	
101

Explicit ODE  Solver  (ode45)  w ith t
nut	

= 2 hrs	

14	

n
i
B
n
i
12 
 
s
p
e
t
S
 
e
10 
m
i
T
 
f
o
 
r
e
b
m
u
N

8 

6	

4 

2 

0

50 

45 

40 

35	

n
i
B
n
i
30 
 
s
p
e
t
S
 
e
25 
m
i
T
 
f
o
 
r
20 
e
b
m
u
N

15	

10	

5	

0

10-1  
10-1

100 
100

Time  [hr ]	

101	
101

Explicit ODE  Solver  (ode45)  w ith t
nut	

= 8 hrs	

10-1  
10-1

100 
100

Time  [hr ]	

101	
101

 
R
T
S
C
n
i
 
s
l
l
e
C
 
f
o
 
r
e
b
m
u
N

8

10

107 

106 

105 
10-210
-2

109 

8

10

107 

106 

 
R
T
S
C
n
i
 
s
l
l
e
C
 
f
o
 
r
e
b
m
u
N

105 
10-210
-2

109 

8

10

107 

106 

R
T
S
C
n
i
 
s
l
l
e
C
 
f
o
 
r
e
b
m
u
N

105 
10-210
-2

 	

 	

 	

10-110
-1

10010
0

Time  [hr ]  

10110
1

Stif f ODE Solver  (ode23s) wi th t = 2 hrs 
nut

10-110
-1

10010
0

Time  [hr ]  

10110
1

Stif f ODE Solver  (ode23s) wi th t = 8 hrs 
nut

10-110
-1

10010
0

Time  [hr ]  

10110
1

100 

n
i
B
n
i
 
s
p
e
t
S
 
e
m
i
T
 
f
o
 
r
e
b
m
u
N

90 

80 

70 

60 

50 

40 

30 

20 

10 

0 

100 

n
i
B
n
i
 
s
p
e
t
S
 
e
m
i
T
 
f
o
 
r
e
b
m
u
N

90 

80 

70 

60 

50 

40 

30 

20 

10 

0 

200 

180 

160 

140 
n
i
B
n
i
120 
 
s
p
e
t
S
 
e
100 
m
i
T
 
f
o
 
r
e
b
m
u
N

80 

60 

40 

20 

0 

 

 

 

Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to 
Chemical Engineering, Fall 2006. MIT OpenCourseWare (http://ocw.mit.edu), 
Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 

	
	
	
	
Homework  6 

18 October  2006 

1 Problem  2 

(a)  The  set  of  diﬀerential  equations  are  given  below 

with  Boundary  coditions 

= −(a + cT 2)I 

dI 
dx 

d2T 
k 
dx2 

= 

dI 
dx 

Ix=0  = I0 
Tx=0  = Tx=L  = Ta 

The  diﬀerential  equations  are 2nd  order  in T. To  convert  it  into  two  1st 
�  =  dx . 
dT
order  diﬀerential  equations  we  deﬁne  a  new  variable  called  T 
With  this  new  variable  the  diﬀerential  equations  get  transformed  as 
shown  below. 

� 
= T 

dT 
dx 
= −(a + cT 2)I 
dI 
dx 
�  −(a + cT 2)I 
dT 
= 
k 
dx 

The  above  set  of  diﬀerential  equation  are  now  in  the  standard  form 

dY 
dx 

= F(Y)

Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to 
Chemical Engineering, Fall 2006. MIT OpenCourseWare (http://ocw.mit.edu), 
Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 
1 

(b) The diﬃculty with the above diﬀerential equations is that we don’t have 
the  necessary  intitial  conditions  to  convert  it  into  an  IVP  problem.  To 
�  and  solve  the 
circumvent  this  problem  we  assume  a  initial  value  for T 
IVP  to  obtain  T  at  x = L. If  this  T  matches  the  ambient  temperature 
then  our  system  is  solved.  But  if  Tx=L  is  not  equal  to  ambient  tem­
perature  then  we  will  use  some  update  scheme  to  guess  a  new  value 
� .  We  will  use  this  iterative  scheme  to  get  an  approritate  value 
for  T 
� .  In  my  program  I  have  used  the  matlab  function  fzero  to  solve 
of  T 
� .  The  cost  function  is  ”Tx=L  − Ta”.  The  diﬀerential 
for  the  value  of  T 
equation has been solved using ode45 and ode23s and are implemented 
in  programs  problem2a  usingode45  and  problem2a  usingode23s  re­
spectively.  The  time  taken  to  solve  the  system  of  ode  once  the  cor­
�  is  obtained  is  calculated  by  using  the  matlab  function 
rect  value  of  T 
cputime.  The  command  and  the output  for each  part  are given  below. 

Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to 
Chemical Engineering, Fall 2006. MIT OpenCourseWare (http://ocw.mit.edu), 
Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 
2


1  >>  problem2a  usingode45(10,1e-7); 
The  time  taken  by  ode45  =  0.010014  s 
The  maximum  temperature  achieved  is  359.5373  K,  at  0.49723  cm 
The  number  of  integration  steps  used  before  maximum  T  is  21 
out  of  total  41 
>> 

The Temperature in the filter calculated using ode45 

360 

350 

340 

330 

320 

310 

 
)
K
(
 
e
r
u
t
a
r
e
p
m
e
T

300 
0	

0.2 

0.4 
0.6 
Distance (cm)


0.8 

1


>>  [x,y]=problem2a  usingode23s(10,1e-7); 
The  time  taken  by  ode23s  =0.020029  s 
The  maximum  temperature  achieved  is  359.5218  K,  at  0.4876  cm 
The  number  of  integration  steps  used  before  maximum  T  is  6  out 
of  total  12 
>> 

Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to 
Chemical Engineering, Fall 2006. MIT OpenCourseWare (http://ocw.mit.edu), 
Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 

3


The Temperature in the filter calculated using ode23s 

360 

350 

340 

330 

320 

310 

300 

 
)
K
(
 
e
r
u
t
a
r
e
p
m
e
T

290 
0 

0.2 

0.4 
0.6 
Distance (cm) 

0.8 

1 

2  >>  [x,y]=problem2a  usingode45(1000,1e-7); 
The  time  taken  by  ode45  =  0.010014  s 
The  maximum  temperature  achieved  is  634.8372  K,  at  0.23261  cm 
The  number  of  integration  steps  used  before  maximum  T  is  17 
out  of  total  57 
>> 

The Temperature in the filter calculated using ode45 

650 

600 

550 

500 

450 

400 

350 

300 

 
)
K
(
 
e
r
u
t
a
r
e
p
m
e
T

250 
0 

0.2 

0.4 
0.6 
Distance (cm) 

0.8 

1 

>>  [x,y]=problem2a  usingode23s(1000,1e-7); 
The  time  taken  by  ode23s  =0.060086  s 
The  maximum  temperature  achieved  is  635.0234  K,  at  0.23496  cm 
The  number  of  integration  steps  used  before  maximum  T  is  13 

Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to 
Chemical Engineering, Fall 2006. MIT OpenCourseWare (http://ocw.mit.edu), 
Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 
4 

out  of  total  46 
>> 

The Temperature in the filter calculated using ode23s 

650 

600 

550 

500 

450 

400 

350 

300 

 
)
K
(
 
e
r
u
t
a
r
e
p
m
e
T

250 
0 

0.2 

0.4 
0.6 
Distance (cm) 

0.8 

1 

Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to 
Chemical Engineering, Fall 2006. MIT OpenCourseWare (http://ocw.mit.edu), 
Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 

5


3  >>  [x,y]=problem2a  usingode45(10,3e-4); 
The  time  taken  by  ode45  =  0.010014  s 
The  maximum  temperature  achieved  is  896.4175  K,  at  0.42431  cm 
The  number  of  integration  steps  used  before  maximum  T  is  21 
out  of  total  45 
>> 

The Temperature in the filter calculated using ode45 

 
)
K
(
 
e
r
u
t
a
r
e
p
m
e
T

900 

800 

700 

600 

500 

400 

300 

200 
0	

0.2 

0.4 
0.6 
Distance (cm)


0.8 

1


>>  [x,y]=problem2a  usingode23s(10,3e-4); 
The  time  taken  by  ode23s  =0.020029  s 
The  maximum  temperature  achieved  is  894.8323  K,  at  0.42321  cm 
The  number  of  integration  steps  used  before  maximum  T  is  9  out 
of  total  18 
>> 

Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to 
Chemical Engineering, Fall 2006. MIT OpenCourseWare (http://ocw.mit.edu), 
Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 

6


The Temperature in the filter calculated using ode23s 

900 

800 

700 

600 

500 

400 

300 

 
)
K
(
 
e
r
u
t
a
r
e
p
m
e
T

200 
0 

0.2 

0.4 
0.6 
Distance (cm) 

0.8 

1 

4  >>  [x,y]=problem2a  usingode45(10000,1e-7); 
The  time  taken  by  ode45  =  0.040058  s 
The  maximum  temperature  achieved  is  347.1956  K,  at  0.04677  cm 
The  number  of  integration  steps  used  before  maximum  T  is  28 
out  of  total  221 
>> 

The Temperature in the filter calculated using ode45 

350 

345 

340 

335 

330 

325 

320 

315 

310 

305 

 
)
K
(
 
e
r
u
t
a
r
e
p
m
e
T

300 
0 

0.2 

0.4 
0.6 
Distance (cm) 

0.8 

1 

>>  [x,y]=problem2a  usingode23s(10000,1e-7); 
The  time  taken  by  ode23s  =0.13019  s 
The  maximum  temperature  achieved  is  347.2022  K,  at  0.04630  cm 
The  number  of  integration  steps  used  before  maximum  T  is  22 

Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to 
Chemical Engineering, Fall 2006. MIT OpenCourseWare (http://ocw.mit.edu), 
Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 

7 

out  of  total  105 
>> 

The Temperature in the filter calculated using ode23s 

350 

340 

330 

320 

310 

300 

 
)
K
(
 
e
r
u
t
a
r
e
p
m
e
T

290 
0 

0.2 

0.4 
0.6 
Distance (cm) 

0.8 

1 

(c)  For  part  4  in  the  previous  section  the  distance  at  which  the  maximum 
temperature  is  obtained  is  0.046  cm.  The  number  of  integration  steps 
used  till  this  point  is  28  in  ode45.  At  the  same  average  step  size  we 
will  require  600  step  sizes  to  cover  1  cm.  Thus  if  we  used  the  BVP 
method with 500 uniformly spaced  grip points we will get an erroneous 
answer.  The  grid  size  required  to  get  an  accurate  result  will  be  more 
than  600  because  our  simpliﬁed  discretization  scheme  incurs  a  greater 
error  per  time  step  than  ode45.  Also  it  can  be  noticed  that  ode23s 
takes  longer  to  solve  the  IVP  than  ode45,  this  is  not  very  surprising 
given the fact that this problem is not very stiﬀ, all the variables change 
approximately  at  the  same  length  scale  and  thus  the  cost  of  solving  a 
system  of  non-linear  equations  at  each  integration  step  by  ode23s  is 
not  compensated  by  the  greater  number  of  time  steps  that  ode45  has 
to  take  to  solve  the  system. 

Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to 
Chemical Engineering, Fall 2006. MIT OpenCourseWare (http://ocw.mit.edu), 
Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 

8


