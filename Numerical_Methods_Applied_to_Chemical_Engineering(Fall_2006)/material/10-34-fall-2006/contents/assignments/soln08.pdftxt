10.34 – Fall 2006 
Homework #8 - Solutions 

Problem 1 – Conduction/Convection (Beers’ text 6.B.1) 

r

Twall

T0

R

Flow

T1

z = 0

⇒ 

v 
z

+

∂ 2T ⎞ 
z 2  ⎟
∂ 
⎠

Figure by MIT OCW.
This  problems  involves  heat  conduction  in  a  flowing  Newtonian  fluid  with  a  know  velocity 
profile (incompressible flow in a tube).  The governing equation for the system is the conduction 
equation with convection in the z-direction: 
v ⋅ ∇ (ρC T
) = λ∇ T 
 
2 
P 

∂T  λ ⎛ 1  ∂ 
⎛  T ⎞
∂ 
r 
+
= 
r ⎜ ∂ ⎟ 
⎜
∂z  ρC 
⎝ r
r ⎠
∂ ⎝ 
P 
r  2  ⎞ ∂T  λ  1 ∂
⎛ 
∂ 2T  ∂ 2T ⎞
T
⎛ 
⎛
⎞ 
2U ⎜1 − ⎜
+
⎟ ⎟ ⋅
= 
⎟
⎜ 
⎟ ∂z  ρC 
⎜ 
∂r 2 
∂z 2 
R 
r
r∂
⎠ ⎠ 
⎝
⎠ 
P ⎝
⎝ 
In  this  case,  U  is  the  average  velocity  of  fluid  and  can  be  calculated  from  the  given  Reynolds 
number  and  fluid properties.   The boundary  conditions  for  this problem were given  in  the  radial 
part of  the problem, but were somewhat ambiguous in  the z-direction.   In the z-direction, a valid 
boundary  condition  for  upstream  would  be  that  T = T0  at  some  distance  upstream  of  the 
temperature  change  at  the  wall.    A  BC  for  downstream  could  be  that  the  gradient  (dT/dz)  far 
downstream  is  zero,  or  that  T = T1  far  downstream.    The  zero  derivative  boundary  condition  is 
probably better  since  it will be  less  likely  to  skew  a  solution where you do not go  far  enough  in 
the z-direction.  The boundary conditions used in the problem were: 
(
) 
(
)
2R Pe = T  
= T
T r z  
T r z  = − 
R Pe
 
,
,  = 10
⋅ 
⋅
0 
1 
T
z 
0 
< 
T
⎧
∂
r ( r = 0,
( = ,  ) = ⎨
0 
T r R z  
T1
z
0
≥
∂ 
⎩ 
The  boundary  conditions  in  z  are  equivalent  to  starting  2  characteristic  conduction  times 
upstream and going to 10 downstream of the temperature jump. 

)
z = 0 

 

It  is  often  useful  to  make  problem  non-dimensional  before  solving  in  order  to  formulate  the 
problem  in  terms  of  as  few  parameters  as  possible.    For  this  problem,  we  choose  the  following 
non-dimensional variables: 
2UR  and  α= 
T T
r 
z 
λ 
− 0 
ξ≡ 
η≡
TW − T0 
R Pe  
ρCP 
R 
⋅ 
α
Carefully applying these non-dimensional variables, one will find the following equation: 

 
where :  Pe = 

θ≡

Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to 
Chemical Engineering, Fall 2006. MIT OpenCourseWare (http://ocw.mit.edu), 
Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 

∂ 2θ ( 
∂ 2θ η 
2 ) ∂θ
∂θ 
= 0 
−η 1 −η ⋅ 
+η + 
∂η  ∂η2  Pe  ∂ξ2 
2 
∂ξ 

( ,  = −2 ) = 0
θηξ 
0 
⎧
(  =  ξ) = ⎨ 
θη  1, 
⎩1

0 
< 
ξ 
0
ξ
≥

 

) = 1

(θ ηξ 
,  = 10
θ(η 
∂
= 0, ξ) 
= 0
∂
η

You  can  see  that  the  non-dimensional  form  is  much  simpler,  and  the  boundary  conditions  are 
extremely  simple,  which  is  a  nice  aspect  since  the  units  in many  problems  can  be  tedious.   We 
also multiply through by the radius term to avoid any potential problems at r = 0. 

Now  we  need  to  work  on  the  discretization,  keeping  in mind  that  in  problems  with  convection, 
upwind  differencing  is  usually  the  preferred method  to  ensure  stability.   Therefore,  we  will  use 
upwind difference in the z-direction for first derivatives, central difference in the radial direction 
for first derivatives, and central difference for the 2nd derivatives in both directions. 
• 
r 
i j  
1
,
+ 
• 
i j
, 
• 
i j  
1
,
− 

We need  to  take  the 2-D grid of points  and  translate  it 
into  a  1-D  vector  of  state  variables  for  the  entire 
physical  space.  This  can  be  accomplished  by  the 
following equation: 
(
)
( 
) 
−i  1  N 
j  
n i
+ j
,  =
radial 
This  formula  takes  the  vector  for  each  radial  cross-
section  and  stacks  them  on  top  of  each  other.    The 
discretizations are written as: 
 − 2θi j,  +θi j,  −1
∂ 2θ  θ − 2θ  +θ 
∂θ  θ  + −θ 
θ −θ 
∂ 2θ
∂θ  = 
i j,
i j,  −1 
i j  
i −1,
i +1,
j  
i j, 
i −1,
1
 
, 
 
= 
= 
(
) 
( 
) ∆ξ 2 
∆η 2 
2∆η 
∂η2 
∂ξ2 
∂ξ

∂ηηi 
∆ξ 
ξi 
ηi 
ξi 
Now that we have the discretization formulae, we can rewrite the differential equation as a set of 
algebraic equations.  The internal points of the grid can be described by: 
⎛θi j,
 − 2θi j,  +θ ,  − ⎞  η ,  ⎛θi +1,
j ⎞ 
j − 2θ ,  +θi −1,
2  ⎛θ ,  −θ  ⎞
 −θ ,  − ⎞ 
⎛θ,
⎟⎟ −η ,  (1 −ηi j ) 
i j
i j + 
i j 1 
i j 1 
i j  
i j  
i −1,
j 
 
 
1
 
⎟ = 0
2  η  ⎟ +η ,  ⎜⎜ 
⎟⎟ + 
2  ⎜ 
⎜
,  ⎜
Pe ⎜ 
i j  
i j  
) ∆ 
(
( 
) ∆η 
2 
2 
∆ξ  ⎠
∆
ξ 
⎝
⎠ 
⎝ 
⎠ 
⎝ 
⎠
⎝ 

• 
 j
i
1, 
+ 

• 
i
 j
1, 
− 

θ,
i j +

1
= 

z 

1
+ 

 

 

 

j 

 

j 

 

 

 

Grouping the terms for each state variable, we get the following: 
⎛ 
⎛ 
⎞
⎛
⎞
2  ,
ηi j   θi 1,
η
η
1 
i j   ⎟⎟
i j  
,
, 
2  θi j,
j + − 
 + ⎜ 
2  −
+ 
⎜
ξ 2  ⎟⎟
⎜ 
⎜
⎜
 
⎜
⎝ 2∆η  ( 
) ∆
) ∆
⎝  ( 
⎝ Pe ( 
) ∆ 
+ 
2 
η 
η 
⎠ 
⎠ 
i j ( ηi j,  ) ⎞
⎛ 
η , 1 
2 
⎛
−
η
ηi j,
i j  
, 
⎟θ 
+ ⎜
+ 
2  − 
⎟ i −1, j + 
⎜ 
⎜ ( 
⎜ Pe 2 
ξ 2 
) ∆ 
( 
) ∆η 
ξ 
∆
⎝
⎠
⎝ 

1
+

i j (
,  ) 
⎞ 
η  1 −η2 
2 
ηi j  
i j   ⎟ i j
, 
, 
θ , 
2  − 
⎟
) ∆ 
( 
∆ξ 
Pe 2
ξ 
⎠
1  ⎞
,  − = 0 
θi j
⎟⎟ 
 1
2∆η
⎠ 

for : 2   i N  − 1 
≤ ≤ 
z 

and 

j N 
2 
≤ ≤ 
radial 

− 1

Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to 
Chemical Engineering, Fall 2006. MIT OpenCourseWare (http://ocw.mit.edu), 
Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 

The boundary conditions are defined as: 
θ ,  = 0 
i j  
θ = 1 
i j , 
(
) 
i  1  ξ 0
⎧0  ξ 
+ − ∆ <

i =1 
θi j ,  = ⎨ 
( 
) 1  ξ
i 
⎩1  ξi =1  + − ∆ ≥ 
0 
4 
1
0
θ ,  +2  = 
θ 1 
i j,  + +
i j  
3 
3

θi j  
,  −

j  N radial  − 1
for  i = 1 and  2 
≤ ≤ 
for  i = N  and  2 ≤ ≤ 
j  N radial  − 1 
z 

for  j = N radial


for  j = 1

We  now  have  equations  for  all  points  in  the  grid,  including  the  boundary  conditions.   The BC’s 
will  also  require  the  b-vector  (in  A*x  =  b)  to  be  specified  at  a  few  points  in  i,  j  space  (with  all 
other  elements  being  zero).    The  translation  formula  from  earlier  can  be  used  to  make  a  sparse 
matrix  filled  with  the  coefficients  of  the  state  variables.    For  the  internal  points,  the  equations 
are: 
i j,  ( 
i j  )
η 1 −η2 
, 
− 
∆ξ

,  ) 
( 
A n  , , n 
= − 
i j  
i j  
(

2η
i j, 
(
) 
2 
Pe 2  ∆ξ 

2η 
i j  
,
2  − 
) 
∆η 

j 

)

= 

) = 
 

( 
A ni j, , ni  1,
+ 

(
i j n , 
A n  
, 
i j +1
, 

η
η
1 
i j, 
i j  
, 
+ 
) 
(
) 
2
2 
2∆η
Pe 2 
η 
ξ 
∆
∆ 
η ,  ( 
) ηi j, 
i j   1 − 2 
ηi j, 
) ηi j, 
1
(
( i j, 
j ) = 
A n  , n −
A n  i j  , n , 
2  −
i j −1  = 
2  +
i  1,
, 
 
(
) 
(
) 
2∆η 
∆ξ 
Pe  ∆ξ
2
∆η 
Similar equations can be written for the boundary conditions that relate the state variables.  Note 
the  all  of  the  coefficients  for  a  given  equation  occur  on  the  same  row  of  the  A-matrix.    The 
A-matrix is multiplied by the state variable vector to yield the equations at each point in physical 
space.  The system of linear equations that needs to be solved is:  A ⋅θ= b . 

(

Figures: 

Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to 
Chemical Engineering, Fall 2006. MIT OpenCourseWare (http://ocw.mit.edu), 
Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 

 
)
m
c
(
 
s
u
i
d
a
R

5 

4.5 

4 

3.5 

3 

2.5 

2 

1.5 

1 

0.5 

0 

Temperature Field  (K) 

0

1

2

3

4
5
Length  (meters) 

6

7

8

9

10 

390 

380 

370 

360 

350 

340 

330 

320 

310 

 
)
K
(
 
e
r
u
t
a
r
e
p
m
e
T

400 

390 

380 

370 

360 

350 

340 

330 

320 

310 

300 

Temperature at var ious  r -values 

r  = 0 cm  
r  = 1 cm  
r  = 2 cm  
r  = 3 cm  
r  = 4 cm  

0 

2 

4 

6 

8 
Length  (meters) 

10 

12 

14 

16 

You  can  also  look  at  the  sparsity  pattern  of  the  system  matrix  using  the  “spy”  command.    This 
just  shows  the  top  left  corner.  You  can  see  the  tri-diagonal  with  two  diagonals  offset  from  the 
center by  the number of points  in  the  radial direction.   The gaps correspond  to  rows  that  specify 
the boundary conditions. 

Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to 
Chemical Engineering, Fall 2006. MIT OpenCourseWare (http://ocw.mit.edu), 
Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 

Problem 2: Reaction and Diffusion in a Spherical Catalyst Bead (Beers’ text 6.B.1) 

In  the  problem,  we  are  concerned  with  a  spherical  catalyst  particle  with  diffusion,  and  a  given 
external mass transfer situation (Sherwood number).  The general equation for this situation is: 

∂S 
∂t 

= =0  DS gel  
2 S  RV  ⇒ 
∇ + 
,

⎛ 1  d
⎞ ρV S
dS
⎛ r 2 
⎞ 
0 = D  , 
E m
⎟ ⎟ −
⎜
⎜ 
S  gel  
⎝ r  dr ⎝  dr ⎠ ⎠ Km  + S 
2 

 

 

 

One  must  be  careful  when  dealing  with  the  units  in  this  problem,  and  converting  everything  to 
moles-m3-sec-kg may be advisable.  We can expand the spherical derivatives to get: 

dS   rρ  V S  
2d S  
0 = r 
2  + 2 
E
m 
− 
dr  DS gel  K  + S 
dr 
m 
, 

The boundary conditions  for  this problem are  symmetry at  r = 0, and  that  the  fluxes are equal at 
r = R.  These essentially result in: 

dS 
dS 
D  ,  dr  ( r = R  = kmass  ( S  − S surface 
dr  ( 
) = 0 
) 
r = 0 
S  gel 
bulk 
We can do a discretization based on uniform spacing in the radial direction: 

) 

⎛ S  − S  ⎞ 
⎛ S  − 2S  + S  ⎞
rρ  V S
0 = r
i −1  + 2 
i −1  − i E 
i +1 
i
i +1 
m i 
i  ⎜ 
⎟
⎜ 
⎟
∆r 
⎝  2∆r 
⎠ D  ,  Km  + S
2 
⎝
⎠
S gel  
1
4
Si  − Si +1  + Si +2  = 0 @  i
3
3 
Si  − Si −1  = 
kmass
DS gel

∆r 
, 

( Sbulk  − Si ) @  i
 

 
= R


for

 
r

for

 
r

 
= 0

 

 

 

i  

One  thing  to note  is  that boundary  condition  at R  can behave differently depending on how  it  is 
written, due to numerical issues.  It is more robust if written as above.  I found that if it is written 
with the D and kmass on different sides, then you must multiple the residual by 1e6 or 1e9 in order 
to force tight convergence at this point. 

Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to 
Chemical Engineering, Fall 2006. MIT OpenCourseWare (http://ocw.mit.edu), 
Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 

Plot the concentration profiles (using a scaled radius): 

1000 

900 

800 

700 

600 

500 

400 

300 

200 

 
 )
3
m
/
e
l
o
m
(

 
n
o
i
t
a
r
t
n
e
c
n
o
C

R  =  0.5  mm  
R  =  1.0  mm  
R  =  5.0  mm  

100 
0 

0.1 

0.2 

0.3 

0.4 
0.6 
0.5 
r /R    (scaled  radius)  

0.7 

0.8 

0.9 

1 

 
 )
3
m
/
e
l
o
m
(

 
n
o
i
t
a
r
t
n
e
c
n
o
C

1000 

990 

980 

970 

960 

950 

940 

930 

920 

0 

R =  0.5 mm 
R =  1.0 mm 
R =  5.0 mm 
Close-up of small radii 
0.1 
0.2 
0.3 
0.4 
0.6 
0.5 
r /R    (scaled  radius)  

0.7 

0.8 

0.9 

1 

Consumption Rates: 
Results for R = 0.0005 meters: 
[S] at the bead surface:  999.3425 moles/m^3

Consumption Rate:  1.4458e-011 moles/sec

Consumption Rate per kg of Enzyme:  2.7614 moles/sec S per kg E 

Results for R = 0.001 meters: 
[S] at the bead surface:  997.3773 moles/m^3

Consumption Rate:  1.1535e-010 moles/sec

Consumption Rate per kg of Enzyme:  2.7538 moles/sec S per kg E 

Results for R = 0.005 meters: 
[S] at the bead surface:  943.5237 moles/m^3

Consumption Rate:  1.2419e-008 moles/sec

Consumption Rate per kg of Enzyme:  2.372 moles/sec S per kg E 


Based  on  these  consumption  rates,  one  would  want  to  chose  the  bead  size  of  0.5  mm,  since  its 
results in the highest consumption rate per mass of enzyme. 

Another point of interest may be the concentration of S at the particle surface, which are shown. 

One problem that I found was getting the boundary conditions to be satisfied well, particularly at 
the  surface  of  the  bead.   One would  expect  the  flux  calculated  from  the  inside  (D*dS/dr) would 
equal  the  flux  from  the  outside  (k*(Sbulk-Ssurface)),  but  this  was  not  always  the  case.  The 
boundary conditions are something  that you definitely know and want  to  force  to be  true  to high 
accuracy.  This may require that you weight the BC equations by multiplying them by something 
like  1e6  or  1e9.  This  will  force  these  to  be  satisfied  very  accurately,  as  should  force  the  equal 
flux condition to be true. 

Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to 
Chemical Engineering, Fall 2006. MIT OpenCourseWare (http://ocw.mit.edu), 
Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 

Homework  8 

November  1,  2006 

Problem3 

Velocity  Proﬁle 

Since the diﬀusion of A  into the solvent ﬁlm does not eﬀect the density ρ and 
viscosity  μ  of  the  liquid,  we  can  calculate  the  velocity  proﬁle  independently 
of the concentration of A, B or AB in the solvent.  The navier stokes equation 
(cid:2) 
(cid:3) 
for  velocity  vz  that  is  changing  only  in  y  direction  is  as  follows. 
∂ 2 vz
ρgz  + μ 
∂y 2 

= 0 

(1) 

The  velocity  is  0  at  y  =  b  and  the  derivative  of  velocity  is  0  at  the  y  = 0, 
which  gives  us  our  2  boundary  conditions.  To  obtain  the  second  boundary 
condition  we  have  assumed  that  the  viscosity  of  air  is  0.  Solving  the  above 
equation  analytically  we  get 
vz  = − ρgz (y 2  − b2 ) = 85.09(y 2  − b2 ) cm/s 
2μ

(cid:2) 
(cid:3) 
The mass  balance  equations  for  any  species  i  is

∂ 2Ci 
∂ 2Ci 
∂Ci 
∂z 2 
∂y 2 
∂z 
The  boundary  conditions  of  this  problem  in  the  y-direction  is  given  by 
Equation  4.  The  boundary  condtions  for  B  and  C  implies  that  they  don’t 
diﬀuse  out  of  the  liquid  ﬁlm. 

+ R(CA , CB , CAB ) 

= Di 

(3) 

(2) 

vz 

+

CA(y=0)  = HApA 

∂CA
∂ y  (y=b) 
= 0  ∂CB 
∂ y  (y=b) 

= 0 

= 0 

∂CB 
∂y  (y=0) 

Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to 
Chemical Engineering, Fall 2006. MIT OpenCourseWare (http://ocw.mit.edu), 
Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 
1 

∂CC 
∂y  (y=0) 

= 0  ∂CC 
∂ y  (y=b) 

= 0 

(4) 

The  boundary  conditions  of  this  problem  in  the  z-direction  is  given  by 
Equation  5.  The  boundary  conditions  at  z = L  is  not  rigorously  true,  but  is 
a  ﬁrst  guess  approximation. 

CA(z=0)  = 0 
CB (z=0)  = CB0 
CC (z=0)  = 0 

∂CA
∂ z  (z=L)  = 0 
∂CB 
(z=L)  = 0
∂ z 
∂CC
∂ z  (z=L)  = 0 

(5) 

Scaling  Analysis 

vz 

= 

+

(6) 

Let  us  scale  the  problem  such  that  Z  =  z/L  and  Y  =  y/b. Doing  so  the 
(cid:3) 
(cid:2) 
diﬀerential  equation  gets  transformed  to 
∂ 2Ci 
∂ 2Ci 
∂Ci 
= Di 
+ R(CA , CB , CAB ) 
+
(cid:4)  (cid:5) 
(cid:5) 
(cid:4) 
(cid:4) 
(cid:5) 
b2∂Y 2  L2∂Z 2 
L∂Z 
∂ 2Ci 
DiL ∂ 2Ci 
L 
∂Ci 
Di 
+ 
R(CA , CB , CAB ) 
vz L  ∂Z 2 
vz b2  ∂Y 2 
∂Z 
vz 
We can evaluate the approximate values of all the constant multipying factors 
in  front  of  the  diﬀerent  terms  to  get  an  approximate  importance  of  each  of 
these  terms  and  the  length  scale  that  they  are  valid  at.  In  our  analysis  the 
reference  term  is  ∂Ci  with  which  all  the  other  terms  are  compared. 
∂Z 
•  ∂Y 2 
∂ 2Ci
Lets  look  at  the  coeﬃcient  of  ∂ 2Ci 
∂Y 2  . 
−5  × 50 
10
85 × 0.12 

DiL 
vz b2 

(7) 

≈ 10

−3 

= 

∂ 2Ci
The  dimensionless  length  scale  over  which  ∂Y 2  term  becomes  compa­
rable  to  term  ∂Ci  can  be  estimated  as  shown  below. 
∂Z 

≈ 10
δCi 
δZ 
δY 2  ≈ 10

−3 
δCi
δY 2 
−3δZ 

Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to 
Chemical Engineering, Fall 2006. MIT OpenCourseWare (http://ocw.mit.edu), 
Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 

2 

Thus  if we  divide  the  dimensionless  length  scale Z  into  10  subdivisions 
i.e.  δZ  = 0.1,  then  dimensionless  Y  has  to  be  divided  into  100  parts. 
Thus  for  our  case,  the  length  scale  of  Y  that  is  important  is  0.01  ( 
y  ≈  0.001  cm).  This  analysis  tells  us  that  in  y  direction  in  absence 
of  reaction  the  length  scale  that  we  have  to  use  is  of  the  order  0.001. 
Such  ﬁne  meshing  will  result  in  a  number  of  grid  points  100  in  the  y 
direction  and  10  in  the  z  direction.  Each  species  has  concentration  at 
each grid point and thus there are 3 variables per grid point.  Thus  this 
will  result  in  a  system  of  3000  equations  in  as  many  variables  and  the 
Jacobian  of  the  system  will  have  an  the  order  of  107  entries.  This  is  a 
huge number and will almost surely result in matlab complaining about 
running  out  of memory,  and  if  not  that  then  the  cpu  time  will  be  very 
large.  This brings us to the requirement  to do adaptive meshing.  Later 
in  the  solution we will  look  at  how  to  do  adaptive meshing,  so  that we 
can  capture  the  variations  of  concentration  in  the  narrow  region  close 
to  y=0. 
•  ∂Z 2 
∂ 2Ci
The  coeﬃcient  of  this  term  is 

Di 
vz L 

= 

−5 
10
85 × 50 

≈ 10

−9 

The  length scale over which  ∂ 2Ci  term becomes comparable to term  ∂Ci 
∂Z 2 
∂Z 
can  be  estimated  as 

≈ 10
δCi 
δZ 
δZ  ≈ 10

−9 
δCi
δZ 2 
−9 

The  above  analysis  tell  us  that  for  our  geometry  the  diﬀusion  term  in 
−9 . Thus 
the z-direction will be signiﬁcant if we chose our δZ  close to 10
for  all  practical  purposes  we  can  chose  to  ignore  this  term,  although 
including  it  would  not make  any  diﬀerence. 
•  Reaction  Term 
The  importance  of  the  reaction  term  can  be  judged  by  evaluating  the 
coeﬃcient  in  front  of  it 

kLCB0 
vz 

10

= 

−2  × 50 × 1 
85 

≈ 10

−2 

3 

Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to 
Chemical Engineering, Fall 2006. MIT OpenCourseWare (http://ocw.mit.edu), 
Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 

The  length  scale  in  the  Z  direction  over  which  the  reaction  eﬀects  the 
concentration  of A  is 

δCA  ≈ 10
−2CA
δZ 
δZ  ≈ 102 
Thus  in  our  problem  we  dont  expect  the  reaction  rate  to  play  a  very 
important  role.  If  the  length  of  the  channel  was  5 m  instead  of  50  cm, 
then  perhaps  the  reaction  will  enhance  the  absorption  of  A  into  the 
liquid  channel. 

Nonuniform  Grid 

+ f3

To  see  the  change  in  concentration  of  A  in  the  z  direction  we  divide  the  z 
axis  into  2  regions,  ﬁrst  region  goes  from  0  to  0.01  cm  and  the  next  region 
goes  from  0.01  cm  to  0.1  cm.  In  the  ﬁrst  region  we  put  20  uniformly  placed 
grid points and  in the second  region we put another 10 uniformly placed grid 
points.  The presence  of non-uniform grid points  requires  us  to  calculate new 
discretization  formulas.  To do  this we  look at any  three points  in a  row with 
coordinates  x1 ,  x2  and  x3 ,  with  the  function  value  of  f1 ,  f2  and  f3 . We  can 
estimate the function which passes through these points using a second order 
lagrange  polynomial  (Beer’s  book  pg-226).  The  polynomial  is  given  as 
(x − x2)(x − x3 )
(x − x1 )(x − x3 )
(x − x1 )(x − x2 )
(x2  − x1 )(x2  − x3 )
(x1  − x2)(x1  − x3 )
(x3  − x1 )(x3  − x2) 
f (x) = f1 
+ f2 
To  calculate  the  derivative  and  second-derivative  at  the  central  point 
x  =  x2 ,  we  just  take  the  ﬁrst  derivative  and  the  second  derivative  of  the 
above  equation  and  equate  x = x2 .  Doing  the  same  we  obtain  the  following 
(cid:2)
(cid:2)(cid:2)
formulas  for  f
(x = x2 ). 
(x = x2 ) and  f
2x2  − x3  − x1  +f3 
(x2  − x1 ) 
(x2  − x3 )
(cid:2)
(x3  − x1 )(x3  − x2) 
(x2  − x1 )(x2  − x3 )
(x1  − x2 )(x1  − x3 )
(x = x2 ) = f1 
+f2 
(8) 
2f3 
(x3  − x1 )(x3  − x2) 
(9) 
Equation (8) gives the central diﬀerence formulation of the ﬁrst derivative 
and  can  result  in numerical  noise  leading  to oscillations.  For our problem we 
will  just  use  the  upwind  diﬀerence  scheme  which  can  be  written  as 
(f2  − f1 ) 
(x2  − x1 ) 

2f1 
(x1  − x2)(x1  − x3 )

2f2 
(x2  − x1 )(x2  − x3 )

f

(x = x2 ) = 

f

(x = x2 ) = 

f

(cid:2)(cid:2)

+

+ 

(cid:2)

(10)

Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to 
Chemical Engineering, Fall 2006. MIT OpenCourseWare (http://ocw.mit.edu), 
Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 
4 

Flux  of  A 

FA  = 

=	

(cid:6) (cid:6) 
We  can  calculate  the  ﬂux  of  species  A  into  the  channel  using  the  equation 
∂CA (cid:6)
(cid:6) 
∂y  (cid:6) 
FA (z , y = 0) =  −DA 
z ,y=0 
The  average  ﬂux  of  A  per  unit  area  can  be  calculated  using  the  formula 
given  in  Eqation  12, which  is  similar  to  using  the  trapezoid  rule 
⎡	
⎤ 
(cid:6) 
(cid:6) 
(cid:6) 
(cid:6) 
(cid:7) 
∂CA (cid:6) 
∂CA (cid:6) 
⎣	
⎦
(cid:6) 
(cid:6)	
∂y  (cid:6) 
∂y  (cid:6) 
−DA 
+ 
zi−1 ,y=0 
i
zi ,y=0 
−3CA (zi , 0) + 4CA(zi , 1) − CA (zi , 2) 
2Δy 

(zi  − zi−1) 
2L

(cid:6) (cid:6) 
∂CA (cid:6) 
(cid:6) 
∂y  (cid:6) 
zi ,y=0	

(12)

(13)

(11)

Program  Structure 

The  code  that  does  all  the  above  is  given  in  4  separate  ﬁles 
•	 problem3  bvp  nonuiformgrid.m  This  is  the  main  program  which  ini­
tializes  all  the  variables  and  calls  fsolve. 
•	 solve  c  nonuniformgrid.m  This  function  is  called  by  fsolve  and  it 
returns  the  residuals  to  fsolve.  One  could  ideally  make  it  return  the 
jacobian  as  well,  but  i  have  not  done  it  here.  Making  the  jacobian 
sparse  and  returning  it  will  result  in  faster  computations. 
•	 velocity.m  This  function  returns  the  velocity  of  liquid  at  any  given 
value  of  y. 
•	 reactionRate.m  Returns  the  rate  of  reaction  for  a  given  conentration 
of  A,  B  and AB. 
•	 derivative.m  Calculates  the  derivative  using  ﬁnite  diﬀerence  at  any 
given  grid  point.  This  function  is  useful when  one  is  dealing  with  non­
uniform  grid  spacing. 
•	 doublederivative.m  Calculates  the  second  derivative  ﬁnite diﬀerence 
at  any  given  grid  point.  This  function  is  useful  when  one  is  dealing 
with  non-uniform  grid  spacing. 

Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to 
Chemical Engineering, Fall 2006. MIT OpenCourseWare (http://ocw.mit.edu), 
Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 

5


Result 
•  Zero  Reaction  Rate 
The  sample  input  output  and  grphs  for  this  run  is  given  below. 
>>  problem3  bvp  nonuiformgrid(0) 

Norm  of  First-order  Trust-region 
Iteration  Func-count 
f(x) 
radius 
optimality 
step 
1501 
0 
0.23 
1 
0.1 
1 
1 
3002 
0.059986 
1 
0.113 
2 
4503 
1.81919e-018  1.04378 
1.86e-007 
2.5 
Optimization  terminated:  first-order  optimality  is  less  than

options.TolFun. 

The  total  flux  of  A  into  the  channel  is:  4.9196e-007  mol/cm2/s^

>>


Concentration of A 

 
)
m
c
(
 
s
i
x
a
z

50 

45 

40 

35 

30 

25 

20 

15 

10 

5 

0 
0 

0.1 

0.09 

0.08 

0.07 

0.06 

0.05 

0.04 

0.03 

0.02 

0.01 

0 

0.02 

0.04 
0.06 
y−axis (cm) 

0.08 

0.1 

Figure  1:  Concentration  of  A without  reaction 

•  Zero  Reaction  Rate 
The  sample  input  output  and  graphs  for  this  run  is  given  below. 
>>  problem3  bvp  nonuiformgrid(1e-2) 

Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to 
Chemical Engineering, Fall 2006. MIT OpenCourseWare (http://ocw.mit.edu), 
Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 
6 

−
Concentration of A 

 
)
m
c
(
 
s
i
x
a
z

45 

40 

35 

30 

25 

20 

15 

10 

5 

0 

0 

5 

10
y−axis (cm) 

15


x 10−3


0.1 

0.09 

0.08 

0.07 

0.06 

0.05 

0.04 

0.03 

0.02 

0.01 

0 

Figure  2:  Magniﬁed  view  at  the  boundary 

Norm  of  First-order  Trust-region 
radius 

optimality 
step 
f(x) 
Iteration  Func-count 
1

0.17 
0.231242 
1501 
0 
0.164 
1

1 
0.060299 
1 
3002 
2.5

5.34e-007 
4.65734e-014  1.04396 
4503 
2 
Optimization  terminated:  first-order  optimality  is  less  than

options.TolFun. 

The  total  flux  of  A  into  the  channel  is:  4.928e-007  mol/cm2/s^

>>


Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to 
Chemical Engineering, Fall 2006. MIT OpenCourseWare (http://ocw.mit.edu), 
Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 
7


−
 
)
m
c
(
 
s
i
x
a
z

50 

45 

40 

35 

30 

25 

20 

15 

10 

5 

0 
0	

Concentration of A 

0.02 

0.04 
0.06 
y−axis (cm)


0.08 

0.1


0.1 

0.09 

0.08 

0.07 

0.06 

0.05 

0.04 

0.03 

0.02 

0.01 

0 

Figure  3:  Concentration  of A  with  reaction 

Concentration of A 

 
)
m
c
(
 
s
i
x
a
z

50 

45 

40 

35 

30 

25 

20 

15 

10 

5 

0 

2 

4 

6 

8 
10
y−axis (cm) 

12

14

16

18 
x 10−3 

0.1 

0.09 

0.08 

0.07 

0.06 

0.05 

0.04 

0.03 

0.02 

0.01 

0 

Figure  4:  Magniﬁed  view  at  the  boundary  showing  concentration  of  A 

Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to 
Chemical Engineering, Fall 2006. MIT OpenCourseWare (http://ocw.mit.edu), 
Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 
8


−
−
 
)
m
c
(
 
s
i
x
a
z

50 

45 

40 

35 

30 

25 

20 

15 

10 

5 

0 
0	

Concentration of AB 	

0.02 

0.04 
0.06 
y−axis (cm)


0.08 

0.1


x 10−4 

2.5 

2 

1.5 

1 

0.5 

0 

Figure  5:  Concentration  of  B  with  reaction 

Concentration of B 

 
)
m
c
(
 
s
i
x
a
z

45 

40 

35 

30 

25 

20 

15 

10 

5 

0 

0	

0.005 

0.01 
y−axis (cm) 

0.015 

0.02 

1 

0.9999 

0.9999 

0.9998 

0.9998 

0.9997 

Figure  6:  Magniﬁed  view  at  the  boundary  showing  concentration  of  B 

Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to 
Chemical Engineering, Fall 2006. MIT OpenCourseWare (http://ocw.mit.edu), 
Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 
9


−
−
 
)
m
c
(
 
s
i
x
a
z

50 

45 

40 

35 

30 

25 

20 

15 

10 

5 

0 
0	

Concentration of AB 	

0.02 

0.04 
0.06 
y−axis (cm) 

0.08 

0.1 

x 10−4 

2.5 

2 

1.5 

1 

0.5 

0 

Figure  7:  Concentration  of AB  with  reaction 

 
)
m
c
(
 
s
i
x
a
z

45 

40 

35 

30 

25 

20 

15 

10 

5 

0 
0 

Concentration of AB 	

0.005 

0.01 
y−axis (cm) 

0.015 

0.02 

x 10−4 

2.5 

2 

1.5 

1 

0.5 

0 

Figure  8:  Magniﬁed  view  at  the  boundary  showing  concentration  of  AB


Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to 
Chemical Engineering, Fall 2006. MIT OpenCourseWare (http://ocw.mit.edu), 
Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 

10


−
−
