10.34 Quiz 1, October 4, 2006 
 
A perfectly-stirred reactor (a CSTR) is loaded with cells which multiply at a rate: 
[
]
Nutrients
k N
Cell Multiplication
cells
1
(
)
[
[
]
d P
c Nutrients
1
+
1

(
1

=

+

)

]

 

 
So the net balance on cells in the CSTR is: 
dN
Cell Multiplication Rate at which cells flow out of reactor
cells
=
−
dt

 

 
A nutrient/water mixture with [Nutrients]in = 0.2 M is flowed into the 150 liter CSTR at a 
rate of 2.3 liter/min. The cells in the CSTR eat some of the nutrients: 
(
)
c Cell Multiplication
k N
Nutrient Consumption Rate
=
+
2
2

cells

 

 
and produce a desired pharmaceutical product P: 
(
)
]
[
k N
d P
exp
−
(
cells
3
(
)
[
]
c Nutrients
1
+
1

P production rate

=

⋅

[

Nutrients

]

−

)2
0.01

 

 
The parameters are : 
M s
k
0.5
1
−
=
1
moles cell
k
1 10
= ×
k
moles cell
1 10
−
= ×

7
−

 

−

1

6

2

3

1
−

1
−

1
−

s
s M
1
−

−

1

c
1
c
2
d

0.1
=
1 10
= ×
0.01
=

−

5

1

−

M
moles cell
M
1
−

1−

 

 

 

(a)  Write a couple of Matlab functions that together compute the concentrations [P] 
and [Nutrients] (units: M = moles/liter), as well as the number of cells per liter, in 
the output stream when the system is operated at steady-state.  Give numerical 
values for all the inputs.  Do you think that scaling will be a problem?  Explain 
and give an appropriate scaling factor if necessary.   

 
(b)  If your program from part (a) works correctly, how would you test whether the 
solution found is physical and achievable (i.e. stable)? (Explain in words; bonuses 
for giving correct relevant equations and/or Matlab functions). 

(c)  If your program from part (a) converges to an unphysical or unstable solution, 
what would you do next to try to find an experimentally-relevant steady-state 
solution? (Explain in words; bonuses for giving correct relevant equations and/or 
Matlab functions.) 

 
For your convenience, on the next page we have supplied the Matlab functions 
Cell_Multiplication.m, Nutrient_Consumption.m, P_production.m, and 
param_set.m, which you can call with the functions you write yourself. You can also call 
any built-in functions in Matlab and any functions presented as examples in class. 
 

Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to Chemical Engineering, Fall 2006.
MIT OpenCourseWare (http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD Month YYYY].

 
function CMrate = Cell_Multiplication(Ncells,Nutrients,P,params) 
% computes the Cell Multiplication rate (cells/s) in the CSTR 
% inputs: 
%   Ncells       number of cells in the CSTR 
%   Nutrients    concentration of Nutrients in the CSTR (moles/liter) 
%   P  
     concentration of Product in CSTR, [=] moles/liter 
%   params       values of [k1,k2,k3,c1,c2,d] as listed in problem statement. 
k1 = params(1); c1=params(4); d=params(6); 
CMrate = k1.*Ncells.*Nutrients./((1+c1.*Nutrients).*(1+d.*P)); 
 
 
 
 
function NCrate = Nutrient_Consumption(Ncells,Nutrients,P,params) 
% computes the nutrient consumption rate in the CSTR (moles/s) 
% inputs: 
%   Ncells     
number of cells in the CSTR 
%   Nutrients     concentration of Nutrients in the CSTR (moles/liter) 
%   P  
      concentration of Product in CSTR, [=] moles/liter 
%   params        values of [k1,k2,k3,c1,c2,d] as listed in problem 
statement. 
k2 = params(2);    c2 = params(5); 
NCrate = k2*Ncells + c2*Cell_Multiplication(Ncells,Nutrients,P,params); 
 
 
 
 
function Prate = P_production(Ncells,Nutrients,P,params) 
% computes the product production rate in the CSTR (moles/s) 
% inputs: 
%   Ncells     
number of cells in the CSTR 
%   Nutrients     concentration of Nutrients in the CSTR (moles/liter) 
%   P  
      concentration of Product in CSTR, [=] moles/liter 
%   params        values of [k1,k2,k3,c1,c2,d] as listed in problem 
statement. 
k3 = params(3); d=params(6); c1=params(4); 
Prate = k3.*Ncells.*exp(-d.*P).*((Nutrients-0.01).^2)./(1+c1.*Nutrients) 
 
 
 
 
function params = param_set 
% sets params as in the problem statement 
% [k1  k2  k3  c1  c2  d] 
params = [0.5 1e-7 1e-6 0.1 1e-5 0.01]; 

Cite as: William Green, Jr., course materials for 10.34 Numerical Methods Applied to Chemical Engineering, Fall 2006.
MIT OpenCourseWare (http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD Month YYYY].

