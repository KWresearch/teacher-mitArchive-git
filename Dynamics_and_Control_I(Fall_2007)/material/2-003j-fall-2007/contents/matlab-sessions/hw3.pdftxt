Massachusetts Institute of Technology  

Department of Mechanical Engineering  


2.003J/1.053J Dynamics & Control I 

Fall 2007 

Homework 3


Issued: Sep. 21. 2007 

Due: Oct. 5. 2007 


All m-files  that you create  in  this homework should have enough comments of your codes (brief 
explanations), and should be submitted to the MIT Server class site. 

Problem 3.1 :	 Calculate  the  trajectory  of  a  ball  dropping  and  bouncing  without  no  drag 
force 
A ball  starts  to drop  from a height of 1 meter. Only vertical motion  is considered. When  the ball 
hits  on  the  ground,  it  re-bounces  with  coefficient  of  restitution  (COR)  e = 0.8 .  The  only  force 
acting  on  the  ball  is  a  gravitational  force,  and  the  equation  of motion with  the  initial  conditions 
can be expressed as below: 
d h t( ) 
2 
2  = − g ,  h ( )0  = 1,  &  v ( )0  = h ( )0  = 0
a t( ) = h t( )  = 
&	&
&
dt 
Write  an  m-file  (ball3_your_kerberos_name.m)  to  numerically  (without  integrating  the 
equation  of  motion)  simulate  the  trajectory  of  the  ball  until  ball  hits  on  the  ground  three  times. 
Plot the trajectory of the ball  h t( )   in time. 

Note: In order to simulate the trajectory of the ball, Euler forward method is introduced. 
)  x t( ) + & ( ) ⋅ Δt  &  x t 
& ( + Δ  ≅ x t 
x t( + Δ  ≅ 
t ) 
& ( ) + &&x t( ) 
t 
⋅ Δt
x t 
or 
)n  ⋅ Δt  &  x t  1 ) ≅ x tn  + x t(  ) ⋅ Δt  w e e  Δ =  n + − t
) + x t(
x t( n +  ) ≅ x t(
& ( n + 
& (
) 
h r
t
t  1 
&&  n 
&
n 
1 
t  0.01sec
Simulate the motion of the ball with 
Δ = 

n 

Problem 3.2 :	 Calculate the trajectory of a ball dropping and bouncing with Stokes’ drag 

Cite as: Peter So, course materials for 2.003J / 1.053J Dynamics and Control I, Fall 2007. MIT OpenCourseWare 
(http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 

We  assume  that  the  velocity  of  the  ball  dropping  and  bouncing  is  low  enough,  and  introduce 
Stokes’ drag which resists movement of the ball, and linearly proportional to speed. The equation 
of motion can be expressed as below: 
d h t( ) 
2 
2  = −  −  h t( ) = g bv t ,  h (  ) = 1,  &  v 0  = h (  ) = 0
( ) = h t  = 
( ) 
( ) 
g b & 
&  0
a t 
&&( )  
0 
− − 
dt 
write  an  m-file  (ball3stokes_your_kerberos_name.m)  with  b = 0.8  to  numerically 
(without  integrating  the  equation  of motion)  simulate  the  trajectory  of  the  ball  until  ball  hits  on 
the ground three times. Plot the trajectory of the ball  h t( )   in time. 

Problem 3.3 :  Calculate  the  trajectory  of  a  ball  dropping  and  bouncing  with  quadratic 
drag 
Consider  the case where the drag  is quadratic to velocity  instead. The equation of motion can be 
expressed as below: 

h t( ) 
&

v t( )

= −  −g  cv t( )

d h t( ) = g c & 
2 
− −  h t( )
( )  h t 
a t  = &&( )  = 
dt

2 
h ( ) = 1,  &  v ( )0  = h&  0  = 0

( ) 
0 
(ball3quadratic_your_kerberos_name.m)  with 
c = 0.5 
Write  an  m-file 
to 
numerically  (without  integrating  the  equation  of motion)  simulate  the  trajectory  of  the  ball  until 
ball hits on the ground three times. Plot the trajectory of the ball  h t( )   in time. 

Problem 3.4 :  Calculate  a  more  accurate  trajectory  of  the  ball  with  a  given  spatial 
resolution (Bonus, very difficult) 
Go  back  to  Problem  3.1.  The  result  shows  ball  bounces  when  it  is  not  exactly  at  the  ground 
(either  above  or  below)  due  to  the  finite  precision  of  our  numerical  simulation. We will  look  to 
how  to get a better  simulation  for  the motion of  the ball. We  can  take  smaller  time  step  size  Δt
and  that  will  definitely  produce  accurate  trajectory  (try).  However,  it  requires  much  more 
computation  to  do  simulation with  smaller  Δt .  Therefore, we  introduce  adaptive  time  step  size 
especially 
in 
the 
region 
close 
to 
the 
ground.  Write 
an  m-file 
(ball3spatial_your_kerberos_name.m)  to  simulate  the  motion  of  the  ball  that 
satisfies  h t(
)b
< 0.01  where  tb : is the time when  the ball bounces. (Hint:  What we meant by

Cite as: Peter So, course materials for 2.003J / 1.053J Dynamics and Control I, Fall 2007. MIT OpenCourseWare 
(http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 

adapative  time  step  size  is  the  following.  Modify  the  algorithm  when  the  ball  bounces.  If  you 
h t(  b ) 
< 0.01  is  not  satisfied,  take  the  ball  back  one 
find  that  the  ball  goes  below  ground  and 

1 
time  step  and  then  reinitiate  Euler  procedure  with  a  smaller  time  interval  (say  Δt ).  Then  try 
2 
again in that region. Repeat this procedure until you can satisfy the criterion. Discuss it with TA) 

Cite as: Peter So, course materials for 2.003J / 1.053J Dynamics and Control I, Fall 2007. MIT OpenCourseWare 
(http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 

