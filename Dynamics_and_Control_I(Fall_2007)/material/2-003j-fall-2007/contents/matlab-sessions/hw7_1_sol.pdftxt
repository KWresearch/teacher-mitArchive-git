Massachusetts Institute of Technology  

Department of Mechanical Engineering  


2.003J/1.053J Dynamics & Control I 

Fall 2007 
Homework 7 Solution 

Problem 7.1 :  Derivation of the equation of the motion for a rolling half-disk 
i) 

r 

cx 

1b 

CM 

cy 

B 

2b 

a2 

A 

1a

O 

θ 

X A 

 

Rolling half-disk has only one degree of freedom with the constraint of 
Generalized coordinate  q1  is the rotation angle of half-disk ( q1  =θ ). 

Frame A is attached to the ground, and frame B is attached to the center of disk, O. 

For kinetic energy of rolling half-disk,  

1 m 
1 I  ω2  = 
1 mv 2  + 
CM 
2  CM 
2 
2 

1
ICM q1
2
2 

v  = rθ . 
A O

T  = 

vCM

2  + 

To  obtain  the  speed  of  half-disk  at  the  center  of mass with  respect  to  frame A, 

v 
A  CM

, 

the  linear  velocity  for  rolling  half-disk  at  the  center  of  mass  with  respect  to  frame  A, 
A  CMv 
should be calculated first. 

Cite as: Peter So, course materials for 2.003J / 1.053J Dynamics and Control I, Fall 2007. MIT OpenCourseWare 
(http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 

v	
A CM 

A CMv 

2

=  v  + ω × rOCM

A
B
A 
O
(  r b )

= −rq a + q b 
1 1   1 3 × − 
2 
= −rq a + rq  b
1 1  
1 1  
So, the speed of half-disk at the center of mass with respect to frame A is 
2 
= −rq a + rq b
1 1  
1 1 
, since 
= r q 1  + r q1  − 2rrq 1  cos
q1

 
2
 
2
2
2
2
In addition, the moment of inertia around the center of mass is 

1 mr 2 
IO  = ICM  + mr 2  = 
2 
1 mr 2  − mr 2 
2


a b 
1 ⋅  1 = cos q1

I CM	 = 

 

 

 

 

 
 

Therefore,


T  = 

1 
1 ⎛ 1
2  ⎞  2
q1 ) +
( 
1  + r q1  − 2rrq1  cos
q1 
m r q 
mr  − mr  ⎟
 
2
 
2
 
2
2
2
2 
2 ⎜
2 
⎝ 2 
⎠
⎛ 3 2 
⎞  1 
⎛ 3 2
1 
⎞  2
=  m ⎜  r q 1  − 2rrq 1  cos q1 ⎟ =  m ⎜  r  − 2rr cos q1 ⎟ q1
 
2
 
2
2 
⎝ 2 
⎠  2 
⎝ 2 
⎠ 
For the potential energy of rolling half-disk, 
V mg y  = mg  P 
(  CM  ⋅ a2 ) 
= 
c 

where  A PCM is the position of center of mass 

A PCM	 can be calculated as below: 

A

P	
CM 

=  P  + P 
A
O
OCM 

= ( X a  + r a )
A 1
2 

+ −  b )
(  r
2 

Therefore, 
( X a  + r a ) ⋅ a + − r b ) ⋅ a ) , since 
V mg (	
(
=
A  1
2 
2 
2 
2 
= mg ( r − r cos q1 )

From Lagrangian,


a b
2  ⋅  2  = cos q1 

d  ⎛ ∂L ⎞ ∂L
L T 
≡ − V  : 
− 
⎝ ∂q ⎟
dt ⎜
∂q 
⎠
where  L :  Lagrangian,  T  :  kinetic  energy,  V  :  potential  energy,  and  q :  generalized 
coordinate 

= 0

Cite as: Peter So, course materials for 2.003J / 1.053J Dynamics and Control I, Fall 2007. MIT OpenCourseWare 
(http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 

cos

q1 

r cos q1 )
− 

, since  q1  =θ 

L = 

1
3 
⎛
⎞
2  − mg ( r
   
r 2  −  rr 
m 
q1
2
⎜
⎟
⎝ 2 
2 
⎠
1
3
⎛
⎞
  

θ2  − mg ( r − r cosθ)
r 2  −  rr  θ⎟
=  m ⎜ 
2
cos
2 
2 
⎝ 
⎠
∂L  = m ⎜
∂L  =
⎛ 3 r 2  − 2
∂θ 
∂q1 
⎝ 2 

⎞  

rr  θ θ 
 ⎟
cos
⎠ 
∂L ⎞
∂L  ⎞
d  ⎛
d  ⎛
3 r 2  − 2
⎟ = m ⎛
⎟ = 
⎜ 
⎜ 
⎜ 
dt ⎝ ∂q1  ⎠  dt ⎝ ∂θ ⎠
⎝ 2 
∂L  = rrmθ 2  sinθ− mgr sinθ

∂L  =
∂q1 
∂θ


rr  θ⎞
⎟θ + 2mrrθ 2  sinθ
cos
⎠


d  ⎛ ∂L  ⎞
∂L 
⎟ − 
⎜
dt ⎝ ∂q1  ⎠ ∂q1 

= 0 :

⎛ 3 
⎞

r 2  − 2rr cosθ θ + rrθ 2  sinθ+ gr sinθ= 0
 
⎜ 2 
⎟ 
⎝
⎠

ii) 

iii) 

For small  θ,  sinθ≈θ  &  cosθ≈ 1 
In addition, the product of  θ  and higher order derivatives such as  θ,θ  goes to zero: 
θ 2  ≈ 0 
Therefore, the linearized equation of motion for rolling half-disk, 
⎛ 3 r 2  − 2rr ⎞θ + grθ= 0
⎜
⎟
⎝ 2 
⎠ 

Homogenous solution can be obtained as follows: 
⎞ d 2θ 
⎛ 3 2 
⎜  r  − 2rr ⎟ 
2  + grθ= 0 
⎠ dt

⎝ 2 
Assume that  θ( t ) = e  , 
at 
3 r 2  − 2rr 
⎛
⎜ 
⎝ 2 

d 2θ  2  at 
2  = a e  = a θ
2

dt 
⎞
⎟ aθ+ grθ= 0

⎠


a = ±i 

gr

⎛ 3 
⎞ 
⎜  r 2  − 2rr ⎟

⎝ 2 
⎠


 

Therefore, 

Cite as: Peter So, course materials for 2.003J / 1.053J Dynamics and Control I, Fall 2007. MIT OpenCourseWare 
(http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 

⎞ 
⎛ 
⎞
⎛	
⎟ 
⎜ 
⎟
⎜ 
gr 
gr 
θ( )t  = A cos ⎜ 
t ⎟ + B sin ⎜ 
t ⎟ 
⎛ 3 r 2  − 2rr ⎞ ⎟ 
⎛ 3 r 2  − 2rr ⎞ ⎟ 
⎜
⎜
⎟ ⎟
⎟ ⎟
⎜ 
⎜ 
⎜
⎜
⎝ 2 
⎝ 2 
⎠ ⎠ 
⎠ ⎠ 
⎝
⎝


For the given initial conditions  θ( 0 ) =θ θ  0
,  (  ) =θ ,
0 
0
θ 
0

gr

⎛ 3 2 
⎞ 
r  − 2rr ⎟
⎜ 2 
⎝
⎠ 

A =θ0 &  B =

Therefore, the solution for the linearized equation of the motion is 

⎛
⎜ 
θ( )t  =θ0  cos ⎜
⎜
⎜
⎝

⎞	
⎟
gr 
t ⎟
+ 
⎛ 3 2 
⎞ ⎟ 
⎜  r  − 2rr ⎟ ⎟
⎝ 2 
⎠ ⎠	

⎛
⎜ 
sin ⎜
⎜
⎜ 
⎝

⎞ 
⎟ 
gr 
t ⎟
3 r 2  − 2rr ⎞
⎟
⎛
⎟ 
⎜ 
⎟
⎝ 2 
⎠ ⎠ 

θ 
0 
gr 
⎛ 3 r 2  − 2rr ⎟
⎞ 
⎜
⎝ 2 
⎠ 

Problem 7.2 :  Generate simulation codes for motion for rolling half-disk 
i)  The  same  method  used  in  the  homework  #6  is  used:  Runge-Kutta.  Most  procedures  are 
identical  to  the  one used  in  homework #6.  Following  is  the m-code  for  the  simulation  of 
rolling half-disk. 
function [T,Y]=RockerRK(theta0) 
% Solver for rolling half-disk 
% with Runge-Kutta method 
% Input argument: Initial conditions 
% Output arguement: time and angle matrix 

% Define some constants 
r=1; 
% radius of disk = 1m 
rc=4*r/(3*pi);  % center of gravity 
% Solve equation of motion with Runge-Kutta method 
% theta0: initial conditions 
% time: 0 to 10 second 

Cite as: Peter So, course materials for 2.003J / 1.053J Dynamics and Control I, Fall 2007. MIT OpenCourseWare 
(http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 

[T,Y]=ode45(@(t,theta) Rocker(t,theta,r,rc),[0 10],theta0); 
% extract only angle matrix 
Y=Y(:,1); 
end 

function dTHETA=Rocker(t,theta,r,rc) 
% descrive equation of motion for rolling half-disk 

g=9.81;         % gravity 
% angular velocity 
dTHETA(1,1)=theta(2); 
% angular acceleration 
dTHETA(2,1)=-(r*rc*theta(2)^2+g*rc)*sin(theta(1))/(3/2*r^2-
2*rc*r*cos(theta(1))); 
end 

ii)  The  analytic  solution  you  obtained  in  P7.1  iv)  is  used  to  find  the  trajectory  of  rotation 
angle of  rolling half-disk. First, you make  time vector which have numbers  from 0  to 10 
with  enough  step  to  describe  motion  well  (I  chose  0.01  sec.)  Then,  some  constants  are 
given, and calculate solution with respect to time matrix. Matrix operation should be used. 
The following is m-code for calculating the analytical solution for rolling half-disk. 
function [T,Y]=RockerAN(theta0) 
% Solver for rolling half-disk 
% with analytic solution 
% Input argument: Initial conditions 
% Output arguement: time and angle matrix 

% define some constants 
g=9.81;         % gravity 
r=1; 
% radius of disk 
rc=4*r/(3*pi);  % center of gravity 

% coefficients for analytic solution 
Omega=sqrt((g*rc)/(3/2*r^2-2*r*rc)); 
A=theta0(1); 

% natural frequency 

Cite as: Peter So, course materials for 2.003J / 1.053J Dynamics and Control I, Fall 2007. MIT OpenCourseWare 
(http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 

B=theta0(2)/Omega; 

% define time series with time step of 0.01 
T=[0:0.01:10]'; 
% calculate rotation angle at a given time 
Y=A*cos(Omega*T)+B.*sin(Omega*T); 
End 

Problem 7.3 :  Trajectory of  θ ( )t 

for both small and large angle oscillations 

i)  As expected, the results with Runge-Kutta method and analytic approach are pretty close. 

The  linearization works  for  small  angle  rotation  very well. Note  that  the  unit  of  angle  is 

radian, not degree, when you give  the  initial conditions  to  function you made. Triangular 

function  in MATLAB  such  as  sin,  cos,  and  tan  accept  for  only  radian.  The  following  codes 

describe  how  to  generate  the  below  plot  where  the  result  with  different  simulation 

methods are compared. 
>> [T1,Y1]=RockerRK([5*pi/180,0]); 

>> [T2,Y2]=RockerAN([5*pi/180,0]); 

>> plot(T1,Y1,'r-',T2,Y2,'b--');

>> grid on; axis tight;  

>> xlabel('\bfTime (Sec)'); ylabel('\bfAngle (rad)'); 

>> title('\bfSmall angle motion with different simulation methods');

>> legend('\bfRunge-Kutta','\bfAnalytic'); 


Sma l l  angle  motion w ith diffe rent simula tion me thods 

Runge -Kutta 
Ana lytic 

 
)
d
a
r
(
 
e
l
g
n
A

0.08 

0.06 

0.04 

0.02 

0 

-0.02 

-0.04 

-0.06 

-0.08 

0

1

2 

3

4 

5
Time  (Se c) 

6

7 

8

9

10 

Cite as: Peter So, course materials for 2.003J / 1.053J Dynamics and Control I, Fall 2007. MIT OpenCourseWare 
(http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 

ii)  For  the  case  of  large  angle  rotation  of  half-disk,  the  linearized  rotation  motion  is  quite 

different  from numerical  simulation of nonlinear  rotation motion. Rotation obtained with 

nonlinear  equation  is  a  little  slower  than  the one with  the  linear  equation  since nonlinear 

terms in the differential equation is dominant when the rotation angle becomes larger. The 

following  codes  describe  how  to  generate  the  below  plot  where  the  result  with  different 

simulation methods are compared. 
>> [T1,Y1]=RockerRK([30*pi/180,0]); 

>> [T2,Y2]=RockerAN([30*pi/180,0]); 

>> plot(T1,Y1,'r-',T2,Y2,'b--');

>> grid on; axis tight;  

>> xlabel('\bfTime (Sec)'); ylabel('\bfAngle (rad)'); 

>> title('\bfLarge angle motion with different simulation methods');

>> legend('\bfRunge-Kutta','\bfAnalytic'); 


 
)
d
a
r
(
 
e
l
g
n
A

0.5 

0.4 

0.3 

0.2 

0.1 

0 

-0.1 

-0.2 

-0.3 

-0.4 

-0.5 
0

La rge  angle  motion w ith diffe rent simula tion me thods 

Runge -Kutta 
Ana lytic 

1

2 

3

4 

5
Time  (Se c) 

6

7 

8

9

10 

Cite as: Peter So, course materials for 2.003J / 1.053J Dynamics and Control I, Fall 2007. MIT OpenCourseWare 
(http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 

