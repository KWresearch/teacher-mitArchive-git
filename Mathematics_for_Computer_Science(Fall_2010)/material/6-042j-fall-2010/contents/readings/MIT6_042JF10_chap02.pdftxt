“mcs-ftl” — 2010/9/8 — 0:40 — page 23 — #29

2

Patterns of Proof

2.1 The Axiomatic Method

The standard procedure for establishing truth in mathematics was invented by Eu-
clid, a mathematician working in Alexandria, Egypt around 300 BC. His idea was
to begin with ﬁve assumptions about geometry, which seemed undeniable based on
direct experience. For example, one of the assumptions was “There is a straight
line segment between every pair of points.” Propositions like these that are simply
accepted as true are called axioms.
Starting from these axioms, Euclid established the truth of many additional propo-
sitions by providing “proofs”. A proof is a sequence of logical deductions from
axioms and previously-proved statements that concludes with the proposition in
question. You probably wrote many proofs in high school geometry class, and
you’ll see a lot more in this course.
There are several common terms for a proposition that has been proved. The
different terms hint at the role of the proposition within a larger body of work.
(cid:15) Important propositions are called theorems.
(cid:15) A lemma is a preliminary proposition useful for proving later propositions.
(cid:15) A corollary is a proposition that follows in just a few logical steps from a
lemma or a theorem.

The deﬁnitions are not precise. In fact, sometimes a good lemma turns out to be far
more important than the theorem it was originally used to prove.
Euclid’s axiom-and-proof approach, now called the axiomatic method, is the
foundation for mathematics today. In fact, just a handful of axioms, collectively
called Zermelo-Frankel Set Theory with Choice (ZFC), together with a few logical
deduction rules, appear to be sufﬁcient to derive essentially all of mathematics.

2.1.1 Our Axioms
The ZFC axioms are important in studying and justifying the foundations of math-
ematics, but for practical purposes, they are much too primitive. Proving theorems
in ZFC is a little like writing programs in byte code instead of a full-ﬂedged pro-
gramming language—by one reckoning, a formal proof in ZFC that 2 C 2 D 4
requires more than 20,000 steps! So instead of starting with ZFC, we’re going to

1“mcs-ftl” — 2010/9/8 — 0:40 — page 24 — #30

Chapter 2 Patterns of Proof

take a huge set of axioms as our foundation: we’ll accept all familiar facts from
high school math!
This will give us a quick launch, but you may ﬁnd this imprecise speciﬁcation of
the axioms troubling at times. For example, in the midst of a proof, you may ﬁnd
yourself wondering, “Must I prove this little fact or can I take it as an axiom?” Feel
free to ask for guidance, but really there is no absolute answer. Just be up front
about what you’re assuming, and don’t try to evade homework and exam problems
by declaring everything an axiom!

2.1.2 Logical Deductions
Logical deductions or inference rules are used to prove new propositions using
previously proved ones.
A fundamental inference rule is modus ponens. This rule says that a proof of P
together with a proof that P IM P L I E S Q is a proof of Q.
Inference rules are sometimes written in a funny notation. For example, modus
ponens is written:

Rule 2.1.1.

P ; P IM P L I E S Q
Q

When the statements above the line, called the antecedents, are proved, then we
can consider the statement below the line, called the conclusion or consequent, to
also be proved.
A key requirement of an inference rule is that it must be sound: any assignment
of truth values that makes all the antecedents true must also make the consequent
true. So if we start off with true axioms and apply sound inference rules, everything
we prove will also be true.
You can see why modus ponens is a sound inference rule by checking the truth
table of P IM P L I E S Q. There is only one case where P and P IM P L I E S Q are
both true, and in that case Q is also true.
P Q P (cid:0)! Q
T
F F
F T
T
F
T F
T T
T

There are many other natural, sound inference rules, for example:

2“mcs-ftl” — 2010/9/8 — 0:40 — page 25 — #31

2.1. The Axiomatic Method

Rule 2.1.2.

Rule 2.1.3.

Rule 2.1.4.

On the other hand,

Non-Rule.

P IM P L I E S Q; Q IM P L I E S R
P IM P L I E S R

P IM P L I E S Q;
NOT.P /

NOT.Q/

NOT.P / IM P L I E S NOT.Q/
Q IM P L I E S P

NOT.P / IM P L I E S NOT.Q/
P IM P L I E S Q

is not sound: if P is assigned T and Q is assigned F, then the antecedent is true
and the consequent is not.
Note that a propositional inference rule is sound precisely when the conjunction
(AND) of all its antecedents implies its consequent.
As with axioms, we will not be too formal about the set of legal inference rules.
Each step in a proof should be clear and “logical”; in particular, you should state
what previously proved facts are used to derive each new conclusion.

2.1.3 Proof Templates
In principle, a proof can be any sequence of logical deductions from axioms and
previously proved statements that concludes with the proposition in question. This
freedom in constructing a proof can seem overwhelming at ﬁrst. How do you even
start a proof?
Here’s the good news: many proofs follow one of a handful of standard tem-
plates. Each proof has it own details, of course, but these templates at least provide
you with an outline to ﬁll in. In the remainder of this chapter, we’ll go through
several of these standard patterns, pointing out the basic idea and common pitfalls
and giving some examples. Many of these templates ﬁt together; one may give you
a top-level outline while others help you at the next level of detail. And we’ll show
you other, more sophisticated proof techniques in Chapter 3.
The recipes that follow are very speciﬁc at times, telling you exactly which words
to write down on your piece of paper. You’re certainly free to say things your own
way instead; we’re just giving you something you could say so that you’re never at
a complete loss.

3“mcs-ftl” — 2010/9/8 — 0:40 — page 26 — #32

Chapter 2 Patterns of Proof

2.2 Proof by Cases

Breaking a complicated proof into cases and proving each case separately is a use-
ful and common proof strategy. In fact, we have already implicitly used this strategy
when we used truth tables to show that certain propositions were true or valid. For
example, in section 1.1.5, we showed that an implication P IM P L I E S Q is equiv-
alent to its contrapositive NOT.Q/ IM P L I E S NOT.P / by considering all 4 possible
assignments of T or F to P and Q. In each of the four cases, we showed that
P IM P L I E S Q is true if and only if NOT.Q/ IM P L I E S NOT.P / is true. For exam-
ple, if P D T and Q D F, then both P IM P L I E S Q and NOT.Q/ IM P L I E S NOT.P /
are false, thereby establishing that .P IM P L I E S Q/ I FF .NOT.Q/ IM P L I E S NOT.P //
is true for this case. If a proposition is true in every possible case, then it is true.
Proof by cases works in much more general environments than propositions in-
volving Boolean variables. In what follows, we will use this approach to prove a
simple fact about acquaintances. As background, we will assume that for any pair
of people, either they have met or not. If every pair of people in a group has met,
we’ll call the group a club. If every pair of people in a group has not met, we’ll call
it a group of strangers.

Theorem. Every collection of 6 people includes a club of 3 people or a group of 3
strangers.

Proof. The proof is by case analysis1 . Let x denote one of the six people. There
are two cases:

1. Among the other 5 people besides x , at least 3 have met x .

2. Among the other 5 people, at least 3 have not met x .

Now we have to be sure that at least one of these two cases must hold,2 but that’s
easy: we’ve split the 5 people into two groups, those who have shaken hands with
x and those who have not, so one of the groups must have at least half the people.
Case 1: Suppose that at least 3 people have met x .
This case splits into two subcases:

1Describing your approach at the outset helps orient the reader. Try to remember to always do
this.
2Part of a case analysis argument is showing that you’ve covered all the cases. Often this is
obvious, because the two cases are of the form “P ” and “not P ”. However, the situation above is not
stated quite so simply.

4“mcs-ftl” — 2010/9/8 — 0:40 — page 27 — #33

2.3. Proving an Implication

Case 1.1: Among the people who have met x , none have met each
other. Then the people who have met x are a group of at least 3
strangers. So the Theorem holds in this subcase.
Case 1.2: Among the people who have met x , some pair have met
each other. Then that pair, together with x , form a club of 3 people.
So the Theorem holds in this subcase.

This implies that the Theorem holds in Case 1.
Case 2: Suppose that at least 3 people have not met x .
This case also splits into two subcases:

Case 2.1: Among the people who have not met x , every pair has met
each other. Then the people who have not met x are a club of at least
3 people. So the Theorem holds in this subcase.
Case 2.2: Among the people who have not met x , some pair have not
met each other. Then that pair, together with x , form a group of at least
3 strangers. So the Theorem holds in this subcase.

This implies that the Theorem also holds in Case 2, and therefore holds in all cases.
(cid:4)

2.3 Proving an Implication

Propositions of the form “If P , then Q” are called implications. This implication
is often rephrased as “P IM P L I E S Q” or “P (cid:0)! Q”.
Here are some examples of implications:
(cid:15) (Quadratic Formula) If ax 2 C bx C c D 0 and a ¤ 0, then
x D (cid:0)b ˙ p
b 2 (cid:0) 4ac
:
2a
(cid:15) (Goldbach’s Conjecture) If n is an even integer greater than 2, then n is a
sum of two primes.
(cid:15) If 0  x  2, then (cid:0)x 3 C 4x C 1 > 0.
There are a couple of standard methods for proving an implication.

5“mcs-ftl” — 2010/9/8 — 0:40 — page 28 — #34

Chapter 2 Patterns of Proof

2.3.1 Method #1: Assume P is true
When proving P IM P L I E S Q, there are two cases to consider: P is true and P is
false. The case when P is false is easy since, by deﬁnition, F IM P L I E S Q is true
no matter what Q is. This case is so easy that we usually just forget about it and
start right off by assuming that P is true when proving an implication, since this is
the only case that is interesting. Hence, in order to prove that P IM P L I E S Q:

1. Write, “Assume P .”

2. Show that Q logically follows.

For example, we will use this method to prove
Theorem 2.3.1. If 0  x  2, then (cid:0)x 3 C 4x C 1 > 0.
Before we write a proof of this theorem, we have to do some scratchwork to
ﬁgure out why it is true.
The inequality certainly holds for x D 0; then the left side is equal to 1 and
1 > 0. As x grows, the 4x term (which is positive) initially seems to have greater
magnitude than (cid:0)x 3 (which is negative). For example, when x D 1, we have
4x D 4, but (cid:0)x 3 D (cid:0)1. In fact, it looks like (cid:0)x 3 doesn’t begin to dominate 4x
until x > 2. So it seems the (cid:0)x 3 C 4x part should be nonnegative for all x between
0 and 2, which would imply that (cid:0)x 3 C 4x C 1 is positive.
So far, so good. But we still have to replace all those “seems like” phrases with
solid, logical arguments. We can get a better handle on the critical (cid:0)x 3 C 4x part
by factoring it, which is not too hard:
(cid:0)x 3 C 4x D x .2 (cid:0) x /.2 C x /

Aha! For x between 0 and 2, all of the terms on the right side are nonnegative. And
a product of nonnegative terms is also nonnegative. Let’s organize this blizzard of
observations into a clean proof.
Proof. Assume 0  x  2. Then x , 2(cid:0) x , and 2C x are all nonnegative. Therefore,
the product of these terms is also nonnegative. Adding 1 to this product gives a
positive number, so:
x .2 (cid:0) x /.2 C x / C 1 > 0
Multiplying out on the left side proves that
(cid:0)x 3 C 4x C 1 > 0

as claimed.

(cid:4)

6“mcs-ftl” — 2010/9/8 — 0:40 — page 29 — #35

2.3. Proving an Implication

There are a couple points here that apply to all proofs:
(cid:15) You’ll often need to do some scratchwork while you’re trying to ﬁgure out
the logical steps of a proof. Your scratchwork can be as disorganized as you
like—full of dead-ends, strange diagrams, obscene words, whatever. But
keep your scratchwork separate from your ﬁnal proof, which should be clear
and concise.
(cid:15) Proofs typically begin with the word “Proof ” and end with some sort of
doohickey like (cid:3) or (cid:4) or “q.e.d”. The only purpose for these conventions is
to clarify where proofs begin and end.

Potential Pitfall
For the purpose of proving an implication P IM P L I E S Q, it’s OK, and typical, to
begin by assuming P . But when the proof is over, it’s no longer OK to assume that
P holds! For example, Theorem 2.3.1 has the form “if P , then Q” with P being
“0  x  2” and Q being “(cid:0)x 3 C 4x C 1 > 0,” and its proof began by assuming
that 0  x  2. But of course this assumption does not always hold. Indeed, if
you were going to prove another result using the variable x , it could be disastrous
to have a step where you assume that 0  x  2 just because you assumed it as
part of the proof of Theorem 2.3.1.

2.3.2 Method #2: Prove the Contrapositive
We have already seen that an implication “P IM P L I E S Q” is logically equivalent
to its contrapositive

NOT.Q/ IM P L I E S NOT.P /:
Proving one is as good as proving the other, and proving the contrapositive is some-
times easier than proving the original statement. Hence, you can proceed as fol-
lows:

1. Write, “We prove the contrapositive:” and then state the contrapositive.

2. Proceed as in Method #1.

For example, we can use this approach to prove
p
Theorem 2.3.2. If r is irrational, then

r is also irrational.

p
Recall that rational numbers are equal to a ratio of integers and irrational num-
bers are not. So we must show that if r is not a ratio of integers, then
r is also
not a ratio of integers. That’s pretty convoluted! We can eliminate both not’s and
make the proof straightforward by considering the contrapositive instead.

7“mcs-ftl” — 2010/9/8 — 0:40 — page 30 — #36

Chapter 2 Patterns of Proof

p
p
Proof. We prove the contrapositive: if
r is rational, then r is rational.
r is rational. Then there exist integers a and b such that:
Assume that
p
r D a
b

Squaring both sides gives:

r D a2
b 2
Since a2 and b 2 are integers, r is also rational.

(cid:4)

2.4 Proving an “If and Only If ”

Many mathematical theorems assert that two statements are logically equivalent;
that is, one holds if and only if the other does. Here is an example that has been
known for several thousand years:

Two triangles have the same side lengths if and only if two side lengths
and the angle between those sides are the same in each triangle.

The phrase “if and only if ” comes up so often that it is often abbreviated “iff ”.

2.4.1 Method #1: Prove Each Statement Implies the Other
The statement “P I FF Q” is equivalent to the two statements “P IM P L I E S Q” and
“Q IM P L I E S P ”. So you can prove an “iff ” by proving two implications:

1. Write, “We prove P implies Q and vice-versa.”

2. Write, “First, we show P implies Q.” Do this by one of the methods in
Section 2.3.

3. Write, “Now, we show Q implies P .” Again, do this by one of the methods
in Section 2.3.

2.4.2 Method #2: Construct a Chain of I FFs
In order to prove that P is true iff Q is true:

1. Write, “We construct a chain of if-and-only-if implications.”

2. Prove P is equivalent to a second statement which is equivalent to a third
statement and so forth until you reach Q.

8“mcs-ftl” — 2010/9/8 — 0:40 — page 31 — #37

2.4. Proving an “If and Only If ”

This method sometimes requires more ingenuity than the ﬁrst, but the result can be
a short, elegant proof, as we see in the following example.

Theorem 2.4.1. The standard deviation of a sequence of values x1 ; : : : ; xn is zero
iff all the values are equal to the mean.
s
Deﬁnition. The standard deviation of a sequence of values x1 ; x2 ; : : : ; xn is de-
ﬁned to be:
.x1 (cid:0) (cid:22)/2 C .x2 (cid:0) (cid:22)/2 C (cid:1) (cid:1) (cid:1) C .xn (cid:0) (cid:22)/2
n

(2.1)

where (cid:22) is the mean of the values:
(cid:22) WWD x1 C x2 C (cid:1) (cid:1) (cid:1) C xn
n
As an example, Theorem 2.4.1 says that the standard deviation of test scores is
zero if and only if everyone scored exactly the class average. (We will talk a lot
more about means and standard deviations in Part IV of the book.)
Proof. We construct a chain of “iff ” implications, starting with the statement that
s
the standard deviation (2.1) is zero:
.x1 (cid:0) (cid:22)/2 C .x2 (cid:0) (cid:22)/2 C (cid:1) (cid:1) (cid:1) C .xn (cid:0) (cid:22)/2
n

D 0:

(2.2)

Since zero is the only number whose square root is zero, equation (2.2) holds iff
.x1 (cid:0) (cid:22)/2 C .x2 (cid:0) (cid:22)/2 C (cid:1) (cid:1) (cid:1) C .xn (cid:0) (cid:22)/2 D 0:
Squares of real numbers are always nonnegative, and so every term on the left hand
side of equation (2.3) is nonnegative. This means that (2.3) holds iff

(2.3)

Every term on the left hand side of (2.3) is zero.
But a term .xi (cid:0) (cid:22)/2 is zero iff xi D (cid:22), so (2.4) is true iff
Every xi equals the mean.

(2.4)

(cid:4)

9“mcs-ftl” — 2010/9/8 — 0:40 — page 32 — #38

Chapter 2 Patterns of Proof

2.5 Proof by Contradiction

In a proof by contradiction or indirect proof, you show that if a proposition were
false, then some false fact would be true. Since a false fact can’t be true, the propo-
sition had better not be false. That is, the proposition really must be true.
Proof by contradiction is always a viable approach. However, as the name sug-
gests, indirect proofs can be a little convoluted. So direct proofs are generally
preferable as a matter of clarity.
Method: In order to prove a proposition P by contradiction:

1. Write, “We use proof by contradiction.”

2. Write, “Suppose P is false.”

3. Deduce something known to be false (a logical contradiction).

4. Write, “This is a contradiction. Therefore, P must be true.”

p

As an example, we will use proof by contradiction to prove that
2 is irrational.
Recall that a number is rational if it is equal to a ratio of integers. For example,
3:5 D 7=2 and 0:1111 (cid:1) (cid:1) (cid:1) D 1=9 are rational numbers.
p
Theorem 2.5.1.
2 is irrational.
p
Proof. We use proof by contradiction. Suppose the claim is false; that is,
2 is
rational. Then we can write
2 as a fraction n=d where n and d are positive
integers. Furthermore, let’s take n and d so that n=d is in lowest terms (that is, so
that there is no number greater than 1 that divides both n and d ).
Squaring both sides gives 2 D n2=d 2 and so 2d 2 D n2 . This implies that n is a
multiple of 2. Therefore n2 must be a multiple of 4. But since 2d 2 D n2 , we know
2d 2 is a multiple of 4 and so d 2 is a multiple of 2. This implies that d is a multiple
of 2.
p
So the numerator and denominator have 2 as a common factor, which contradicts
(cid:4)
the fact that n=d is in lowest terms. So
2 must be irrational.

p

Potential Pitfall
A proof of a proposition P by contradiction is really the same as proving the impli-
cation T IM P L I E S P by contrapositive. Indeed, the contrapositive of T IM P L I E S P
is NOT.P / IM P L I E S F. As we saw in Section 2.3.2, such a proof would be begin
by assuming NOT.P / in an effort to derive a falsehood, just as you do in a proof by
contradiction.

10“mcs-ftl” — 2010/9/8 — 0:40 — page 33 — #39

2.6. Proofs about Sets

No matter how you think about it, it is important to remember that when you
start by assuming NOT.P /, you will derive conclusions along the way that are not
necessarily true. (Indeed, the whole point of the method is to derive a falsehood.)
This means that you cannot rely on intermediate results after a proof by contradic-
tion is completed (for example, that n is even after the proof of Theorem 2.5.1).
There was not much risk of that happening in the proof of Theorem 2.5.1, but when
you are doing more complicated proofs that build up from several lemmas, some of
which utilize a proof by contradiction, it will be important to keep track of which
propositions only follow from a (false) assumption in a proof by contradiction.

2.6 Proofs about Sets

Sets are simple, ﬂexible, and everywhere. You will ﬁnd some set mentioned in
nearly every section of this text. In fact, we have already talked about a lot of sets:
the set of integers, the set of real numbers, and the set of positive even numbers, to
name a few.
In this section, we’ll see how to prove basic facts about sets. We’ll start with
some deﬁnitions just to make sure that you know the terminology and that you are
comfortable working with sets.

2.6.1 Deﬁnitions
Informally, a set is a bunch of objects, which are called the elements of the set.
The elements of a set can be just about anything: numbers, points in space, or even
other sets. The conventional way to write down a set is to list the elements inside
curly-braces. For example, here are some sets:
A D fAlex; Tippy; Shells; Shadowg dead pets
B D fred; blue; yellowg
primary colors
C D ffa; b g; fa; c g; fb; c gg
a set of sets
This works ﬁne for small ﬁnite sets. Other sets might be deﬁned by indicating how
to generate a list of them:
D D f1; 2 ; 4 ; 8; 16; : : : g
the powers of 2
The order of elements is not signiﬁcant, so fx ; y g and fy ; x g are the same set
written two different ways. Also, any object is, or is not, an element of a given

11“mcs-ftl” — 2010/9/8 — 0:40 — page 34 — #40

Chapter 2 Patterns of Proof

set—there is no notion of an element appearing more than once in a set.3 So writ-
ing fx ; x g is just indicating the same thing twice, namely, that x is in the set. In
particular, fx ; x g D fx g.
The expression e 2 S asserts that e is an element of set S . For example, 32 2 D
and blue 2 B , but Tailspin 62 A—yet.
Some Popular Sets
Mathematicians have devised special symbols to represent some common sets.

elements
set
symbol
;
none
the empty set
f0; 1; 2 ; 3; : : :g
N
nonnegative integers
f: : : ; (cid:0)3; (cid:0)2 ; (cid:0)1; 0; 1; 2 ; 3; : : :g
Z
integers
2 ; (cid:0) 5
p
Q
rational numbers
3 ; 16; etc.
1
(cid:25); e ; (cid:0)9;
p
R
2; etc.
real numbers
2 (cid:0) 2 i ; etc.
C
complex numbers
i ; 19
2 ;
A superscript “C ” restricts a set to its positive elements; for example, RC denotes
the set of positive real numbers. Similarly, R(cid:0) denotes the set of negative reals.
Comparing and Combining Sets
The expression S  T indicates that set S is a subset of set T , which means that
every element of S is also an element of T (it could be that S D T ). For example,
N  Z and Q  R (every rational number is a real number), but C 6 Z (not every
complex number is an integer).
As a memory trick, notice that the  points to the smaller set, just like a  sign
points to the smaller number. Actually, this connection goes a little further: there
is a symbol (cid:26) analogous to <. Thus, S (cid:26) T means that S is a subset of T , but the
two are not equal. So A  A, but A 6(cid:26) A, for every set A.
There are several ways to combine sets. Let’s deﬁne a couple of sets for use in
examples:

X WWD f1; 2 ; 3g
Y WWD f2 ; 3; 4g
(cid:15) The union of sets X and Y (denoted X [ Y ) contains all elements appearing
in X or Y or both. Thus, X [ Y D f1; 2 ; 3; 4g.
3 It’s not hard to develop a notion of multisets in which elements can occur more than once, but
multisets are not ordinary sets.

12“mcs-ftl” — 2010/9/8 — 0:40 — page 35 — #41

2.6. Proofs about Sets
(cid:15) The intersection of X and Y (denoted X \ Y ) consists of all elements that
appear in both X and Y . So X \ Y D f2 ; 3g.
(cid:15) The set difference of X and Y (denoted X (cid:0) Y ) consists of all elements that
are in X , but not in Y . Therefore, X (cid:0) Y D f1g and Y (cid:0) X D f4g.

The Complement of a Set
Sometimes we are focused on a particular domain, D . Then for any subset, A, of
D , we deﬁne A to be the set of all elements of D not in A. That is, A WWD D (cid:0) A.
The set A is called the complement of A.
For example, when the domain we’re working with is the real numbers, the com-
plement of the positive real numbers is the set of negative real numbers together
with zero. That is,
RC D R(cid:0) [ f0g:
It can be helpful to rephrase properties of sets using complements. For example,
two sets, A and B , are said to be disjoint iff they have no elements in common, that
is, A \ B D ;. This is the same as saying that A is a subset of the complement of
B , that is, A  B .
Cardinality
The cardinality of a set A is the number of elements in A and is denoted by jAj.
For example,

j;j D 0;
jf1; 2 ; 4gj D 3, and
jNj is inﬁnite.

The Power Set
The set of all the subsets of a set, A, is called the power set, P .A/, of A. So
B 2 P .A/ iff B  A. For example, the elements of P .f1; 2g/ are ;; f1g; f2g and
f1; 2g.
More generally, if A has n elements, then there are 2n sets in P .A/. In other
jAj . For this reason, some authors use the
words, if A is ﬁnite, then jP .A/j D 2
notation 2A instead of P .A/ to denote the power set of A.
Sequences
Sets provide one way to group a collection of objects. Another way is in a se-
quence, which is a list of objects called terms or components. Short sequences

13“mcs-ftl” — 2010/9/8 — 0:40 — page 36 — #42

Chapter 2 Patterns of Proof

are commonly described by listing the elements between parentheses; for example,
.a; b; c / is a sequence with three terms.
While both sets and sequences perform a gathering role, there are several differ-
ences.
(cid:15) The elements of a set are required to be distinct, but terms in a sequence can
be the same. Thus, .a; b; a/ is a valid sequence of length three, but fa; b; ag
is a set with two elements—not three.
(cid:15) The terms in a sequence have a speciﬁed order, but the elements of a set do
not. For example, .a; b; c / and .a; c ; b / are different sequences, but fa; b; c g
and fa; c ; b g are the same set.
(cid:15) Texts differ on notation for the empty sequence; we use (cid:21) for the empty
sequence and ; for the empty set.
Cross Products
The product operation is one link between sets and sequences. A product of sets,
S1 (cid:2) S2 (cid:2) (cid:1) (cid:1) (cid:1)(cid:2) Sn , is a new set consisting of all sequences where the ﬁrst component
is drawn from S1 , the second from S2 , and so forth. For example, N (cid:2) fa; b g is
the set of all pairs whose ﬁrst element is a nonnegative integer and whose second
element is an a or a b :
N (cid:2) fa; b g D f.0; a/; .0; b /; .1; a/; .1; b /; .2 ; a/; .2 ; b /; : : : g
A product of n copies of a set S is denoted S n . For example, f0; 1g3 is the set of
all 3-bit sequences:
f0; 1g3 D f.0; 0; 0/; .0; 0; 1/; .0; 1; 0/; .0; 1; 1/; .1; 0; 0/; .1; 0; 1/; .1; 1; 0/; .1; 1; 1/g
2.6.2 Set Builder Notation
An important use of predicates is in set builder notation. We’ll often want to talk
about sets that cannot be described very well by listing the elements explicitly or
by taking unions, intersections, etc., of easily-described sets. Set builder notation
often comes to the rescue. The idea is to deﬁne a set using a predicate; in particular,
the set consists of all values that make the predicate true. Here are some examples
of set builder notation:
A WWD fn 2 N j n is a prime and n D 4k C 1 for some integer k g
B WWD fx 2 R j x 3 (cid:0) 3x C 1 > 0g
C WWD fa C b i 2 C j a2 C 2b 2  1g
The set A consists of all nonnegative integers n for which the predicate

14“mcs-ftl” — 2010/9/8 — 0:40 — page 37 — #43

2.6. Proofs about Sets
“n is a prime and n D 4k C 1 for some integer k ”
is true. Thus, the smallest elements of A are:

5; 13; 17; 29; 37; 41; 53; 57; 61; 73; : : : :
Trying to indicate the set A by listing these ﬁrst few elements wouldn’t work very
well; even after ten terms, the pattern is not obvious! Similarly, the set B consists
of all real numbers x for which the predicate
x 3 (cid:0) 3x C 1 > 0
is true. In this case, an explicit description of the set B in terms of intervals would
require solving a cubic equation. Finally, set C consists of all complex numbers
a C b i such that:
a2 C 2b 2  1
This is an oval-shaped region around the origin in the complex plane.

2.6.3 Proving Set Equalities
Two sets are deﬁned to be equal if they contain the same elements. That is, X D Y
means that z 2 X if and only if z 2 Y , for all elements, z . (This is actually the ﬁrst
of the ZFC axioms.) So set equalities can often be formulated and proved as “iff ”
theorems. For example:
Theorem 2.6.1 (Distributive Law for Sets). Let A, B , and C be sets. Then:
A \ .B [ C / D .A \ B / [ .A \ C /
Proof. The equality (2.5) is equivalent to the assertion that
z 2 A \ .B [ C /
z 2 .A \ B / [ .A \ C /
(2.6)
iff
for all z . This assertion looks very similar to the Distributive Law for AND and
OR that we proved in Section 1.4 (equation 1.6). Namely, if P , Q, and R are
propositions, then

(2.5)

(2.7)

ŒP AND .Q OR R/ I FF Œ.P AND Q/ OR .P AND R/
Using this fact, we can now prove (2.6) by a chain of iff ’s:
z 2 A \ .B [ C /
.z 2 A/ AND .z 2 B [ C /
iff
.z 2 A/ AND .z 2 B OR z 2 C /
iff
.z 2 A AND z 2 B / OR .z 2 A AND z 2 C /
iff
.z 2 A \ B / OR .z 2 A \ C /
iff
z 2 .A \ B / [ .A \ C /
iff

(def of \)
(def of [)
(equation 2.7)
(def of \)
(def of [) (cid:4)

15“mcs-ftl” — 2010/9/8 — 0:40 — page 38 — #44

Chapter 2 Patterns of Proof

Many other set equalities can be derived from other valid propositions and proved
in an analogous manner. In particular, propositions such as P , Q and R are re-
placed with sets such as A, B , and C , AND (^) is replaced with intersection (\),
OR (_) is replaced with union ([), NOT is replaced with complement (for example,
P would become A), and I FF becomes set equality (D). Of course, you should
always check that any alleged set equality derived in this manner is indeed true.

2.6.4 Russell’s Paradox and the Logic of Sets
Reasoning naively about sets can sometimes be tricky. In fact, one of the earliest at-
tempts to come up with precise axioms for sets by a late nineteenth century logician
named Gotlob Frege was shot down by a three line argument known as Russell’s
Paradox:4 This was an astonishing blow to efforts to provide an axiomatic founda-
tion for mathematics.

Russell’s Paradox
Let S be a variable ranging over all sets, and deﬁne
W WWD fS j S 62 S g:

So by deﬁnition, for any set S ,

S 2 W iff S 62 S :

In particular, we can let S be W , and obtain the contradictory result that
W 2 W iff W 62 W:

A way out of the paradox was clear to Russell and others at the time: it’s unjus-
tiﬁed to assume that W is a set. So the step in the proof where we let S be W has
no justiﬁcation, because S ranges over sets, and W may not be a set. In fact, the
paradox implies that W had better not be a set!
But denying that W is a set means we must reject the very natural axiom that
every mathematically well-deﬁned collection of elements is actually a set. So the
problem faced by Frege, Russell and their colleagues was how to specify which

4Bertrand Russell was a mathematician/logician at Cambridge University at the turn of the Twen-
tieth Century. He reported that when he felt too old to do mathematics, he began to study and write
about philosophy, and when he was no longer smart enough to do philosophy, he began writing about
politics. He was jailed as a conscientious objector during World War I. For his extensive philosophical
and political writing, he won a Nobel Prize for Literature.

16“mcs-ftl” — 2010/9/8 — 0:40 — page 39 — #45

2.6. Proofs about Sets

well-deﬁned collections are sets. Russell and his fellow Cambridge University col-
league Whitehead immediately went to work on this problem. They spent a dozen
years developing a huge new axiom system in an even huger monograph called
Principia Mathematica.
Over time, more efﬁcient axiom systems were developed and today, it is gen-
erally agreed that, using some simple logical deduction rules, essentially all of
mathematics can be derived from the Axioms of Zermelo-Frankel Set Theory with
Choice (ZFC). We are not going to be working with these axioms in this course,
but just in case you are interested, we have included them as a sidebar below.
The ZFC axioms avoid Russell’s Paradox because they imply that no set is ever
a member of itself. Unfortunately, this does not necessarily mean that there are not
other paradoxes lurking around out there, just waiting to be uncovered by future
mathematicians.
ZFC Axioms

Extensionality. Two sets are equal if they have the same members. In formal log-
ical notation, this would be stated as:
.8z : .z 2 x I FF z 2 y // IM P L I E S x D y :
Pairing. For any two sets x and y , there is a set, fx ; y g, with x and y as its only
elements:
8x ; y : 9u: 8z : Œz 2 u I FF .z D x OR z D y /
Union. The union, u, of a collection, z , of sets is also a set:
8z : 9u8x : .9y : x 2 y AND y 2 z / I FF x 2 u:

Inﬁnity. There is an inﬁnite set. Speciﬁcally, there is a nonempty set, x , such that
for any set y 2 x , the set fy g is also a member of x .
Subset. Given any set, x , and any proposition P .y /, there is a set containing pre-
cisely those elements y 2 x for which P .y / holds.
Power Set. All the subsets of a set form another set:
8x : 9p: 8u: u  x I FF u 2 p:

Replacement. Suppose a formula, (cid:30) , of set theory deﬁnes the graph of a function,
that is,
8x ; y ; z : Œ(cid:30) .x ; y / AND (cid:30) .x ; z / IM P L I E S y D z :

17“mcs-ftl” — 2010/9/8 — 0:40 — page 40 — #46

Chapter 2 Patterns of Proof

Then the image of any set, s , under that function is also a set, t . Namely,
8s 9t 8y : Œ9x : (cid:30) .x ; y / I FF y 2 t :

Foundation. There cannot be an inﬁnite sequence
(cid:1) (cid:1) (cid:1) 2 xn 2 (cid:1) (cid:1) (cid:1) 2 x1 2 x0
of sets each of which is a member of the previous one. This is equivalent
to saying every nonempty set has a “member-minimal” element. Namely,
deﬁne

member-minimal.m; x / WWD Œm 2 x AND 8y 2 x : y … m:
Then the Foundation axiom is
8x : x ¤ ; IM P L I E S 9m: member-minimal.m; x /:

Choice. Given a set, s , whose members are nonempty sets no two of which have
any element in common, then there is a set, c , consisting of exactly one
element from each set in s .

9y8z8w ..z 2 w AND w 2 x / IM P L I E S
9v9u.9t ..u 2 w AND

w 2 t / AND.u 2 t AND t 2 y //
I FFu D v //

2.7 Good Proofs in Practice

One purpose of a proof is to establish the truth of an assertion with absolute cer-
tainty. Mechanically checkable proofs of enormous length or complexity can ac-
complish this. But humanly intelligible proofs are the only ones that help someone
understand the subject. Mathematicians generally agree that important mathemati-
cal results can’t be fully understood until their proofs are understood. That is why
proofs are an important part of the curriculum.
To be understandable and helpful, more is required of a proof than just logical
correctness: a good proof must also be clear. Correctness and clarity usually go
together; a well-written proof is more likely to be a correct proof, since mistakes
are harder to hide.

18“mcs-ftl” — 2010/9/8 — 0:40 — page 41 — #47

2.7. Good Proofs in Practice

In practice, the notion of proof is a moving target. Proofs in a professional
research journal are generally unintelligible to all but a few experts who know all
the terminology and prior results used in the proof. Conversely, proofs in the ﬁrst
weeks of an introductory course like Mathematics for Computer Science would be
regarded as tediously long-winded by a professional mathematician. In fact, what
we accept as a good proof later in the term will be different than what we consider
to be a good proof in the ﬁrst couple of weeks of this course. But even so, we can
offer some general tips on writing good proofs:

State your game plan. A good proof begins by explaining the general line of rea-
soning. For example, “We use case analysis” or “We argue by contradiction.”

Keep a linear ﬂow. Sometimes proofs are written like mathematical mosaics, with
juicy tidbits of independent reasoning sprinkled throughout. This is not good.
The steps of an argument should follow one another in an intelligible order.

A proof is an essay, not a calculation. Many students initially write proofs the way
they compute integrals. The result is a long sequence of expressions without
explanation, making it very hard to follow. This is bad. A good proof usually
looks like an essay with some equations thrown in. Use complete sentences.

Avoid excessive symbolism. Your reader is probably good at understanding words,
but much less skilled at reading arcane mathematical symbols. So use words
where you reasonably can.

Revise and simplify. Your readers will be grateful.

Introduce notation thoughtfully. Sometimes an argument can be greatly simpli-
ﬁed by introducing a variable, devising a special notation, or deﬁning a new
term. But do this sparingly since you’re requiring the reader to remember
all that new stuff. And remember to actually deﬁne the meanings of new
variables, terms, or notations; don’t just start using them!

Structure long proofs. Long programs are usually broken into a hierarchy of smaller
procedures. Long proofs are much the same. Facts needed in your proof that
are easily stated, but not readily proved are best pulled out and proved in pre-
liminary lemmas. Also, if you are repeating essentially the same argument
over and over, try to capture that argument in a general lemma, which you
can cite repeatedly instead.

Be wary of the “obvious”. When familiar or truly obvious facts are needed in a
proof, it’s OK to label them as such and to not prove them. But remember

19“mcs-ftl” — 2010/9/8 — 0:40 — page 42 — #48

Chapter 2 Patterns of Proof

that what’s obvious to you, may not be—and typically is not—obvious to
your reader.
Most especially, don’t use phrases like “clearly” or “obviously” in an attempt
to bully the reader into accepting something you’re having trouble proving.
Also, go on the alert whenever you see one of these phrases in someone else’s
proof.

Finish. At some point in a proof, you’ll have established all the essential facts
you need. Resist the temptation to quit and leave the reader to draw the
“obvious” conclusion. Instead, tie everything together yourself and explain
why the original claim follows.

The analogy between good proofs and good programs extends beyond structure.
The same rigorous thinking needed for proofs is essential in the design of criti-
cal computer systems. When algorithms and protocols only “mostly work” due
to reliance on hand-waving arguments, the results can range from problematic to
catastrophic. An early example was the Therac 25, a machine that provided radia-
tion therapy to cancer victims, but occasionally killed them with massive overdoses
due to a software race condition. A more recent (August 2004) example involved a
single faulty command to a computer system used by United and American Airlines
that grounded the entire ﬂeet of both companies—and all their passengers!
It is a certainty that we’ll all one day be at the mercy of critical computer systems
designed by you and your classmates. So we really hope that you’ll develop the
ability to formulate rock-solid logical arguments that a system actually does what
you think it does!

20MIT OpenCourseWare
http://ocw.mit.edu 

6.042J / 18.062J Mathematics for Computer Science 
Fall 2010 

For information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms . 

