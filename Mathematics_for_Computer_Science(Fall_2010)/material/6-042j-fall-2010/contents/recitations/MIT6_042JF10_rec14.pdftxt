6.042/18.062J Mathematics  for  Computer  Science 
Tom  Leighton  and Marten  van  Dijk 

October  24,  2006 

Problems  for  Recitation  14 

1  TriMergeSort 

We  noted  in  lecture  that  reducing  the  size  of  subproblems  is  much  more  important  to  the 
speed  of  an  algorithm  than  reducing  the  number  of  additional  steps  per  call.  Let’s  see  if  we 
can  improve  the Θ(n log n)  bound  on  MergeSort  from  lecture. 

Let’s  consider  a  new  version  of  MergeSort  called  TriMergeSort,  where  the  size  n  list  is 
now  broken  into  three  sublists  of  size  n/3,  which  are  sorted  recursively  and  then  merged. 
Since we know  that ﬂoors  and  ceilings do not  aﬀect  the  asymptotic  solution  to  a  recurrence, 
let’s  assume  that  n  is  a  power  of  3. 

1.  How many  comparisons  are  needed  to merge  three  lists  of  1  item  each? 

2.  In  the worst case, how many comparisons are needed  to merge  three  lists of n/3  items, 
where  n  is  a  power  of  3? 

3.  Deﬁne  a  divide-and-conquer  recurrence  for  this  algorithm.  Let  T (n)  be  the  number  of 
comparisons  to  sort  a  list  of  n  items. 

4.  We  could  analyze  the  running  time  of  this  using  plug-and-chug,  but  let’s  try  Akra-
Bazzi.  First,  what  is  p? 

Recitation  14 
5.  Does  the  condition  |g � (x)| = O(xc )  hold  for  some  c ∈ N ? 

2 

6.  Determine  the  theta  bound  on  T(n)  by  integration. 

7.  Turns  out  that  any  equal  partition  of  the  list  into  a  constant  number  of  sublists  c > 1 
will  yield  the  same  theta  bound.  Can  you  see  why? 

3 

Recitation  14 
Appendix 

⎧ ⎪⎨
 is  deﬁned 
Theorem  1  (Akra-Bazzi,  strong  form).  Suppose  that: 
� 
T (x) =
 ⎪⎩

k
aiT (bix + hi (x)) + g(x)  for  x > x0 
i=1 

for  0 ≤ x ≤ x0 

where: 

�  a1 , . . . , ak  are  positive  constants 

�  b1 , . . . , bk  are  constants  between  0  and  1 

�  x0  is  “large  enough”  in  a  technical  sense  we  leave  unspeciﬁed 
�  |g � (x)| = O(xc )  for  some  c ∈ N 
�  |hi (x)| = O(x/ log2 x) 

�
 �

�

Then:

where  p  satisﬁes  the  equation �
T (x) = Θ  xp  1 + 
k 
=1 ai bp
i  = 1. 
i

�� 

x  g(u)
up+1 

1 

du


Recitation  14 
Linear  Recurrences 

Find  closed-form  solutions  to  the  following  linear  recurrences. 

4 

1.	

2.	

T0  = 0

T1  = 1

Tn  = Tn−1  + Tn−2  + 1


S0  = 0

S1  = 1

Sn  = 6Sn−1  − 9Sn−2


MIT OpenCourseWare
http://ocw.mit.edu 

6.042J / 18.062J Mathematics for Computer Science 
Fall 2010 

For information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms . 

