6.042/18.062J Mathematics  for  Computer  Science 
Tom  Leighton  and Marten  van  Dijk 

October  8,  2010 

Notes  for  Recitation  9 

1  Traveling  Salesperson  Problem 

Now we’re going to talk about a  famous optimization problem known as the Traveling Sales­
person Problem1  (TSP). Given a number of  cities and  the costs of  traveling  from any  city  to 
any  other  city,  what  is  the  cheapest  round-trip  route  that  visits  each  city  exactly  once,  and 
returns  to  the  starting  city? 

One  special,  though  very  natural,  case  of  this  problem  is  when  the  costs  of  traveling 
between  cities  obey  the  triangle  inequality.  That  is,  if  a, b,  and  c  are  distinct  cities,  then 
d(a, c)  ≤  d(a, b) +  d(b, c).  This  corresponds  to  our  intuitive  notion  that  the  distance  of 
traveling  to  a  from  c  should  be  no  larger  than  that  of  ﬁrst  traveling  to  a  from  b,  and  then 
from  b  to  c.  The  triangle  inequality  holds  if  the  cities  correspond  to  points  in  the  plane, 
since  in  this  case  the  line  segments  joining  a  to  b,  b  to  c,  and  a  to  c  form  a  triangle,  and  in 
high  school  we  learned  that  the  sum  of  any  two  edges  of  a  triangle  is  larger  than  the  third 
edge. 

Let  us  abstract  away  the  distractions  and  formulate  the  problem  as  follows.  The  cities 
will  be  vertices  of  a  graph.  We will  then  consider  the  complete  graph  on  these  vertices,  and 
� 
give  edge  (a, b)  a  weight  of  d(a, b).  We  want  an  ordering  of  the  vertices  (v1 , . . . , vn )  that 
minimizes 
n−1
d(vi , vi+1 ) + d(vn , v1 ). 
i=1 

COS T  = 

Consider  the  following  greedy  algorithm  for  TSP.  This  might  be  the  ﬁrst  thing  you’d 
think  of.  It  is  called  greedy  since  at  each  step  we  are  choosing  the  locally-optimal  best  way 
to  continue,  though  our  overall  actions may  not  be  collectively  optimal. 

1.  Start  at  an  arbitrary  city. 

2.  While  there  is  still  an  unvisited  city,  go  to  the  city  with  smallest  distance  from  the 
current  city.  If  there  are  no more  unvisited  cities,  return  to  the  starting  city. 

Even  when  the  cities  are  points  in  the  plane,  the  greedy  algorithm  sometimes  outputs  a 
suboptimal  solution. 

1Note that this  is sometimes referred to as the Traveling Salesman Problem, but we take a gender-neutral 
stance. 

Recitation  9 
2 
For  example,  take  4N  points  on  the  perimeter  of  an N × N  square  (each  at  distance  one 
from  the  next  along  the  perimeter)  and  add  one  point  at  distance  2  (outwards)  from  the 
perimeter  at  each  of  the  corners  (for  a  total  of  4N  + 4  points).  (To make  it  consistent  with 
our  abstraction,  one  would  take  these  points  on  the  plane  and  consider  the  complete  graph 
with  their  pairwise  distances  as  weights,  but  its  easier  to  think  of  it  directly  in  this  case). 
The  Greedy  Algorithm  will  go  around  the  perimeter  and  then  have  to  go  around  again  to 
pick up  the  four  corners  (which will be  skipped  the ﬁrst  time around).  For  large N ,  this will 
be  nearly  a  factor  of  2  from  optimal  (which  will  pick  up  the  corners  as  it  goes  around  the 
ﬁrst  time). 

It  turns  out  that  if  you  can  design  an  eﬃcient  algorithm  which  solves  TSP  on  every 
possible  input,  you  can  win  a  million  dollars.  Many  researchers  believe  that  in  fact  this  is 
impossible,  though  no  proof  of  this  fact  is  known  (this  proof  would  also  get  you  a  million 
dollars).  Thus,  researchers  have  contented  themselves  with  ﬁnding  a  good  approximation 
algorithm  to  TSP.  More  precisely,  if  OP T  is  the  cost  of  the  optimal  solution  (the  total 
distance  traveled  on  an  optimal  route),  then  an  algorithm  outputs  an  α-approximation  to 
TSP  provided  its  output,  on  any  input,  is  a  valid  round-trip  route  visiting  each  city  once, 
· 
and  has  cost  at most  α  OP T .
In  what  follows,  we  will  describe  a  3/2-approximation  algorithm  ALG  for  TSP,  in  the 
case  where  the  triangle  inequality  holds  and  the  distances  are  non-negative. 

3/2-Approximation  Algorithm  ALG 

1.  Construct a graph G whose vertices are the N  cities with an edge between every pair of 
cities A = B with corresponding weight d(A, B ), where d(A, B ) is the distance between 
A  and  B  in  the  plane. 

2.  Compute  an MST  T  of G  (Recall  that  a minimum  spanning  tree  (MST)  of  a  graph G 
is  a  spanning  tree  whose  sum  of  edge  weights  is  as  small  as  possible). 
3.  Compute,  for  each  city  A ∈ G,  the  degree  dA  of  A  in  T . 
4.  Let  S  = {A ∈ G  : dA  is  odd}. 
5.  Compute  a  minimum  weight  perfect  matching  M  on  the  vertices  in  S  (using  the  dis­
tances  d(·,  )  as  weights). 
·
6.  Compute  a  new  set  of  edges  E �  = M  ∪ T .  Note  that  the  resulting  graph  G�  = (V , E � ) 
is  not  necessarily  a  simple  graph  since  it might  contain multiple  edges. 
7.  Take  the  subgraph G�  = (V , E � ),  and  compute  an  Euler  circuit  on  it. 

8.  Use the Euler circuit to give an induced ordering of the vertices (i.e., the order in which 
the  vertices  appear  for  the  ﬁrst  time),  and  do  a  TSP  tour  on  this  order. 

Try  to  run  this  on  the  4N  + 4  vertex  example  and  see  what  it  gives. 

�
Recitation  9 

3 

Note  that  this  algorithm  is  reasonably  eﬃcient,  even  for  large  graphs,  since  computing 
an MST,  computing  a minimum weight  perfect matching,  and  computing Euler  circuits  can 
be  done  eﬃciently.  Since  the Euler  circuit  visits  all  vertices  and  then  returns  to  the  starting 
vertex,  the  output  of  our  algorithm  visits  every  city  once,  and  returns  to  the  starting  city, 
as  needed.  Now  let’s  show  that  the  algorithm  is  a  3/2-approximation. 

Let  OP T  be  the  optimum  TSP  tour  cost. 

1.  Show  that  the  cost  of  any  tour  is  at  least  the  cost  of  an  MST  of  G.  Hence  conclude 
that  the  cost  of  an MST  is  at most  OP T . 

Solution.  Consider  any  route  of  the  traveler.  It  corresponds  to  a  cycle  C  in  G 
containing  every  vertex  once,  since  every  city  must  be  visited  and  the  traveler  must 
end  in  the  city  in  which  they  started.  The  cost  of  the  route  is  then  just  the  sum  of 
the  weights  of  edges  along  C .  Now  if  we  delete  any  edge  of  C ,  we  are  left  with  a 
spanning  tree  of  G,  and  the  cost  cannot  increase.  Therefore,  the  cost  of  a  minimum 
� 
spanning  tree  (MST)  is  a  lower  bound  on  the  cost  of  any  route  C . 

2.  Prove  that  the  size  of  S  is  even. 

Solution.  Since an edge connects two vertices, every edge added to a graph increases 
the  total  degree  over  all  vertices  by  exactly  two.  Therefore,  the  total  degree  in  any 
graph  must  be  even.  By  deﬁnition,  S  contains  vertices  with  odd  degree.  Since  the 
total  degree  in  G  is  equal  to  the  sum  of  the  total  degree  of  even-degree  vertices 
and  odd-degree  vertices,  we  have  that  the  total  degree  of  odd-degree  vertices  is  even 
(since the total degree of even-degree vertices is even).  The total degree of odd-degree 
vertices is the sum of |S | odd numbers, so to have it be even requires that |S | be even. 
� 

3.  Prove  that  the  weight  of  the  min  weight  perfect  matching  is  at  most  OP T /2.  Hint: 
Consider  a  minimum  cost  TSP  tour  on  just  the  vertices  in  S . 

Solution.  We  will  use  the  following  lemma. 

Lemma  1.  If  the  triangle  inequality  holds  in  a  graph with  positive weights,  then  d(a, b) 
is  at  most  the  weight  of  any  path  from  a  to  b. 

Proof.  We  prove  the  lemma  by  induction.  Let  the  inductive  hypothesis  P (n)  be  the 
statement  “If  n  is  the  length  of  a  path  p  from  a  to  b,  for  any  vertices  a  and  b,  then 
d(a, b)  is  at most  the  weight  of  p.” 
This  holds  for  the  base  case  of  n  =  1,  since  the  minimum  cost  of  traveling  from  a  to 
b  cannot  be  strictly  greater  than  the  weight  of  the  direct  path  from  a  to  b  (otherwise, 
we  could  simply  take  the  direct  path  for  a  smaller  cost). 
For  the  induction  step,  we  assume  that  P (n)  holds  for  an  arbitrary  n ≥  1.  Then,  for 
n + 1, we  have  an  (n + 1)-length  path  from  a  to  b.  Let  b�  be  the  vertex  preceding  b  on 

Recitation  9 
4 
this path.  By  our  inductive  assumption, we  know  that  d(a, b� )  is  at most  the weight  of 
this path.  Then by  the  triangle  inequality, we have d(a, b) ≤ d(a, b� ) + d(b� , b), which  is 
less  than or equal  to  the weight of  the path  from a  to b�  added  to  the cost of  the b� -to-b 
edge, which  is  the weight  of  the path  from a  to  b.  So  the  inequality holds  for  the n + 1 
case. 

Consider  the  optimal  TSP  tour  on  the  entire  graph  G.  This  has  cost  OP T .  This  is 
also  a  tour  on  the  vertices  in  S .  “Shortcut”  this  tour  by  using  the  lemma:  i.e.,  for 
every  segment  of  the  tour  between  vertices  s1 , s2  ∈  S  with  no  other  vertices  of  S  en 
route,  substitute  in  the  edge  from  s1  to  s2 .  By  the  lemma,  these  substitutions  can 
only  decrease  the  length  of  the  tour,  and  thus  it  now  has  cost  at  most  OP T .  Now, 
since  there  are  an  even  number  of  vertices  in  the  tour,  one  can  consider  2  perfect 
matchings  formed  by  taking  alternate  edges  of  this  tour.  Clearly,  the  sum  of  their 
costs  is  at most OP T ,  so  one  of  them must  have  a  cost  of  at most OP T /2.  Thus  the 
� 
min  weight  perfect matching  on  S  has  weight  at most  OP T /2. 

4.  Prove  that G�  has  an  Euler  circuit,  and  its  cost  is  at most  3OP T /2. 
Solution.  Every  vertex  has  even  degree  in  G�  (by  choice  of  S  and  M ).  Thus  it  has 
an  Euler  circuit.  Every  edge  of  T  ∪ M  is  traversed  once,  and  so  the  total  cost  is 
cost(T ) + cost(M ) ≤ OP T  + OP T /2 = 3OP T /2. 
� 

5.  Show  that  the  length  of  the  TSP  tour  is  at most  3OP T /2. 

Solution.  The  induced  TSP  tour  from  is  a  ”shortcutting”  of  the  Euler  circuit  (re­
placing  paths  by  single  edges),  and  hence,  by  the  triangle  inequality  lemma  from 
� 
above,  its  length  is  at most  the  length  of  the  Euler  circuit. 

6.  Conclude  that  our  algorithm  outputs  a  3/2-approximation. 

Solution.  Indeed  it  does. 

� 

In fact, for any constant � > 0, it is known how to eﬃciently achieve a (1+�)-approximation 
in  the  plane,  but  it  is  a  lot more  complicated. 

MIT OpenCourseWare
http://ocw.mit.edu 

6.042J / 18.062J Mathematics for Computer Science 
Fall 2010 

For information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms . 

