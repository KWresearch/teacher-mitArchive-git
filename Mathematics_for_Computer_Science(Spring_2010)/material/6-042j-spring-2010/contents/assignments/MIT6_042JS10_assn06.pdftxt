Massachusetts Institute of Technology 
6.042J/18.062J, Spring ’10: Mathematics for Computer Science 
Prof. Albert R. Meyer 

March 11 
revised March 11, 2010, 989 minutes 

Problem Set 6 
Due: March 19 

Reading: Notes Ch. 10.3– 10.6; Ch. 11 

Problem 1. 
An edge is said to leave a set of vertices if one end of the edge is in the set and the other end is not. 
(a)  An n-node graph is said to be mangled if there is an edge leaving every set of �n/2� or fewer 
vertices. Prove the following claim. 
Claim.  Every mangled graph is connected. 
An n-node graph is said to be tangled if there is an edge leaving every set of �n/3� or fewer vertices. 
(b)  Draw a tangled graph that is not connected. 

(c)  Find the error in the proof of the following 
False Claim.  Every tangled graph is connected. 

False proof.  The proof  is by strong  induction on  the number of vertices  in  the graph.  Let P (n) be 
the proposition  that  if  an n-node graph  is  tangled,  then  it  is  connected.  In  the base  case,  P (1)  is 
true because the graph consisting of a single node is trivially connected. 
For the inductive case, assume n ≥  1 and P (1), . . . , P (n) hold.  We must prove P (n + 1), namely, 
that if an (n + 1)-node graph is tangled, then it is connected. 
So let G be a tangled, (n + 1)-node graph.  Choose �n/3� of the vertices and let G1  be the tangled 
subgraph  of G with  these  vertices  and G2  be  the  tangled  subgraph with  the  rest  of  the  vertices. 
Note  that  since  n  ≥  1,  the  graph  G  has  a  least  two  vertices,  and  so  both  G1  and  G2  contain  at 
least one vertex.  Since G1  and G2  are  tangled, we may assume by strong  induction  that both are 
connected.  Also, since G  is tangled,  there  is an edge  leaving the vertices of G1  which necessarily 
connects to a vertex of G2 . This means there is a path between any two vertices of G: a path within 
one  subgraph  if  both  vertices  are  in  the  same  subgraph,  and  a  path  traversing  the  connecting 
edge  if  the vertices are  in  separate  subgraphs.  Therefore,  the  entire graph, G,  is  connected.  This 
completes the proof of the inductive case, and the Claim follows by strong induction. 

� 

Problem 2. 
My computer program has seven variables, t,u,v,w,x,y,z, and computes in 6 steps. The steps 
in which each variable is used are as follows:  t:  steps 1 through 6; u:  step 2; v:  steps 2 through 

Creative Commons 

2010,  Prof. Albert R. Meyer. 

2 

Problem Set 6 

4; w:  steps 1,3 and 5; x:  steps 1 and 6; y:  steps 3 through 6; z:  steps 4 and 5.  Each variable will 
need  to  occupy  the  same  index  register  at  each  one  of  the  steps  in which  it  is  going  to  be  used; 
however during  the steps when  the variable  is not being used  the register may be used by some 
other variable.  How many such registers are needed  for my program?  Explain how you arrived 
at the answer. 

Problem 3. 
The set Supersymm of “super-symmetric strings” is deﬁned recursively as follows:

Base Case: The 26 lower case letters of the Roman alphabet, a, b,. . . , z, are in Supersymm.

Constructor Case:  If α and β  are strings in Supersymm, then the string αβα is in Supersymm.


(a)  Which of the following are super-symmetric strings? Brieﬂy explain your answers. 

(i)  a 
(ii)  aaaba 
(iii)  abcbacabcba 
(iv)  λ, the empty string 
(v)  abaabcbaaba 

(b)  Prove by  structural  induction  that  in any  super-symmetric  string,  exactly one  letter appears 
an odd number of times. 

Problem 4. 
Take a regular deck of 52 cards.  Each card has a suit and a value.  The suit is one of four possibili­
ties: heart, diamond, club, spade. The value is one of 13 possibilities, A, 2, 3, . . . , 10, J, Q, K . There 
is exactly one card for each of the 4 × 13 possible combinations of suit and value. 
Ask your friend to lay the cards out into a grid with 4 rows and 13 columns. They can ﬁll the cards 
in any way they’d like.  In this problem you will show that you can always pick out 13 cards, one 
from each column of the grid, so that you wind up with cards of all 13 possible values. 

(a)  Explain how to model this trick as a bipartite matching problem between the 13 column ver­
tices and the 13 value vertices.  Is the graph necessarily degree constrained? 

(b)  Show that any n columns must contain at least n different values and prove that a matching 
must exist. 

Massachusetts Institute of Technology 
6.042J/18.062J, Spring ’10: Mathematics for Computer Science 
Prof. Albert R. Meyer 

Solutions cover sheet 
March 11 

Student’s Solutions to Problem Set 6 


Your name: 

Due date:  March 19 

Submission date: 

Circle your TA/LA: 

Megumi 

Tom 

Richard 

Eli 

Collaboration statement: Circle one of the two choices and provide all pertinent info. 

1.  I worked alone and only with course materials. 

2.  I collaborated on this assignment with:


got help from:1


and referred to:2


DO NOT WRITE BELOW THIS LINE


Problem  Score 
1 
2 
3 
4 
Total 

Creative Commons 
2010,  Prof. Albert R. Meyer. 
1People other than course staff. 
2Give citations to texts and material other than the Spring ’10 course materials. 

MIT OpenCourseWare
http://ocw.mit.edu 

6.042J / 18.062J Mathematics for Computer Science 
Spring 2010 

For information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms . 

