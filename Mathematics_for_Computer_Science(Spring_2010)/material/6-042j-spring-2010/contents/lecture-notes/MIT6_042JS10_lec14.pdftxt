Mathematics for Computer Science 
MIT 6.042J/18.062J 

State Machines: 
Derived Variables 

Euclidean Algorithm 
 --for GCD(a, b) 
1.  x ::= a,   y ::= b.  
2.  If y = 0, return x & 
terminate;  
3.  else simultaneously: 
       (x, y) := (y, rem(x,y)) 
4.  Go to step 2. 

Albert R Meyer, March 5, 2010 

lec 5F.1 

Albert R Meyer, March 5, 2010 

lec 5F.2 

GCD correctness 
Example: GCD(662,414) 
= GCD(414, 248)  since rem(662,414) = 248 
= GCD(248, 166)  since rem(414,248) = 166 
= GCD(166, 82)    since rem(248,166) =   82 
= GCD(82, 2)       since rem(166,82)   =     2 
= GCD(2, 0)         since rem(82,2)       =     0 
return value: 2 

Euclid Algorithm State Machine 

States ::=  
start ::=  (a,b) 
state transitions defined by 
 (x,y) → (y, rem(x,y))   for  y ≠ 0 

Albert R Meyer, March 5, 2010 

lec 5F.3 

Albert R Meyer, March 5, 2010 

lec 5F.4 

GCD correctness 
preserved invariant P(x,y): 

[gcd(a,b) = gcd(x,y)] 

GCD correctness 
transitions: (x, y) → (y, rem(x, y)) 
P is preserved because: 
gcd(x,y) = gcd(y, rem(x,y)) 
for y ≠ 0 
Proof:  x = qy + rem. 
any divisor of 2 of these 3 
terms divides all 3. 

Albert R Meyer, March 5, 2010 

lec 5F.5 

Albert R Meyer, March 5, 2010 

lec 5F.6 

3/5/10

1

GCD correctness 
GCD correctness 

P is true at start: 
x = a , y = b, so P(start) ≡
  [gcd(a,b) = gcd(a,b)] 

GCD correctness 
Conclusion: on termination 
x = gcd(a,b) 
Proof: at termination, y = 0, so 
x = gcd(x,0) = gcd(x,y)   = gcd(a,b) 
preserved invariant 

Albert R Meyer, March 5, 2010 

lec 5F.7 

Albert R Meyer, March 5, 2010 

lec 5F.8 

GCD Termination 
y decreases at each step 
   y ∈ N
         (another invariant) 
Well Ordering implies 
reaches minimum & stops 

Derived Variables 
A derived variable, v, is a 
function assigning a “value” to 
each state: 
 v: States (cid:736) Values 
If Vals = , say v is “ -valued” 
or “nonnegative-integer-valued” 

Albert R Meyer, March 5, 2010 

lec 5F.9 

Albert R Meyer, March 5, 2010 

lec 5F.10 

Derived Variables 
Robot on the grid example: 
States = 2.   Define the 
   sum-value, σ, of a state: 
σ(x,y) ::= x+y 
an -valued derived variable 

Derived Variables 

Called derived to distinguish 
from actual variables that 
appear in a program.   
For robot    Actual: x, y 
                   Derived: σ 

Albert R Meyer, March 5, 2010 

lec 5F.11 

Albert R Meyer, March 5, 2010 

lec 5F.12 

3/5/10

2

Derived Variables 

Derived Variables 

Another derived variable: 
π ::= σ (mod 2) 
π is {0,1}-valued 

For GCD, have (actual) 
variables x, y. 
Proof of GCD termination: 
  y is strictly decreasing & 
   natural number-valued 

Albert R Meyer, March 5, 2010 

lec 5F.13 

Albert R Meyer, March 5, 2010 

lec 5F.14 

Derived Variables 

Strictly Decreasing Variable 

Termination followed by 
Well Ordering Principle: 
  y must take a least value. 
  then the algorithm is stuck 

16 

12 

 8 

 4 

 0 

Goes down at 
 every step 

State 

Albert R Meyer, March 5, 2010 

lec 5F.15 

Albert R Meyer, March 5, 2010 

lec 5F.16 

Weakly Decreasing Variable 

Down or constant  
 after each step 

State 

16 

12 

 8 

 4 

 0 

Diagonal Robot variables 
σ: up & down all over the place   
    neither increasing 
    nor decreasing 
π: is constant 
    both weakly increasing   
        &  weakly decreasing 

Albert R Meyer, March 5, 2010 

lec 5F.17 

Albert R Meyer, March 5, 2010 

lec 5F.18 

3/5/10

3

Partial-order valued variables 

Defs of increasing/decreasing 
variables extend to variables 
with partially ordered values. 

Team Problems 
Problems 
1−3 

Albert R Meyer, March 5, 2010 

lec 5F.22 

Albert R Meyer, March 5, 2010 

lec 5F.25 

3/5/10

4

MIT OpenCourseWare
http://ocw.mit.edu 

6.042J / 18.062J Mathematics for Computer Science
Spring 2010 
 
 
 
For information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms . 

