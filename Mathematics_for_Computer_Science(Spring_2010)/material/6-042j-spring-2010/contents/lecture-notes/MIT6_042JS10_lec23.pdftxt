Mathematics for Computer Science 
MIT 6.042J/18.062J

Euler’s Theorem 
RSA encryption 

Euler  function 
(n) ::=
# k  0,1,…,n-1 s.t.
    k rel. prime to n 
has a (mod n)
inverse

Albert R Meyer,             April 2, 2010 

lec 8F.1 

Albert R Meyer,             April 2, 2010 

lec 8F.2 

Euler  function 

Calculating 

(n) ::= # k  0,1,…,n-1 s.t.
              k rel. prime to n
1,2,3,4,5,6
(7)  = 6 
(12) = 4

0,1,2,3,4,5,6,7,8,9,10,11

If p prime, everything from 
1 to p-1 is rel. prime to p, so 

(p) = p – 1 

Albert R Meyer,             April 2, 2010 

lec 8F.3 

Albert R Meyer,             April 2, 2010 

lec 8F.4 

Euler  function 
(9)?
0,1,2,3,4,5,6,7,8
0,1,2,3,4,5,6,7,8
k rel. prime to 9 iff
k rel. prime to 3
3 divides every 3rd number
so, (9) = 9-(9/3) = 6

Calculating (pk)

0,1,...,p,...,2p,.....,pk-p,...,pk-1
0,1,...,p,...,2p,.....,pk-p,...,pk-1
p divides every pth number 

pk/p of these numbers
are not rel. prime to pk

Albert R Meyer,             April 2, 2010 

lec 8F.5 

Albert R Meyer,             April 2, 2010 

lec 8F.6 

1

Calculating (pk)

so
(pk) = pk – pk/p
– pk-1

Calculating (a(cid:1)(cid:1)b)
Lemma :
  For a, b relatively prime,
(a(cid:1)b) = (a)(cid:1)(b)

pf: Pset 8.  Another way 
     in 2 weeks. 

Albert R Meyer,             April 2, 2010 

lec 8F.8 

Albert R Meyer,             April 2, 2010 

lec 8F.9 

Calculating (a(cid:1)(cid:1)b)
(12) = (3(cid:1)4)
  = (3)(cid:1)(4)
  = (3 - 1)(cid:1)(22 - 22-1)
= 2(cid:1)(4 - 2) = 4

Euler’s Theorem 

For k relatively
prime to n,
k(n)  1 (mod n) 

Albert R Meyer,             April 2, 2010 

lec 8F.10 

Albert R Meyer,             April 2, 2010 

lec 8F.11 

Fermat’s Little Theorem 

special case of Euler: 
kp-1  1 (mod p) 
for prime p 

Proof of Euler’s Theorem 
n* ::= 
{m|0<m<n, m rel prime to n}
Note: m,k  n* implies
rem(mk,n)  n*         
m(cid:1)(cid:1)k rel. prime to n

Albert R Meyer,             April 2, 2010 

lec 8F.12 

Albert R Meyer,             April 2, 2010 

lec 8F.14 

2

Proof of Euler’s Theorem 
n* ::= 
{m|0<m<n, m rel prime to n}
Lemma: mult by kn*,
permutes n*.

permuting (mod 9) 
(9) = 32-3 = 6
9*=
1 2 4 5 7 8

Albert R Meyer,             April 2, 2010 

lec 8F.15 

Albert R Meyer,             April 2, 2010 

lec 8F.16

permuting (mod 9) 
(9) = 32-3 = 6
9*= 1 2 4 5 7 8
1 2 4 5 7 8
2(cid:1)(cid:1) 2 4 8 1 5 7

permuting (mod 9) 
(9) = 32-3 = 6
9*=
1 2 4 5 7 8
2(cid:1)(cid:1) 2 4 8 1 5 7
7(cid:1)(cid:1) 7 5 1 8 4 2

Albert R Meyer,             April 2, 2010 

lec 8F.17

Albert R Meyer,             April 2, 2010 

lec 8F.18

RSA Public Key Encryption 

Photograph removed due to copyright restrictions.
See here:
http://ams.org/samplings/feature-column/fcarc-internet (under Public Key Systems)

Beforehand
receiver generates primes p, q 
n ::= p•q
selects e rel. prime to (p-1)(q-1) 
(e, n) ::= public key, publishes it 
finds d, inverse mod (p-1)(q-1) of e
d  is secret key, keeps hidden 

Albert R Meyer,             April 2, 2010 

lec 8F.24 

Albert R Meyer,             April 2, 2010 

lec 8F.25 

3

RSA
(0  m < n)
Encoding message m:
send m’ ::= rem(me, n) 
Decoding m’:
  receiver computes 
rem((m’)d, n )  = m
Albert R Meyer,             April 2, 2010 

lec 8F.26 

Receiver’s abilities 
find two large primes p, q 
- ok because: lots of primes 
   - fast test for primality
find e rel. prime to (p-1)(q-1) 
- ok: lots of rel. prime nums
   - gcd easy to compute 
find (mod (p-1)(q-1)) inverse of e
- easy using Pulverizer or Euler 
Albert R Meyer,             April 2, 2010 
lec 8F.27 

Why does this work? 

Why does this work? 

follows easily from
Euler’s Theorem when 
m has inverse mod n

actually works for
all m  … explained in 
  Class Problem 2 

Albert R Meyer,             April 2, 2010 

lec 8F.28 

Albert R Meyer,             April 2, 2010 

lec 8F.29 

Why is it secure? 
(cid:129) easy to break if can factor n
  (find d same way receiver did) 
(cid:129) conversely, from d can factor n
  (but factoring appears hard 
so finding d must also be hard) 
(cid:129)  RSA has withstood 30 years of 
attacks

Team Problems 
Problems
1 & 2

Albert R Meyer,             April 2, 2010 

lec 8F.30 

Albert R Meyer,             April 2, 2010 

lec 8F.31 

4

MIT OpenCourseWare
http://ocw.mit.edu

6.042J / 18.062J Mathematics for Computer Science
Spring 2010

For information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms .

