The Logic of 
Propositions 

Propositional (Boolean) Logic 
A proposition is either True or False 
Example: 
There are 5 regular solids. 
6 
True 
False 
Non-examples:  Wake up! 
Where am I? 

Albert R Meyer 

February 10, 2010 

lec 2W.1 

Albert R Meyer 

February 10, 2010 

lec 2W.2 

English to Math 
Greeks carry Swords or Javelins 
  G   →      (S ∨  J)
True even if a Greek carries both 
a Sword and a Javelin 

English to Math 
Greeks carry Bronze or Copper swords 
 →     (B ⊕  C)
  G  
Bronze or Copper but not both 

Albert R Meyer 

February 10, 2010 

lec 2W.3 

Albert R Meyer 

February 10, 2010 

lec 2W.4 

Definition of OR 
The value of (P OR Q) is T iff 
  P is T, or Q is T, or both are T. 
Truth Table for OR 
P  Q  P OR Q 
T 
T 
T 
T 
F 
T 
T 
T 
F 
F 
F 
F 

Albert R Meyer 

February 10, 2010 

F iff both 
P,Q are F 
lec 2W.5 

Definition of XOR 
The value of (P XOR Q) is T iff 
  exactly one of P and Q is T. 
Truth Table for XOR 
P 
P XOR Q 
Q 
T 
T 
F 
T 
F 
T 
T 
T 
F 
F 
F 
F 

Albert R Meyer 

February 10, 2010 

lec 2W.6 

1 

Definition of AND 
The value of (P AND Q) is T iff 
   both P and Q are T. 
Truth Table for AND 
P  Q 
P AND Q 
T 
T 
T 
F 
F 
T 
F 
T 
F 
F 
F 
F 

Definition of NOT 

The NOT(P) is T iff P is F. 
Truth Table for NOT (P) 
P  NOT(P) 
F 
T 
F 
T 

Albert R Meyer 

February 10, 2010 

lec 2W.7 

Albert R Meyer 

February 10, 2010 

lec 2W.8 

Truth Assignments 
A truth assignment assigns a value T 
or F to each propositional variable.  
Computer scientists call assignment 
of values to variables an environment.  
If we know the environment, we can 
find the value of a propositional 
formula. 

Evaluation in an Environment 

Example:  Suppose environment, v, 
assigns 
v(P) = T,  v(Q)= T, v(R) = F. 
Truth value of 
 (  (P AND Q) ) OR (R XOR (   Q))            
 ¬
 ¬
F
F
F 
         T         T            F              T 
T
F 

Albert R Meyer 

February 10, 2010 

lec 2W.9 

Albert R Meyer 

February 10, 2010 

lec 2W.10 

Equivalence 

Two propositional formulas are   
equivalent  
iff they have the same truth 
value in all environments. 

P 
T 
T 
F 
F 

DeMorgan’s Law 
is equivalent to 
  ¬(P ∨ Q)
F 
T 
F 
T 
F 
T 
T 
 F 

Q 
T 
F 
T 
F 

F 
F 
T 
T 

F 
F 
F 
T 

F 
T 
F 
T 

Albert R Meyer 

February 10, 2010 

lec 2W.11 

Albert R Meyer 

February 10, 2010 

lec 2W.13 

2 

P 
T 
T 
F 
F 

Q 
T 
F 
T 
F 

DeMorgan’s Law 
is equivalent to 
  ¬(P ∨ Q)
F 
T 
F 
T 
F 
T 
T 
 F 

F 
F 
F 
F 
T 
F 
F 
F 
T 
T 
T 
T 
Same final column, so equivalent 
-- proof by Truth Table 
February 10, 2010 

Albert R Meyer 

Definition of IMPLIES 
The value of (P IMPLIES Q) is F iff 
   P is T and Q is F. 
Truth Table for IMPLIES (→) 
P  Q  P→Q 
T  T 
T 
F 
T  F 
F  T 
T 
T 
F  F 

lec 2W.14 

Albert R Meyer 

February 10, 2010 

lec 2W.15 

A True Implication 

A True Implication 

(1=-1) IMPLIES (I am Pope) 
We reasoned correctly to 
reach the false conclusion 

(1=-1) IMPLIES (I am Pope) 
We reasoned correctly to 
reach the false conclusion 

Albert R Meyer 

February 10, 2010 

lec 2W.16 

Albert R Meyer 

February 10, 2010 

lec 2W.17 

A True Implication 

A True Implication 

(1=-1) IMPLIES (I am Pope) 
We reasoned correctly to 
reach the false conclusion 
from the false hypothesis. 

(1=-1) IMPLIES (I am Pope) 
We reasoned correctly to 
reach the false conclusion 
from the false hypothesis. 

Albert R Meyer 

February 10, 2010 

lec 2W.18 

Albert R Meyer 

February 10, 2010 

lec 2W.19 

3 

A True Implication 

(1=-1) IMPLIES (I am Pope) 
The whole implication is true, 
even though both conclusion 
& hypothesis are false. 

Satisfiability & Validity  
A formula is satisfiable iff it 
is true in some environment. 

A formula is valid iff it is 
true in all environments. 

Albert R Meyer 

February 10, 2010 

lec 2W.20 

Albert R Meyer 

February 10, 2010 

lec 2W.21 

Verifying Valid, Satisfiable 
Truth table size doubles with 
each additional variable 
--exponential growth.  Makes 
truth tables impossible when 
there are hundreds of variables. 
(In current digital circuits, 
there are millions of variables.) 

Efficient Test for Satisfiability? 

The P=NP? question is equivalent 
to asking if there is an efficient 
(polynomial rather than  
exponential time) procedure 
to check satisfiability. 

Albert R Meyer 

February 10, 2010 

Albert R Meyer 

February 10, 2010 

Java Logical Expression 

Digital Logic 

AND 
OR 
if ((x>0) || (x <= 0 && y>100)) 
 
(more code) 

Albert R Meyer 

February 10, 2010 

lec 2W.38 

Albert R Meyer 

half adder 
from http://en.wikipedia.org/wiki/Adder_(electronics) 
lec 2W.40 
February 10, 2010 

4 

Digital Logic 

A 
B 

Albert R Meyer 

cin 
s 
c 
full adder 
February 10, 2010 

Team Problems 
Problems 
1—4 

d 
cout 

lec 2W.41 

Albert R Meyer 

February 10, 2010 

lec 2W.42 

5 

MIT OpenCourseWare 

http://ocw.mit.edu 

6.042J / 18.062J Mathematics for Computer Science 

Spring 2010 

For information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms . 

