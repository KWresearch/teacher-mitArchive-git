Massachusetts Institute of Technology 
6.042J/18.062J, Spring ’10: Mathematics for Computer Science 
Prof. Albert R. Meyer 

April 26 
revised April 26, 2010, 1303 minutes 

Solutions to In-Class Problems Week 12, Mon. 

Problem 1. 
The famous mathematician, Fibonacci, has decided to start a rabbit farm to ﬁll up his time while 
he’s  not making  new  sequences  to  torment  future  college  students.  Fibonacci  starts  his  farm  on 
month  zero  (being  a  mathematician),  and  at  the  start  of  month  one  he  receives  his  ﬁrst  pair  of 
rabbits.  Each pair of  rabbits  takes  a month  to mature,  and  after  that breeds  to produce one new 
pair of rabbits each month.  Fibonacci decides  that  in order never  to run out of rabbits or money, 
every  time a batch of new  rabbits  is born, he’ll sell a number of newborn pairs equal  to  the  total 
number of pairs he had three months earlier.  Fibonacci is convinced that this way he’ll never run 
out of stock. 

(a)  Deﬁne  the number,  rn , of pairs of  rabbits Fibonacci has  in month n, using a  recurrence  rela­
tion. That is, deﬁne rn  in terms of various ri  where i < n. 

Solution.  According to the description above, r0  = 0 and r1  = 1.  Since the rabbit pair received at 
the ﬁrst month  is  too young  to breed,  r2  = 1 as well.  After  that,  rn  is equal  to  the number,  rn−1 , 
of rabbit pairs in the previous month, plus the number of newborn pairs, minus the number, rn−3 , 
he sells.  The number of newborn pairs equals to the number of breeding pairs from the previous 
month, which is precisely the total number, rn−2 , of pairs from two months before. 
Thus, 

rn  = rn−1  + (rn−2  − rn−3 ). 

� 

(b)  Let R(x) be the generating function for rabbit pairs, 
R(x) ::= r0  + r1x + r2x 2  + ·. 

Express R(x) as a quotient of polynomials. 

Solution.  Reasoning as in the derivation of the generating function for the orginal Fibonacci num­
bers, we have 

r2x2  +  r3x3  +  r4x4  + · · ·  . 
r1x  + 
R(x) =  r0  + 
2  −  r2x
3  −  r3x
4  − · · ·  . 
r0x  − 
−xR(x) = 
− 
r1x
−x2R(x) = 
r0x −  r1x −  r2x − · · ·  . 
− 
3
2
4
+  r0x3  +  r1x4  + · · ·  . 
x3R(x) = 
R(x)(1 − x − x2  + x3 ) =  r0  + (r1  − r0 )x  + (r2  − r1  − r0 )x2  + 0x3  + 0x4  + · · ·  . 
0x2 . 
1x  +
= 0 + 

Creative Commons 

2010,  Prof. Albert R. Meyer. 

2 

so 

Solutions to In-Class Problems Week 12, Mon. 

R(x) = 

x
1 − x − x2  + x3 

= 

x 
(1 + x)(1 − x)2 

. 

(1)
� 

(c)  Find a partial fraction decomposition of the generating function R(x). 

Solution.  We know 

C 
B 
A
R(x) = 
+
+
(1 − x)2 
1 − x 
1 + x 
for some numbers A, B , C . Multiplying both sides of this equation by (1 + x)(1 − x)2  gives 
x = A(1 − x)2  + B (1 + x)(1 − x) + C (1 + x). 
Letting  x  = 1  gives  C  = 1/2,  letting  x  =  −1  gives  A  =  −1/4,  and  letting  x  = 0  then  gives 
B = −(A + C ) = −1/4. 
� 

(d)  Finally, use  the partial  fraction decomposition  to come up with a closed  form expression  for 
the number of pairs of rabbits Fibonacci has on his farm on month n. 

Solution.  We ﬁnd the coefﬁcient as the sum of the coefﬁcients for each term in the partial fraction 
expansion. 
A/(1 + x) =  −  1/4  −  (1/4)(−x)  −  (1/4)(−x)2  − 
(1/4)x  − 
B /(1 − x) =  −  1/4  − 
− 
(1/4)x2
C/(1 − x)2  =
1/2 + 
(2/2)x  + 
(3/2)x +
2 
1x + 
1x  +
R(x) = 
2 
� � n 
2 

(1/4)(−x)n  − · · · 
(1/4)xn  − · · · 
� 
· · · 
((n + 1)/2)xn  +
(−1)n+1
xn  + · · · 
2  − 
n+1 
4 

· · ·  − 
· · ·  − 
· · · 
+ 
· · ·  + 

�

so 

rn  = 

.

� 

Problem 2. 
Less well-known than the Towers of Hanoi —but no less fascinating —are the Towers of Sheboy­
gan. As in Hanoi, the puzzle in Sheboygan involves 3 posts and n disks of different sizes.  Initially, 
all the disks are on post #1: 

Post #1 

Post #2 

Post #3


Solutions to In-Class Problems Week 12, Mon. 

3 

The  objective  is  to  transfer  all  n  disks  to  post  #2  via  a  sequence  of  moves.  A  move  consists  of 
removing the top disk from one post and dropping it onto another post with the restriction that a 
larger disk can never lie above a smaller disk.  Furthermore, a local ordinance requires that a disk 
can be moved only from a post to the next post on its right —or from post #3 to post #1. Thus, for example, 
moving a disk directly from post #1 to post #3 is not permitted. 

(a)  One  procedure  that  solves  the  Sheboygan  puzzle  is  deﬁned  recursively:  to  move  an  initial 
stack of n disks to the next post, move the top stack of n − 1 disks to the furthest post by moving 
it  to  the  next  post  two  times,  then move  the  big,  nth  disk  to  the  next  post,  and  ﬁnally move  the 
top stack another two times to land on top of the big disk. Let sn  be the number of moves that this 
procedure uses. Write a simple linear recurrence for sn . 

Solution. 

s0  = 0,

sn  = 2sn−1  + 1 + 2sn−1  = 4sn−1  + 1 

for n > 0. 

(2)

� 

(b)  Let S (x) be the generating function for the sequence �s0 , s1 , s2 , . . . �.  Show that S (x) is a quo­
tient of polynomials. 

Solution. 

so 

and 

s3x3  + · · ·  . 
S (x) = 
s2x2  + 
s1x  + 
s0  + 
−4xS (x) = 
2  −  4s2x
−  4s0x  −  4s1x
3  − · · ·  . 
−1/(1 − x) =  −1  − 
1x − · · ·  . 
1x − 
1x  − 
2
3
S (x)(1 − 4x) −  1−1 
x  =  −1 + 
0x3  + · · ·  . 
0x  +
0x2  +
=  −1. 

S (x)(1 − 4x) − 

1 
1 − x 

= −1, 

S (x) = 

x 
(1 − x)(1 − 4x) 

.

(c)  Give a simple formula for sn . 
Solution.  We can express x/(1 − x)(1 − 4x) using partial fractions as 

x 
(1 − x)(1 − 4x)

=

a
1 − x 

+

b 
1 − 4x 

for some constants a, b. Multiplying both sides of (3) by the left hand denominator yields 
x = a(1 − 4x) + b(1 − x). 

� 

(3) 

(4) 

Solutions to In-Class Problems Week 12, Mon. 
4 
Letting x = 1 yields a = −1/3 and letting x = 1/4 yields b = 1/3. Now from (3), we have 
−1/3
1 − x 

1/3 
1 − 4x 

S (x) = 

+ 

so 

sn  = −

1  + 
3

1
3

4n  =

− 1 
4n 
. 
3

� 

(d)  A better (indeed optimal, but we won’t prove this) procedure to solve the Towers of Sheboy­
gan  puzzle  can  be  deﬁned  in  terms  of  two  mutually  recursive  procedures,  procedure  P1 (n)  for 
moving a stack of n disks 1 pole forward, and P2 (n) for moving a stack of n disks 2 poles forward. 
This is trivial for n = 0.  For n > 0, deﬁne: 
P1 (n): Apply P2 (n − 1) to move the top n − 1 disks two poles forward to the third pole. Then move 
the remaining big disk once to land on the second pole.  Then apply P2 (n − 1) again to move the 
stack of n − 1 disks two poles forward from the third pole to land on top of the big disk. 
P2 (n):  Apply P2 (n − 1) to move  the  top n − 1 disks  two poles forward to  land on  the third pole. 
Then move the remaining big disk to the second pole.  Then apply P1 (n − 1) to move the stack of 
n − 1 disks one pole forward to land on the ﬁrst pole. Now move the big disk 1 pole forward again 
to land on the third pole.  Finally, apply P2 (n − 1) again to move the stack of n − 1 disks two poles 
forward to land on the big disk. 
Let  tn  be  the  number  of  moves  needed  to  solve  the  Sheboygan  puzzle  using  procedure  P1 (n). 
Show that 

tn  = 2tn−1  + 2tn−2  + 3, 

(5) 

for n > 1. 
Hint: Let sn  be the number of moves used by procedure P2 (n). Express each of tn  and sn  as linear 
combinations of tn−1  and sn−1  and solve for tn . 

Solution.  From the deﬁnitions of procedures P1  and P2  we have 

t0  = 0, 
s0  = 0, 
tn  = sn−1  + 1 + sn−1 
sn  = sn−1  + 1 + tn−1  + 1 + sn−1 

for n > 0, 
for n > 0. 

(6) 
(7) 

Using (6) to get sn−1  = (tn  − 1)/2 and then expressing s’s  in (7)  in terms of t’s, we conclude that 
for n > 0, 
tn+1  − 1  = (tn  − 1) + tn−1  + 2 
2 

so 

which is the same as the given recurrence (5) with n + 1 replacing n. 

�


tn+1  = 2tn  + 2tn−1  + 3, 

Solutions to In-Class Problems Week 12, Mon. 

5 

(e)  Derive values a, b, c, α, β  such that 
tn  = aαn  + bβ n  + c. 

Conclude that tn  = o(sn ). 

+ 

tn  =

− 1. 

Solution. 

(1 − √
√
3)n 
(1 + 
3)n 
3 − √
√
3 
3 + 
3 
√
In particular, we conclude that tn  = Θ((1 + 
3)n ).  Since sn  = Θ(4n ), this implies that tn  =  o(sn ). 
So the second procedure for moving a stack of n disks is signiﬁcantly more efﬁcient than the ﬁrst 
one. 
The derivation of (8) is similar to the one for sn : 
t3x3  + · · ·  .

t2x2  + 
t1x  + 
T (x) = 
+ 
−  2t2x3
2t0x  −  2t1x2
− · · ·  .

−2xT (x) = 
− 
−  2t1x
−2x2T (x) = 
−  2t0x
− · · ·  .

3 
2 
−3/(1 − x) =  −3  − 
3x − 
3x  − 
3x − · · ·  .

2 
3 
x  =  t0  − 3 + (t1  − 2t0  − 3) x  +
T (x)(1 − 2x − 2x2 ) −  1−3 
0x3  + · · ·

0x2  +
=  −3 + 
(−2)x. 

(8) 

t0 

so 

T (x)(1 − 2x − 2x 2 ) = 

= 

3 
− 3 − 2x 
1 − x 
2x2  + x 
1 − x 
,

and 

= 

(9) 

2x2  + x 
2x2  + x 
T (x) = 
(1 − x)(1 − 2x − 2x2 ) 
(1 − x)(1 − αx)(1 − βx) 
3, β  = 1 − √
√
3. This implies that T (x) can be expressed using partial fractions as 
where α = 1 + 
a 
c 
b
+ 
+
T (x) = 
1 − x 
1 − βx 
1 − αx 
To ﬁnd a, b, c, multiply both sides of (10) by (1 − αx)(1 − βx)(1 − x) to get 
2x 2  + x = a(1 − βx)(1 − x) + b(1 − αx)(1 − x) + c(1 − αx)(1 − βx). 
Letting x = 1 gives 
3 = c(1 − α)(1 − β ) = c(−3) 
so  c  =  −1.  Similarly,  letting x  = 1/α gives  (after a  little calculation) a  = 1/(3 − √
√
3),  and  letting 
x = 1/β gives b = 1/(3 + 
3). 
Finally, since 

(11) 

(10)

[x n ] (d/(1 − δx)) = dδn , 

we conclude that 

tn  = aαn  + bβn + c1n 
√
1 √
3)n  + 
(1 + 
3 − 
3

=

1 √
3 + 

3

(1 −

√

3)n  − 1 

� 

6 
Appendix 

Solutions to In-Class Problems Week 12, Mon. 

� 
�  � 
� 
Let [xn ]F (x) denote the coefﬁcient of xn  in the power series for F (x). Then, 
n + k − 1 
1 
αn . 
= 
k − 1 
(1 − αx)k 

[x n ]

(12)

Partial Fractions 

Here’s a particular case of the Partial Fraction Rule that should be enough to illustrate the general 
Rule. Let 

p(x) 
(1 − αx)2 (1 − βx)(1 − γx)3 
where α, β , γ  are distinct  complex numbers,  and p(x)  is a polynomial of degree  less  than  the de­
moninator, namely, less than 6. Then there are unique numbers a1 , a2 , b, c1 , c2 , c3  ∈ C such that 
b  + 
1 − βx 

c1  + 
1 − γx 

a1  + 
1 − αx 

a2 
(1 − αx)2 

r(x) ::= 

c2 
(1 − γx)2 

+ 

c3 
(1 − γx)3 

r(x) = 

+ 

Finding a Generating Function for Fibonacci Numbers 

The Fibonacci numbers are deﬁned by: 

f0  ::= 0 
f1  ::= 1 
fn  ::= fn−1  + fn−2 

(for n ≥ 2) 

Let F  be the generating function for the Fibonacci numbers, that is, 
F (x) ::= f0  + f1x + f2x 2  + f3x 3  + · · · 

Now we have 

f1x  +  f2x2  +  f3x3  + · · ·  . 
F (x) =  f0  + 
− 
− 
− · · ·  . 
−xF (x) = 
−
f1x2 
f2x3 
f0x
− 
− 
− · · ·  . 
−x2F (x) = 
f0x2 
f1x3 
F (x)(1 − x − x2 ) =  f0  + (f1  − f0 )x  + 0x + 0x + · · ·  . 
3 
2 
= 0 + 
1x. 

so 

F (x) = 

x 
1 − x − x2 

.

MIT OpenCourseWare
http://ocw.mit.edu 

6.042J / 18.062J Mathematics for Computer Science 
Spring 2010 

For information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms . 

