Massachusetts Institute of Technology 
6.042J/18.062J, Spring ’10: Mathematics for Computer Science 
Prof. Albert R. Meyer 

April 9 
revised April 10, 2010, 731 minutes 

Solutions to In-Class Problems Week 9, Fri. 

Problem 1. 
A license plate consists of either: 

•  3 letters followed by 3 digits (standard plate) 

•  5 letters (vanity plate) 

•  2 characters – letters or numbers (big shot plate) 

Let L be the set of all possible license plates. 

(a)  Express L in terms of 

A = {A, B , C, . . . , Z } 
D = {0, 1, 2, . . . , 9} 

using unions (∪) and set products (×). 

Solution. 

L = (A3  × D3 ) ∪ A5  ∪ (A ∪ D)2 

Solution. 

(b)  Compute |L|, the number of different license plates, using the sum and product rules. 
��

��

��

��
��
��

��
��
|L| =

∪ (A ∪ D)2 
× D3 ) ∪ A5 
(A3 
(A ∪ D)2
(A3  × D3 ) 
+

+

=

A5
= |A| 3  · |D| 3  + |A| 5  + |A ∪ D| 2 
= |A| 3  · |D| 3  + |A| 5  + (|A| + |D |)2 
· 
= 263  103  + 265  + 362  = 29458672 

Sum Rule

Product Rule 
Sum Rule 

Creative Commons 

2010,  Prof. Albert R. Meyer. 

� 

� 

2 

Solutions to In-Class Problems Week 9, Fri. 

Problem 2. 
An n-vertex numbered tree is a tree whose vertex set is {1, 2, . . . , n} for some n >  2.  We deﬁne the 
code of the numbered tree to be a sequence of n − 2 integers from 1 to n obtained by the following 
recursive process: 

If  there  are more  than  two  vertices  left, write down  the  father  of  the  largest  leafa ,  delete  this  leaf, 
and continue this process on the resulting smaller tree. 
If there are only two vertices left, then stop —the code is complete. 

aThe necessarily unique node adjacent to a leaf is called its father. 

For example, the codes of a couple of numbered trees are shown in the Figure 1.


Coding Numbered Trees

Tree
Tree

2

3

2

6

5

4

4

5

7

Code

4 3 2

6 5 6 2 2

1

1

3

Image by MIT OpenCourseWare.

Figure 1: 
(a)  Describe a procedure for reconstructing a numbered tree from its code. 
Solution.  The key observation is that, given a code of length n − 2, the numbers between 1 and n 
which do not appear in the code are precisely the leaves of the tree. This follows because the vertices 
left at the end of the process are both leaves.  So the procedure must have changed all the nonleaf 
vertices into leaves, and this implies that all the nonleaf vertices appear in the code. 
Hence,  the  largest missing number  is  a  leaf  attached  to  the ﬁrst number  of  the  code.  The  rest  of 
the  tree  can  now  be  reconstructed  by  deleting  the  ﬁrst  number  in  the  code,  henceforth  ignoring 

Solutions to In-Class Problems Week 9, Fri. 

3 

the  largest leaf, and proceeding recursively on the rest of the code.  (We’re using the obvious fact 
that what’s left after deleting a leaf from a tree is another tree.) 
More precisely,  the  reconstruction procedure applies  to any ﬁnite  tree whose vertex  set  is  totally 
ordered.  The  procedure  takes  two  parameters:  the  vertex  set,  V ,  and  a  length  |V | −  2  “code” 
sequence,  S ,  of  elements  in  V .  If  l  is  the  largest  element  in  V  which  does  not  appear  in  S ,  and 
f  is  the  ﬁrst  element  of  S ,  then  the  reconstructed  tree  is  obtained  by  adding  edge  (l, f )  to  the 
tree  reconstructed  by  calling  the  procedure  recursively with  ﬁrst  argument  V  − {l}  and  second 
argument  equal  to  the  code  obtained  by  erasing  the  initial  f  from  S .  The  procedure  terminates 
when |V | = 2, returning the edge between the two numbers in V . 

� 

(b)  Conclude  there  is  a  bijection  between  the  n-vertex  numbered  trees  and  {1, . . . , n} n−2 ,  and 
state how many n-vertex numbered trees there are. 

Solution.  There  are  exactly  as  many  n-vertex  numbered  trees  as  the  number  of  possible  code 
words,  that  is,  the  number  of  length  n − 2  sequences  of  integers  between  1  and  n.  So  there  are 
nn−2  numbered trees. 
The  reason  is  that  the  map  from  trees  to  codes  is  a  bijection.  To  see  this,  note  that  the  tree  re­
construction procedure ﬁnds the only possible tree with  that code.  So  there can’t be  two trees with 
the  same  code,  that  is,  the map  from  a  tree  to  its  code  is  an  injection.  But  since  the  reconstruc­
tion  procedure  ﬁnds  a  tree  for  every  possible  codeword,  the  map  from  trees  to  codes  is  also  a 
� 
surjection. 

Problem 3.  (a)  How many of  the billion numbers  in  the  range  from  1  to  109  contain  the digit  1? 
(Hint: How many don’t?) 

Solution.  We can count up how many do not contain the digit 1 and subtract.  So (total number) ­
(number without 1’s) = 109 − (99 − 1) = 612, 579, 512 (the −1 is for 0 which is not in our range).  � 

(b)  There are 20 books arranged in a row on a shelf. Describe a bijection between ways of choos­
ing  6  of  these  books  so  that  no  two  adjacent  books  are  selected  and  15-bit  strings with  exactly  6 
ones. 

Solution.  A  selection of  six among  twenty books on a  shelf  corresponds  in an obvious way  to a 
20-bit string with exactly six 1’s. For example, the 20-bit string with 1’s in exactly the 3rd, 4th, 5th, 
10th, 19th and 20th positions corresponds to selecting 3rd, 4th, 5th, 10th, 19th and 20th books on 
the shelf. 
So  the problem  reduces  to ﬁnding  a bijection between  20-bit  strings with  six nonadjacent 1’s  and 
15-bit strings with six 1’s. 
But  in  a  string,  s,  with  six  nonadjacent  1’s,  all  but  the  last  1  must  have  a  0  to  its  right.  So 
we  can  map  s  to  a  string  with  six  1’s  and  ﬁve  fewer  0’s  by  erasing  the  0’s  immediately  to  the 
right  of  each  of  the  ﬁrst  ﬁve  1’s.  For  example,  erasing  the  underlined  0’s  in  the  20-bit  string 
00010100101000001010 yields the 15-bit string 000110110000110. 

4 

Solutions to In-Class Problems Week 9, Fri. 

This map is a bijection because given any 15-bit string with six 1’s, there is a unique 20-bit string 
with nonadjacent 1’s that maps to it, namely, the string obtained by replacing each of the ﬁrst ﬁve 
� 
1’s in the 15-bit string by a 10. 

Problem 4. 

(a)  Let Sn,k  be the possible nonnegative integer solutions to the inequality 
· · · 
+ xk  ≤ n. 
x1  + x2  +
� 
�
Sn,k  ::=  (x1 , x2 , . . . , xk ) ∈ Nk  | (1) is true 
. 
Describe a bijection between Sn,k  and the set of binary strings with n zeroes and k ones. 

That is 

(x1 , x2 , . . . , xk ) 

Solution.  The notation 0x  indicates a length x string of 0’s. 
where s ::= �
←→ 
0x1 10x2 1 . . . 0xk 10n−s ,
k 
=1 xi . 
i
� 
� 
(b)  Let Ln,k  be the length k weakly increasing sequences of nonnegative integers ≤ n. That is 
Ln,k  ::=  (y1 , y2 , . . . , yk ) ∈ Nk  | y1  ≤ y2  ≤  · · · ≤ yk  ≤ n . 
Describe a bijection between Ln,k  and Sn,k . 
Solution.  (y1 , y2 , . . . , yk )  ←→  (y1 , y2  − y1 , y3  − y2 ,  . . . ,  yk  − yk−1 ). 
In the other direction, 

(x1 , x2 , . . . , xk )

←→ 

(x1 , x1  + x2 , x1  + x2  + x3 ,  . . . , 

� 
k
xi ).
i=1 

(1)

� 

� 

MIT OpenCourseWare
http://ocw.mit.edu 

6.042J / 18.062J Mathematics for Computer Science 
Spring 2010 

For information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms . 

