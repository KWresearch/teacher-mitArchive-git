Mathematics for Computer Science 
MIT 6.042J/18.062J

Asymptotic
Notation

Closed form for n!

Turn product into a sum taking logs: 
ln(n!) = ln( 1·2·3···(n – 1)·n ) =
ln 1 + ln 2 + · · · + ln(n – 1) + ln(n)

Albert R Meyer,          April 7, 2010 

lec 9W.1 

Albert R Meyer,          April 7, 2010 

lec 9W.2 

Closed form for n!

Integral Method to bound 

ln n
…
ln 5 
ln 4 
ln 3 

ln 2 

ln(x+1)

ln(x)

ln 3  ln 4 

ln 5 

…

ln 2 

ln
n-1

ln n

1

2

3

4

5

n–2 n–1

n

Closed form for n!

n )
 + 1 
ln(i
i=1




n
e

n ln


 (n + 1) ln



 + 0.6

n + 1
e

reminder:

Albert R Meyer,          April 7, 2010 

lec 9W.3 

Albert R Meyer,          April 7, 2010 

lec 9W.5 

Closed form for n!

Stirling’s Formula 

exponentiating:

A precise approximation: 


n



n! ~ 2n

n
e

Albert R Meyer,          April 7, 2010 

lec 9W.6 

Albert R Meyer,          April 7, 2010 

lec 9W.7 

1

Little Oh 
Little Oh:
o(·)
Asymptotically smaller :
Def: f(n) = o(g(n))
iff
f(n)
g(n)

lim
n 

= 0

o(·)
Little Oh:
n2 = o(n3 )
because
n2
n3 = lim
n 

lim
n

1
n

= 0

Albert R Meyer,          April 7, 2010 

lec 9W.13 

Albert R Meyer,          April 7, 2010 

lec 9W.14 

Big Oh 
Big Oh: O(·)

Big Oh: O(·)

Asymptotic Order of Growth: 
f(n) = O(g(n))


 < 

a technicality -- ignore now 

limsup
n 

f(n)
g(n)

because
3n2
n2

lim
n

= 3 < 

Albert R Meyer,          April 7, 2010 

lec 9W.15 

Albert R Meyer,          April 7, 2010 

lec 9W.16 

Theta: (·)
Same Order of Growth: 
f(n) = (g(n))
Def: f(n)=O(g(n))
            and
g(n)=O(f(n))

Asymptotics: Intuitive 
Summary 

f ~ g:
f = o(g):
f = O(g):
f = (g):

f & g nearly equal 
f much less than g
f roughly  g
f & g roughly equal

Albert R Meyer,          April 7, 2010 

lec 9W.17 

Albert R Meyer,          April 7, 2010 

lec 9W.18 

2

The Oh’s 

The Oh’s 

lemma:

If f = o(g) or f ~ g, then f = O(g) 
lim = 0 or lim = 1 IMPLIES lim <

If f = o(g), then g  O(f)

lim = 0

IMPLIES lim = 

Albert R Meyer,          April 7, 2010 

lec 9W.19 

Albert R Meyer,          April 7, 2010 

lec 9W.21 

Big Oh: O(·)

Equivalent definition:
f(n) = O(g(n))

c,n0
nn0.
f(n)  c·g(n)

Albert R Meyer,          April 7, 2010 

lec 9W.22 

(cid:2)
log
scale
(cid:3)

ln c

Big Oh: O(·)
f(x) = O(g(x))
green stays
below purple
from here on

g(x)

c·

f(x)

no
Albert R Meyer,          April 7, 2010 

lec 9W.23 

o(·)
Little Oh:
Lemma: xa  = o(xb) for a < b

Proof:

and b - a > 0 

so as x  ,

1
xb -a

 0

Little Oh:

o(·)

Lemma:

ln x = o(x)
for  > 0.

Albert R Meyer,          April 7, 2010 

lec 9W.24 

Albert R Meyer,          April 7, 2010 

lec 9W.25 

3

Little Oh:

o(·)

Little Oh:

o(·)

Lemma:

xn = o(ax)
for a > 1.

proofs:
L’Hopital’s Rule, 
McLaurin Series 
(see a Calculus text) 

Albert R Meyer,          April 7, 2010 

lec 9W.29 

Albert R Meyer,          April 7, 2010 

lec 9W.30 

Big Oh Mistakes
 “· = O(·)” defines a relation 
Don’t write O(g) = f.
Otherwise: x = O(x), so O(x) = x.
But 2x = O(x), so 
2x = O(x) = x,
2x = x.
  Nonsense! 

therefore

Team Problems 
Problems
1(cid:1)4

Albert R Meyer,          April 7, 2010 

lec 9W.31 

Albert R Meyer,          April 7, 2010 

lec 9W.35 

4

MIT OpenCourseWare 
http://ocw.mit.edu 

6.042J / 18.062J Mathematics for Computer Science 
Spring 2010 

For information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms . 

