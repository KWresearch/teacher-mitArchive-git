Mathematics for Computer Science
MIT 6.042J/18.062J

State machines 

State
Machines

step by step processes 
 (may step in response
  to input not today) 

Albert R Meyer, March 3, 2010 

lec 5W.1 

Albert R Meyer, March 3, 2010 

lec 5W.2 

State machines 
The state graph of a 99-bounded counter: 

Die Hard 

start state 

1
2
99
overflow
States: {0,1,…,99, overflow}
0  i < 99 
Transitions:

i+1

0

i

Image removed due to copyright restrictions.

99

overflow

overflow

overflow

Picture source: http://movieweb.com/movie/diehard3/ 

Albert R Meyer, March 3, 2010 

lec 5W.3 

Albert R Meyer, March 3, 2010 

lec 5W.4 

Die Hard 
Simon says: On the fountain, there 
should be 2 jugs, do you see them?
A 5-gallon and a 3-gallon.  Fill one 
of the jugs with exactly 4 gallons 
of water and place it on the scale 
and the timer will stop.  You must 
be precise; one ounce more or less 
will result in detonation.  If you're 
still alive in 5 minutes, we'll speak. 

Albert R Meyer, March 3, 2010 

lec 5W.5 

Die Hard 

Supplies:

3 Gallon Jug

Water

5 Gallon Jug

Image by MIT OpenCourseWare.
Albert R Meyer, March 3, 2010 
lec 5W.6 

3/1/10

1

Die Hard 

Die Hard 

Transferring water: 

Transferring water: 

3 Gallon Jug 

5 Gallon Jug 

3 Gallon Jug 

5 Gallon Jug 

Albert R Meyer, March 3, 2010 

lec 5W.7 

Albert R Meyer, March 3, 2010 

lec 5W.8 

Die hard state machine

State machines 

State:
amount of water in jugs: (b,l)
0  b  5, 0  l  3
Start State: (0,0)

Die Hard Transitions: 

1. Fill little jug:

(b, l)  (b, 3) for l < 3

2. Fill big jug:

(b, l)  (5, l) for b < 5 

3. Empty little jug:

(b, l)  (b, 0) for l > 0 

4. Empty big jug:

(b, l)  (0, l) for b > 0 

Albert R Meyer, March 3, 2010 

lec 5W.9 

Albert R Meyer, March 3, 2010 

lec 5W.10 

State machines 

5. Pour big jug into little jug 
(i) If no overflow, then (b,l)(0,b+l)
b+l  3 
(ii) otherwise (b,l) (b(3l),3)
6. Pour little jug into big jug. 
Likewise

Die Hard 
Simon’s challenge:
Disarm the bomb by putting 
precisely 4 gallons of water on 
the scale, or it will blow up.

(You can figure out how)

Albert R Meyer, March 3, 2010 

lec 5W.11 

Albert R Meyer, March 3, 2010 

lec 5W.12 

3/1/10

2

3/1/10

Die Hard once and for all 

Preserved Invariants 

What if have a 9 gallon jug instead? 

3 Gallon Jug  5 Gallon Jug  9 Gallon Jug 
Can you do it?  Can you prove it? 

Die hard once and for all
preserved invariant: 
P(state) ::= “3 divides the 
number of gallons in each jug.” 
P((b, l)) ::= (3 | b AND 3 | l)

Albert R Meyer, March 3, 2010 

lec 5W.20 

Albert R Meyer, March 3, 2010 

lec 5W.22 

Preserved Invariants 
Floyd’s Invariant Method
(just like induction) 
Base case: Show P(start)
Preservation case: Show
if P(q) and 
, then P(r)
r
Conclusion: P holds for all reachable 
states, including final state (if any) 

q

Die Hard Once & For All 

Corollary:  No state
(4,x) is reachable, so
Bruce Dies! 

Water

Image by MIT OpenCourseWare.

Albert R Meyer, March 3, 2010 

lec 5W.23 

Albert R Meyer, March 3, 2010 

lec 5W.24 

The Diagonal Robot 
the robot is on a grid 

y

The Diagonal Robot 
it can move diagonally 

y

2

1

0

Image by MIT OpenCourseWare.

2

1

0

Image by MIT OpenCourseWare.

0          1            2        3

x

0          1            2        3

x

Albert R Meyer, March 3, 2010 

lec 5W.25 

Albert R Meyer, March 3, 2010 

lec 5W.26 

3

The Diagonal Robot 
can it get from (0,0) to (1,0)? 

y

2

1

0

Image by MIT OpenCourseWare.

GOAL

0          1            2        3

?

x

Robot Preserved Invariant 
NO! preserved invariant: 
P((x, y)) ::= x + y is even
move adds ±1 to both x & y,
preserving parity of x+y.
Also, P((0, 0)) is true. 

Albert R Meyer, March 3, 2010 

lec 5W.27 

Albert R Meyer, March 3, 2010 

lec 5W.28 

Robot Preserved Invariant 

So all positions  (x,y) 
reachable from (0,0)
have x + y even.
But 1 + 0 = 1 is odd, so
(1,0) is not reachable.

Robert W Floyd (19342001)

Photograph removed due to copyright restrictions.

Albert R Meyer, March 3, 2010 

lec 5W.29 

Albert R Meyer, March 3, 2010 

lec 5W.38 

Eulogy by Knuth: http://www.acm.org/pubs/membernet/stories/floyd.pdf
Picture source: http://www.stanford.edu/dept/news/report/news/november7/floydobit-117.html 

Team Problems 
Problems
1 & 2 

Albert R Meyer, March 3, 2010 

lec 5W.39 

3/1/10

4

MIT OpenCourseWare
http://ocw.mit.edu

6.042J / 18.062J Mathematics for Computer Science
Spring 2010

For information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms .

