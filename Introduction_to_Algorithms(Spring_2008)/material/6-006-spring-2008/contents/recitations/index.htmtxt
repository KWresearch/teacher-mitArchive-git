



















[MIT_OpenCourseWare,_Massachusetts_Institute_of_Technology]
                              [Submit ../../common/ [Click_to_visit_our
Subscribe to the [Enter Email images/               Facebook_page.][Click
OCW Newsletter   ]            button_subscribe.png] to_visit_our_Twitter
                                                    feed.]
HelpÂ Â Â |Â Â Â Contact_Us
Â 
    * [Click_for_site_home_page.]
    * Courses
      ***** Find courses by: *****
          o Topic
          o MIT_Course_Number
          o Department
      ***** Collections *****
          o Audio/Video_Lectures
          o New_Courses
          o Most_Visited_Courses
          o OCW_Scholar_Courses
          o Supplemental_Resources
      Â 
      ***** Cross-Disciplinary Topic Lists *****
          o Energy
          o Entrepreneurship
          o Environment
          o Introductory_Programming
          o Life_Sciences
          o Transportation
      Â 
      Â 
      ***** Translated Courses *****
          o ç¹é«å­_/_Traditional_Chinese
          o ç®ä½å­_/_Simplified_Chinese
          o EspaÃ±ol_/_Spanish
          o PortuguÃªs_/_Portuguese
          o à¸ à¸²à¸©à¸²à¹à¸à¸µà¸¢à¸_/_Thai
          o ÙØ§Ø±Ø³Û_/_Persian
          o TÃ¼rkÃ§e_/_Turkish
          o (ë¹ëì¤)íêµ­_/_Korean
          o More...
    * About
          o About_MIT_OpenCourseWare
          o Site_Stats
          o OCW_Stories
          o OpenCourseWare_Consortium
          o Media_Coverage
          o Newsletter
          o Press_Releases
          o OCW's_Next_Decade
    * Donate
          o Make_a_Donation
          o Why_Donate?
          o Become_a_Course_Champion
          o Our_Supporters
          o Other_Ways_to_Contribute
          o Shop_OCW
          o Become_a_Corporate_Sponsor
    * Featured Sites
          o Highlights_for_High_School
          o MITx
          o Teaching_Excellence_at_MIT
[Search              ] [Submit ../../common/images/button_search.png] Advanced
                                                                      Search
Home Â» Courses Â» Electrical_Engineering_and_Computer_Science Â» Introduction
to_Algorithms Â» Recitations
******  Recitations  ******
    * Course_Home
    * Syllabus
    * Calendar
    * Readings
    * Lecture_Notes
    * Recitations
    * Assignments
    * Exams
    * Related_Resources
These recitation slides are courtesy of Victor Costan, one of the course TAs,
and are used with permission.
                              Recitations files.
RECÂ TOPICS                              SUPPORTINGÂ FILES
Introduction and document distance
R1     Document distance in Python         Â 
       (docdist{1,2,3,4}.py) (PDF)
                                           Zipped data (numbers) (ZIP) (This
       Python cost model, review for       zip file includes: 2 .jpg files, 1
R2     asymptotic notation and mergesort   .gz file, 1 .tiff file, 1 .numbers
       (PDF)                               file, and 1 .pkginfo file.)
                                           Python_Cost_Model
Binary search trees
R3     Binary search trees (PDF)           Code for binary search trees
                                           augmented with subtree size (PY)
R4     AVL Trees (balanced binary search   Code for AVL trees (uses the BST
       trees) (PDF)                        code from R3) (PY)
Hashing
R5     Hashing in Python, mutability (PDF) The dangers of mutable dictionary
                                           keys (PY)
R6     Karp-Rabin review, rolling hashes   Rolling hash code (PY)
       principles and code (PDF)
       Open addressing: theory review,
R7     Python code                         Open addressing code (PY)
       More rolling hashes (PDF)
Sorting
       Overview of sorting methods
R8     Heaps as data structures:           Â 
       principles, sorting, priority
       queues (PDF)
R9     Quiz review: interesting problems   Â 
       (PDF)
R10    Counting, radix and bucket sorting, Â 
       gas simulation
Searching
R11    Breadth-first search and depth-     Code for breadth-first search (PY)
       first search (PDF)                  Code for depth-first search (PY)
Shortest paths
R12    Assistance for problem set (PDF)    Â 
       Generic shortest-path algorithm:
R13    concepts, properties                Â 
       Bellman-Ford: examples, negative-
       cost cycles
       Hands-on Dijkstra: pseudocode,
       preconditions, examples, why it
R14    works                               Â 
       Priority queues: review, extended
       Python implementation (PDF)
R15    Array implementation of Dijkstra    Â 
Dynamic programming
       Hands-on dynamic programming: big
       ideas, memoization in Fibonacci,
R16    crazy cards, Dijkstra and Bellman-  Â 
       Ford algorithm as dynamic
       programming (PDF)
       More dynamic programming: beating
R17    Super Mario Brothers, getting       Â 
       points back on tests (LCS), Crazy
       Eights (PDF)
       Even more dynamic programming:
R18    maximum-sum sub-array, more Tetris  Â 
       (PDF)
       Knapsack and its variants,
R19    structural dynamic programming:     Â 
       covering a tree with templates,
       dominating set
Numerics
                                           Live Python Coding problems (problem
                                           statement, tests, and solutions are
                                           included):
       Dynamic programming practice: live  - Matrix chain multiplication (ZIP)
       Python coding, dominating sets,     (This zip file includes: 3 .py
R20    structural dynamic programming:     files, 1 .pyc file, 1 .rb file, and
       covering a tree with templates      6 data files.)
                                           - Longest zig-zag subsequence (ZIP)
                                           (This zip file includes: 3 .py
                                           files, 1 .pyc file, 1 .rb file, and
                                           4 data files.)
       Divide and conquer vs. dynamic
R21    programming on problems: matrix     Â 
       multiplication, tower, max-sum
       subarray, closest pair
       Numerics review, Strassen's         Strassen's algorithm for fast matrix
R22    algorithm for matrix multiplication multiplication is covered in CRLS,
                                           chapter 28, pp. 735-742.
Beyond 6.006
R23    Review for the final exam (PDF)     Â 
*** Courses ***
    * Find_by_Topic
    * Find_by_Course_Number
    * Find_by_Department
    * Audio/Video_Courses
    * OCW_Scholar_Courses
    * Most_Visited_Courses
    * New_Courses
    * Translated_Courses
    * Supplemental_Resources
*** About ***
    * About_OpenCourseWare
    * Site_Stats
    * OCW_Stories
    * OCW_Consortium
    * Media_Coverage
    * Newsletter
    * Press_Releases
    * OCW's_Next_Decade
*** Donate ***
    * Make_a_Donation
    * Why_Donate?
    * Become_a_Course_Champion
    * Our_Supporters
    * Other_Ways_to_Contribute
    * Shop_OCW
    * Become_a_Corporate_Sponsor
*** Featured Sites ***
    * Highlights_for_High_School
    * MITx
    * Teaching_Excellence_at_MIT
*** Tools ***
    * Help_&amp;_FAQs
    * Contact_Us
    * Advanced_Search
    * Site_Map
    * Privacy_&amp;_Terms_of_Use
*** About MIT OpenCourseWare ***
MIT OpenCourseWare makes the materials used in the teaching of almost all of
MIT's subjects available on the Web, free of charge. With more than 2,000
courses available, OCW is delivering on the promise of open sharing of
knowledge.
[Massachusetts_Institute_of_Technology_logo_and_name.] [OpenCourseWare
Consortium_logo.] [Creative_Commons_logo_with_terms_BY-NC-SA.]
Â© 2001â2013
Massachusetts Institute of Technology
Your use of the MIT OpenCourseWare site and materials is subject to our
Creative_Commons_License and other terms_of_use.
Â 
