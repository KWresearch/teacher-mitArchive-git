



















[MIT_OpenCourseWare,_Massachusetts_Institute_of_Technology]
                              [Submit ../../common/ [Click_to_visit_our
Subscribe to the [Enter Email images/               Facebook_page.][Click
OCW Newsletter   ]            button_subscribe.png] to_visit_our_Twitter
                                                    feed.]
HelpÂ Â Â |Â Â Â Contact_Us
Â 
    * [Click_for_site_home_page.]
    * Courses
      ***** Find courses by: *****
          o Topic
          o MIT_Course_Number
          o Department
      ***** Collections *****
          o Audio/Video_Lectures
          o New_Courses
          o Most_Visited_Courses
          o OCW_Scholar_Courses
          o Supplemental_Resources
      Â 
      ***** Cross-Disciplinary Topic Lists *****
          o Energy
          o Entrepreneurship
          o Environment
          o Introductory_Programming
          o Life_Sciences
          o Transportation
      Â 
      Â 
      ***** Translated Courses *****
          o ç¹é«å­_/_Traditional_Chinese
          o ç®ä½å­_/_Simplified_Chinese
          o EspaÃ±ol_/_Spanish
          o PortuguÃªs_/_Portuguese
          o à¸ à¸²à¸©à¸²à¹à¸à¸µà¸¢à¸_/_Thai
          o ÙØ§Ø±Ø³Û_/_Persian
          o TÃ¼rkÃ§e_/_Turkish
          o (ë¹ëì¤)íêµ­_/_Korean
          o More...
    * About
          o About_MIT_OpenCourseWare
          o Site_Stats
          o OCW_Stories
          o OpenCourseWare_Consortium
          o Media_Coverage
          o Newsletter
          o Press_Releases
          o OCW's_Next_Decade
    * Donate
          o Make_a_Donation
          o Why_Donate?
          o Become_a_Course_Champion
          o Our_Supporters
          o Other_Ways_to_Contribute
          o Shop_OCW
          o Become_a_Corporate_Sponsor
    * Featured Sites
          o Highlights_for_High_School
          o MITx
          o Teaching_Excellence_at_MIT
[Search              ] [Submit ../../common/images/button_search.png] Advanced
                                                                      Search
Home Â» Courses Â» Electrical_Engineering_and_Computer_Science Â» Introduction
to_Algorithms Â» Calendar
******  Calendar  ******
    * Course_Home
    * Syllabus
    * Calendar
    * Readings
    * Lecture_Notes
    * Recitations
    * Assignments
    * Exams
    * Related_Resources
This table provides information about both the lecture (L) and recitation (R)
sessions.
                               Course schedule.
SESÂ TOPICS                                                 KEYÂ DATES
Introduction and document distance
L1     Introduction and document distance
R1     Document distance in Python (docdist{1,2,3,4}.py)
L2     More document distance, mergesort
R2     Python cost model, review for asymptotic notation and
       mergesort
Binary search trees
L3     Airplane scheduling, binary search trees
R3     Binary search trees
L4     Balanced binary search trees
R4     AVL Trees (balanced binary search trees)
Hashing
L5     Hashing I: chaining, hash functions                    Problem set 1 due
R5     Hashing in Python, mutability
L6     Hashing II: table doubling, Karp-Rabin
R6     Karp-Rabin review, rolling hashes principles and code
L7     Hashing III: open addressing
R7     Open addressing: theory review, Python code
       More rolling hashes
Sorting
L8     Sorting I: heaps
       Overview of sorting methods
R8     Heaps as data structures: principles, sorting,
       priority queues
L9     Sorting II: heaps                                      Problem set 2 due
L10    Sorting III: lower bounds, linear-time sorting
R9     Quiz review: interesting problems                      Quiz 1
L11    Sorting IV: stable sorting, radix sort
R10    Counting, radix and bucket sorting, gas simulation
Searching
L12    Searching I: graph search, representations, and
       applications
L13    Searching II: breadth-first search and depth-first     Problem set 3 due
       search
L14    Searching III: topological sort and NP-completeness
R11    Breadth-first search and depth-first search
Shortest paths
L15    Shortest paths I: intro
R12    Assistance for problem set
L16    Shortest paths II: Bellman-Ford                        Problem set 4 due
R13    Generic shortest-path algorithm: concepts, properties
       Bellman-Ford: examples, negative-cost cycles
L17    Shortest paths III: Dijkstra
       Hands-on Dijkstra: pseudocode, preconditions,
R14    examples, why it works
       Priority queues: review, extended Python
       implementation
L18    Shortest paths IV: Dijkstra speedups
R15    Array implementation of Dijkstra                       Quiz 2
Dynamic programming
L19    Dynamic programming I: memoization, Fibonacci, Crazy
       Eights, guessing
       Hands-on dynamic programming: big ideas, memoization
R16    in Fibonacci, crazy cards, Dijkstra and Bellman-Ford
       algorithm as dynamic programming
L20    Dynamic programming II: longest common subsequence
       (LCS), parent pointers
       More dynamic programming: beating Super Mario
R17    Brothers, getting points back on tests (LCS), Crazy
       Eights
       Dynamic programming III: text justification,
L21    parenthesization, knapsack, pseudopolynomial time,     Problem set 5 due
       Tetris training
R18    Even more dynamic programming: maximum-sum sub-array,
       more Tetris
L22    Dynamic programming IV: piano fingering, structural DP
       (trees), vertex cover, dominating set, and beyond
       Knapsack and its variants, structural dynamic
R19    programming: covering a tree with templates,
       dominating set
Numerics
L23    Numerics I
       Dynamic programming practice: live Python coding,
R20    dominating sets, structural dynamic programming:
       covering a tree with templates
L24    Numerics II                                            Problem set 6 due
       Divide and conquer vs. dynamic programming on
R21    problems: matrix multiplication, tower, max-sum
       subarray, closest pair
R22    Numerics review, Strassen's algorithm for matrix
       multiplication
Beyond 6.006
L25    Beyond 6.006: follow-on classes, geometric folding
       algorithms
R23    Review for the final exam
*** Courses ***
    * Find_by_Topic
    * Find_by_Course_Number
    * Find_by_Department
    * Audio/Video_Courses
    * OCW_Scholar_Courses
    * Most_Visited_Courses
    * New_Courses
    * Translated_Courses
    * Supplemental_Resources
*** About ***
    * About_OpenCourseWare
    * Site_Stats
    * OCW_Stories
    * OCW_Consortium
    * Media_Coverage
    * Newsletter
    * Press_Releases
    * OCW's_Next_Decade
*** Donate ***
    * Make_a_Donation
    * Why_Donate?
    * Become_a_Course_Champion
    * Our_Supporters
    * Other_Ways_to_Contribute
    * Shop_OCW
    * Become_a_Corporate_Sponsor
*** Featured Sites ***
    * Highlights_for_High_School
    * MITx
    * Teaching_Excellence_at_MIT
*** Tools ***
    * Help_&amp;_FAQs
    * Contact_Us
    * Advanced_Search
    * Site_Map
    * Privacy_&amp;_Terms_of_Use
*** About MIT OpenCourseWare ***
MIT OpenCourseWare makes the materials used in the teaching of almost all of
MIT's subjects available on the Web, free of charge. With more than 2,000
courses available, OCW is delivering on the promise of open sharing of
knowledge.
[Massachusetts_Institute_of_Technology_logo_and_name.] [OpenCourseWare
Consortium_logo.] [Creative_Commons_logo_with_terms_BY-NC-SA.]
Â© 2001â2013
Massachusetts Institute of Technology
Your use of the MIT OpenCourseWare site and materials is subject to our
Creative_Commons_License and other terms_of_use.
Â 
