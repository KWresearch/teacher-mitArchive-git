1.4.2 Cholesky Decomposition 
 
We mention now the special form that LU decomposition takes for a matrix A that is 
symmetric (AT=A) and positive-definite, i.e. 
 

vTAv > 0 for all v∈ RN, v ≠ 0     (1.4.2-1) 

 
The meaning of positive definiteness will be made clearer in our later discussion of 
matrix eigenvalues.  For now, we merely state the definition above, and note that many 
matrices satisfy this property. 
 
For example, the matrix below, common in the numerical solution of PDE’s 
 

A = 








 
Is positive-definite since 
 

    2
1
−


    2    1
1
−
−

       
2
       
1
        
1-

−

          
      
1-
          
2


     (1.4.2-2) 

Av = 

    2
1
−


    2    1
1
−
−

       
2
       
1
        
1-

−

      
          
          
1-
2
















2

v
1
v
v
v

3

4

=















2v
1
v
−
1
v
−
v
−

v
−
2
2v
+
2
2v
+
2v
+

2

3

3

4

−
−

v
3
v

4








     (1.4.2-3) 

vTAv = 

( vAv •

)  = [ v1   v2   v3   v4] 








2v
1
v
−
1
v
−
v
−

v
−
2
2v
+
2
2v
+
2v
+

2

3

3

4

−
−

v
3
v

4

 








 

 
 

= v1(2v1-v2) + v2(-v1 + 2v2 – v3) + v3(-v + 2v3 – v4) + v4(-v3 + 2v4) 
2 – v1v2 – v1v2 + 2v2
2 – v2v3 + 2v3
2 – v2v3 – v3v4 + 2v4
2 – v3v4 
= 2v1
2 + v4
2 + v3
2 + v2
2) – 2(v1v2 + v2v3 + v3v4)     (1.4.2-4) 
= 2(v1

 
As first term in positive and always larger in magnitude than the second, vTAv > 0. 
 
 
 
 
 
 
 

 
 
For such a matrix A with AT = A, vTAv > 0, we can perform a Cholesky decomposition 
to write 

A = LLT     (1.4.2-5) 

 
Note that  

AT = (LLT)T = (LT)TLT = LLT = A     (1.4.2-6) 

 
And 
 
VTAv = vTLLTv = (LTv)T(LTv) = (LTv) • (LTv) > 0    for v ≠  0, A non-singular    (1.4.2-7) 
 
Where we have used the property for determinants (AB)T = BTAT     (1.4.2-8) 
 
Therefore, the equation A = LLT immediately implies that A is symmetric and positive-
definitive. 
 
Advantages of Cholesky decomposition, when it can be used: 
 

 
 
 
 
 
 
 
 
 
 

- 
- 
- 

cut storage requirement since only need L 
stable even without pivoting 
faster then LU decomposition By a factor of 2 

 
If we write out (1.4.2-5) explicitly, 
 

A = LLT = 

11

21

22

L


L
L     

L
L     
L     

33
32
31

          
:  
: 
:
       
          
          
:


L     
L    
    
L    
L
...


N3

N2

N1

NN










L     
...
    
L     
L    
L
11
12
13
1N
          
L
L    
    
...
L     
22
21
    
...
L    
L
          
          
3N
33
          
          
        
:
     
:
:
      
          
          
          
L
      

2N

NN

     (1.4.2-9) 



















 
We can perform the multiplication to obatain, 
 

L11L11 = a11 => L11= (a11)(1/2)     (1.4.2-10) 

 
 
 
 
 
Next, multiply row 1 of L with column 2 of LT, 
 

 
Next, row #1 of L with column #3 of LT, 
 

a12 = L11L21     =>     L21 = a12/L11     (1.4.2-11) 

 

 
 
 
 
 
 
 
 

a13 = L11L31     =>     L31 = a13/L11     (1.4.2-12) 

Similarly for j = 4, …., N we have Lj1 = a1j/L11     (1.4.2-13) 

 
This gives us the values of the 1st column of L (and 1st row of LT). 
 
Next, we move to the 2nd column of L. 
 
Multiplying row #2 of L with column #2 of LT, 
 

2)(1/2)     (1.4.2-14) 
L21L21 + L22L22 = a22     =>     L22 = (a22 – L21

 
Then, multiplying row #2 of L with column #3 of LT, 
 

L21L31 + L22L32 = a23     =>     L32 =  (a23 – L21L31)/L22     (1.4.2-15) 

 
And row #2 of L with column #j (j=4,…,N) of LT, 
L21Lj1 + L22Lj2 = a2j     =>     Lj2 = (a2j – L21Lj1)/L22     (1.4.2-16) 

 
This gives us the elements of the 2nd column of L (2nd row of LT). 
 
In general, to determine the elements of the ith column of L, we first multiply the ith row 
of L with ith column of LT to obtain 
 

Li1

2 + … + Li, i-1
2 = aii      (1.4.2-17) 
2 + Lii
2 + Li2
1i
]∑−
ikL (1/2)     (1.4.2-18) 
=>     Lii = [aii - 
2
1k
=

 
 
Then for j = i+1, i+2, …, N we multiply the ith row of L by the jth column of LT to obtain 
 + … + Li, i-1Lj, i-1 + LiiLji
 = aij      (1.4.2-19)  
Li1Lj1 + Li2Lj2
 
So 
 
Lji = [aij -

ii     (1.4.2-20) 
]/L

ikL

jkL

1i
∑−
1k
=

 
This gives us the following algorithm for performing a Cholesky decomposition: 
 
For i = 1, 2, …, N        % each column of L 
 

1i
−
(cid:190)  Lii (cid:197) [aii -  ∑ ]
ikL (1/2)    
2
1k
=
 
For j = i+1, i+2, …, N     % each element below the diagonal in column #i of L 
1i
∑−
o  Lji = [aij -
jkL
ikL
]/L
ii      
1k
=

 
end 

 
end   
 
 
 
 
 
 
 
 

