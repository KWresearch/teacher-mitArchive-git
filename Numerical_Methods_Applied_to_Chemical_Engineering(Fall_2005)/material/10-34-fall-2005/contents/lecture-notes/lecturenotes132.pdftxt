1.3.2 Multiplication of Matrices/Matrix Transpose 
 
In section 1.3.1, we considered only square matrices, as these are of interest in solving 
linear problems Ax = b. 
 
The interpretation of a matrix as a linear transformation can be extended to non-square 
matrix.  If we consider a M x N real matrix A, then A maps every vector v∈ RN into a 
vector (now of dimensions m, not N) A v∈ RN, according to the rule 
 

+
+

va
12
2
va
22

2

...
++
...
++

va
1N
N
va
2N

N

+

va
m2

2

...
++

a

v

N

mN








     (1.3.2-1) 

Av = 

11

a
     
...
     
a
     
a

12
1N

a
     
a
     
...
     
a

22
21

          
          
:   
:  
:

     
a
     
a
...
a
    


m2

m1

2N

mN

v


v

:


v









1

12

N








=

1

va

11
1

va

21

:

va

1m1

 
Note that the product Av is defined only if the number of columns of A equals the 
dimensions (# of components) of v. 
 
We give the M x N matrix A, with all aij real, the following pictorial interpretation: 
 
 
 
          RN                                                                                                               RN 
           v                                 A                                                     Av 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 

The interpretation of non-square matrices as linear transformations provides the 
following rule for multiplying two real matrices: 
 
Let A be a M x P real matrix, and let B be a P x N real matrix.  We define C = AB to be 
the M x N matrix (also real) that performs the same transformation to a vector v∈ RN as 
1st applying B, then A. 
 
          RN                       B                              Rp                               A                           RM 
           v                                 Bv                                                  A(Bx) 
 
 
 
 
 
 
 
First, to v∈ RN we apply B, 
 

C = AB 

 

 

 

Bv = 

11

b     
...
     
b     
b

1N
12

b
b     
     
...
b     

21
22

          
          
:   
:  
:

b     
b
b     
...
    



pN

p2

p1

2N

v


v

:


v










1

12

N








=

 
We then apply A to Bv ∈ Rp, 
 

∑



∑


:

∑



N
1j
=
N
1j
=

vb
j
1

j

vb
j
2

j

N
1j
=

vb
pj

j










     (1.3.2-2) 

A(Bv) = 

11

12

a
     
...
     
a
     
a

1p

a
     
a
     
...
     
a

21
22

          
:  
          
:   
:

     
a
a
     
...
a
    



m2

m1

2p

mp

 
If we compare to 
 









∑



∑


:

∑



N
1j
=
N
1j
=

vb
j
1
vb
j
2

j

j

N
1j
=

vb
pj

j










=

∑



∑


:

∑



p
k
1
=
p
k
1
=

a
k
1
a

2

k

∑
N
1j
=
∑
N
1j
=

vb
kj
vb
kj

j

j

p
k
1
=

a

mk

∑

N
1j
=

vb
kj

j

     (1.3.2-3) 










c
c
c
     
...
     
     

11
12
1N

     
     
...
     
c
c
c

22
21

          
:  
          
:   
:

     
c
     
c
...
c
    

m1

m2

2N

mN

v

1

v

12
:


v


N















=

∑



∑


:

∑



N
1j
=
N
1j
=

vc
j
j
1
vc
j
2

j

N
1j
=

vc
jmj










     (1.3.2-4) 

Cv = 

 
 

 We see that rearranging (1.3.2-2) yields 
 
 

j

p
1k
=
p
1k
=

A(Bv) = 

(
∑ ∑
N


1j
=
(

∑ ∑
N

1j
=

:

(
∑ ∑
N


1j
=

)
vba
1k
kj
)
vba
2k
kj
)
vba
j
mk
kj
 
The (i,j) element of the matrix C = AB is therefore 
 










p
1k
=

=

∑



∑


:

∑



j

N
1j
=
N
1j
=

vc
1j
vc
2j

j

j

N
1j
=

vc
jmj










     (1.3.2-5) 

Cij =  ∑ =
p
1k

ik ba
kj
 
We compute this element by summing the product of elements A along row #I from left 
(cid:198) right with those elements of B in column #j from top (cid:198) bottom. 
 

      (1.3.2-6) 

AB = 

 

2p

11

21

a
a

a
     
...
     
1p
     
...
     
a

a
     

12

     
a

22

→
a
     
...
     
a 
a
     

i1
i2

          
:   
:
      
:
      
:


...
     
a
a
     
a
    



m1

m2

          

ip

mp

  












11

b    
... 
b    
...
     
b     
b

    1j
1N
12

b
b     
     
...
b    
...
b    
   

21
2j
22

          
          
:  
:
   
:
↓

b     
  b     
b
...
b    
...
    


pj

pN

p2

p1

2N

  









= 

row #i 

:




:




ijc
.....
.....


:




:


column # j 
(1.3.2-7) 
  
 

 

 

 

 

 

    column # j   

  
 
row # i 
 
We note that the product of two matrices A and B, C = AB, is defined only if the number 
of columns of A equals the number of rows of B. 
 
Note also that in general AB 

commutator of A and B as  

     

 BA (1.3.2-8).  We define the 
≠
[A,B] ≡ A B – BA     (1.3.2-9) 
 

Note that we can interpret our rule for multiplying a vector v∈ RN by an M x N matrix A 
by considering v to be a matrix of dimension N x 1, i.e. a  column vector. 
 

11

a
     
...
     
a
     
a

1N
12

a
     
a
     
...
     
a

21
22

          
          
:   
:
:  

a
     
     
a
...
    


a

m2

m1

2N

mN

 








v


v

:


v


1

2

N








 = 

∑



∑

:


∑



N
k
=
N
k
=

va
k
k
1 1
va
k
2

1

k

N
k
=

1

va
kmk










     (1.3.2-10) 

 
This is the convention that we will use.  We can also write v as a row vector by taking the 
transpose, 
 

vT = [v1     v2   …   vN]     (1.3.2-11) 
 

We see that vT is a 1 x N matrix. 
 can therefore be written for v, w ∈ RN 
wv •
The dot product 
 

wv • = vTw = [v1     v2   …   vN]

 = v

1w1 + v2w2 + … + vNwN     (1.3.2-12) 

w


w

:


w


1

2

N








 
We define a matrix transpose operation on a real matrix A of M rows and N columns 
as 
 

AT = 

11

     
a
... 
a    
a
     
a

          
13
12

a
     
a
a    
     
a
...
     

21
22
23

          
:  
          
:   
:

a
a
     
a   
...
     
     


a

m1

m3

m2

1N

2N

mN

T








=

 

m1

a
     
...
     
     
     
a
...
     
a
... 

11

21

12

a
     
a


a
     
a

22
a
      
a

13
23
      

          
:   
:


a
a
     


2N

1N

...
     
a
    

  
          

  

m2

m3

mN

     (1.3.2-13) 










 
If A is an M x N matrix, AT is N x M and (AT)ij = aji     (1.3.2-14) 
 
 

 

