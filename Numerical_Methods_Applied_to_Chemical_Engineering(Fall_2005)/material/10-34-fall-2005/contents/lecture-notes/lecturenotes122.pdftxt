1.2.2 Gauss-Jordan Elimination 
 
In the method of Gaussian elimination, starting from a system A
form 
 

x =  of the general 
b

a
     
...
a
a
a

     
1n
     
13
     
12
11

a
a
a
...
a
     
     
23
     
22
     
21
2n

        
      
          
:
:   
:
:


        
      
:
          
:   
:
:


a
a
a
...
nna
     

     
     
n3
     
n2
n1

1

2

 = 










b


b


:


:

b


x


x

:


:


x










N
 
x = ’ after 
b

1

2

n










2
3

            (1.2.2-1) 

3N

 FLOP’s that is of upper 

is converted to an equivalent system A’
triangular form 
 

a
     
...
     
a
     
a
     
a
'
'
'
11
13
12
         
a
a
...
     
a
     
     
'
'
22
23
          
         
a
...
     
a
     
'
33
          
          
      
a
          









'
1N
'
2N
'
3N
'
NN









x


1


]x
2


:




:




x



N

=

'
1
'
2
'
3

'
N

b
b
b







:

b













     (1.2.2-2) 

 
At this point, it is possible, through backward substitution, to solve for the unknowns in 
N 2
the order xN, xN-1, xN-2, … in 
2
 
In the method of Gauss-Jordan elimination, one continues the work of elimination, 
placing zeros above the diagonal. 
To “zero” the element at (N-1, N), we write the last two equations of (1.2.2-2) 
 

 steps. 

    (1.2.2-3) 






a
a

'
1N1,N
−
−
x
'
NN,

N

+

x
1N
−
b
'
=
N

a

'
N1,N
−

x

N

=

b

'
1N
−

 
 
 
 
 
 
 
 
 

λ

We then define 

a
'
N1,N
−
N1,N
−
a
'
NN
And replace the N-1st row with the equation obtained after performing the row operation 
 

    (1.2.2-4) 

=

+
x

x
(a
'
1N1,N
1N
−
−
−
λ
(a
'
−
N1,N
NN
−
x
a
+

'
1N1,N
−
−

1N
−

a

N
(a

=

b

'
1N
−

)

N

x
'
N1,N
−
)b
'
=
N

'
N1,N
−

−

λ

a

'
NN

)x

N

=

b

'
1N
−

−

λb
'
N

N1,N
−

N1,N
−

(1.2.2-5) 

b

' '
1N
−

=

b

'
1N
−

−

λb
'
N
 

    (1.2.2-6) 

N1,N
−

a

''
1N
−

=

a

'
N1,N
−

−

λ

a

'
NN

a  
=

'
N1,-N

−

(

N1,N
−

)a

'
NN

=

0

    (1.2.2-7) 

a
'
N1,N
−
a
'
NN

 
Defining  

and noting 
 

 
After this row operation the set of equations becomes 
 
 

1

2

3

b
b
b

'
1
'
2
'
3













a
     
a
      
...
     
a
     
a
     
a
'
'
'
'
'
12
13
1-N1,
1.N
11
         
a
     
a
...
      
a
     
a
     
'
'
'
'
22
23
1-N2,
N2,
          
         
a
...
      
a
     
a
     
'
'
'
33
1-N3,
N3,
          
          
          
          
:  
          
: 
          
          
          
       
0   
a
' '
   1-N1,-N
          
          
          
          
a
          
'
NN
 
We can continue this process until the set of equations is in diagonal form 
 
 







:

b


b


x


x

x


:


x

x





































' '
1-N
'
N

=

1-N

N

     (1.2.2-2) 

a
' ' '
11
     
a
' ' '
22
          
a
' ' '
33
     
          
a









 ' ' '
NN









x


x

:


:


x


1

2

N










=

' ' '
1
' ' '
2
' ' '
3

' ' '
N

b
b
b







:

b













     (1.2.2-9) 

 

Dividing each equation by the value of its single coefficient yields 
 

1




1


1




:




1



x


x

x


:


x


1

2

3

N










=

b
' ' '
1
a
' ' '
11
b
' ' '
2
a
' ' '
22
b
' ' '
3
a
' ' '
33
:

b
' ' '
N
a
' ' '
NN

































     (1.2.2-10) 

 
The matrix on the left that has a one everywhere along the principal diagonal and zeros 
everywhere else is called the identity matrix, and has the property that for any vector v, 
 

Iv = v     (1.2.2-11) 
 
The form (1.2.2-10) therefore immediately gives the solution to the problem. 
 
In practice, we use Gaussian Elimination, stopping at (1.2.2-2) to begin backward 
substitution rather than continue the elimination process because backward substitution is 
so fast, N2 << 2N3/3 for all but small problems. 
 
We therefore do not consider the method of Gauss-Jordan Elimination further. 
 
 
 

