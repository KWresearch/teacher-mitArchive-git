MIT 20.109 Module 1 Class 2 notes (DRAFT)� 

13 September 2007 

Genome Engineering 

Drew Endy (http://mit.edu/endy/) 

Questions Introduced Last Time 

A. What can we infer about the design of a genome by considering the physical 
problems that a biological systems solves? 

B. How is genetic “real estate” divvied up? 

C. What makes a good genetic “part”? What makes a good genome design? 

Questions for Today 

D. What is a standard biological part? 

E. What is reliable physical composition?  And, reliable functional composition? 

F. How does synthetic biology relate to genetic engineering? 

ANNOUNCEMENT 

“A framework for programming integrated RNA devices” 

Christina Smolke, Small Western Trade School 

4-5p today in 32-141 

17. Last time we ended up considering the following sequence of DNA, the basic bio­
logical functions encoded on the DNA, and whether or not this particular genetic archi­
tecture might be “good” or “bad.” 

�

 gc[atgcgcaaagggaggcgac{ATGgcaggttacggcgctaa]aggaatccgaaatTGA}aaa 

18. It�s hard for us to answer the question of good/bad architecture because we do not 
know (and perhaps, cannot know) the absolute purpose of this particular piece of DNA. 
What is the objective that nature has evolved this sequence to perform?  If efﬁ­
ciency of encoding more or less important than modularity?  Is a greater sensitiv­
ity to mutations in the overlapping coding sequences good or bad? 

Cite as: Drew Endy. Course materials for 20.109 Laboratory Fundamentals in Biological Engineering, Fall 2007. MIT
OpenCourseWare (http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 

MIT 20.109 Module 1 Class 2 notes (DRAFT)� 

13 September 2007 

19.  Because the living world we inhabit is encoded by natural sequences of DNA (in­
cluding ourselves), it is a hugely important to improve our understanding of the architec­
ture of genetic systems. 

Too bad natural DNA code doesn t come with documentation! 

20. What is the purpose of a natural sequence of DNA?  What deﬁnes whether or 
not its architecture is good or bad? 

21.  Now, sometimes you can learn about how something works by building new things. 
When you take a car about, and scatter apart the parts across your lawn, that�s one sort 
of understanding of a car.  But, an entirely different level of understanding would be re­
alized if you could take the parts and put them back together to make a car (one that 
runs, of course). 

22. When we looked at DNA sequence before, we were starting with a system (e.g., a 
bacteriophage) and then “drilling down” to get to the primary DNA sequence.  What if 
looked at things differently.  What if we started with DNA sequences and began to build 
up higher order systems.  Maybe we would look at the design and purpose of genetic 
parts differently. 

23.  To get started we are going to make something up.  A computer scientist would call 
what we are about to make up an “abstraction hierarchy.”  That�s a ﬁne label so let�s 
keep it.  The purpose of an abstraction hierarchy is to organize functions and operations 
across levels, so that the more primitive components and functions are grouped to­
gether, and evermore sophisticated functions are built on top of the more basic func­
tions.  However, one key point in an abstraction hierarchy is to hide, or at least manage 
complexity.  We can�t be considering really sophisticated functions while, at the same 
time, pay attention to every low level detail.  This will be more clear once we get spe­
ciﬁc. 

Cite as: Drew Endy. Course materials for 20.109 Laboratory Fundamentals in Biological Engineering, Fall 2007. MIT
OpenCourseWare (http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 

MIT 20.109 Module 1 Class 2 notes (DRAFT)� 

13 September 2007 

24. So, let�s consider an abstraction hierarchy that supports the design and construction 
of DNA-based systems. 

The lowest level in our hierarchy might be DNA: 

�

 - DNA is a string of dinucleotides encoding genetic information. 

Note that this is an information layer, that is itself an abstraction of a physical layer be ­
low, which is deﬁned by the physics an chemistry of DNA  itself. 

25.  However, we don�t want to stop here.  Otherwise we would have to memorize se­
quences of DNA.  For example: 

� 

TAATACGACTCACTATAGGGAGA 

What�s this sequence do?  It turns out to be a consensus promoter for a T7 RNA po­
lymerase.  It would be a lot of work to memorize the sequence of every DNA mole­
cule that you might want to engineer with.  There�s too much complexity (al­
though, if you do need to memorize DNA sequences, using them as the root 
password for your computer is a handy learning device). 

26. So, the next level in our hierarchy might be Parts (I�m using “might” because you 
might choose to invent a different hierarchy).  Now, we need to deﬁne parts: 

�

 - Parts are basic biological functions that can be encoded as DNA 

Examples of types of parts might include promoters, RBSs, operators, CDSs, docking 
sites, phosphorylation motifs, and so on, and so on. 

You can imagine that we are going to have a lot of parts, more than we want to 
memorize. 

27. So, the next level in our hierarchy might be Devices: 

� 
- Devices are combinations of one or more parts that encode a human-deﬁned 
function 

Examples of types of devices might be protein generators, senders, receivers, banana 
smell generating, wintergreen smell generating, swim, invade, make spider silk protein, 
and so on, and so on. 

Cite as: Drew Endy. Course materials for 20.109 Laboratory Fundamentals in Biological Engineering, Fall 2007. MIT
OpenCourseWare (http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 

MIT 20.109 Module 1 Class 2 notes (DRAFT)� 

13 September 2007 

25.  OK.  Let�s stop here (although the current hierarchy goes up one more level to sys­
tems, which you could guess because we are going to have lots of Devices).  Looking 
at the Parts and Devices levels, what can we say about Parts? That is, what are 
we going to want to do with Parts? 

� 

� 

We are going to want to put Parts together to make Devices 

� 

(and, we would like our Devices to work!) 

26.  Ah ha!  Now that we know what we want to be able to do with Parts, we can evalu­
ate the designs of parts.  What makes a good or a bad part? 

27.  Within our invented framework... A good part is a part that can be easily com­
bined with other parts.  A good part is a part that, when combined with other 
parts, behaves as expected. 

28.  Let�s take a look at a historical example (nuts and bolts demo): 

Cite as: Drew Endy. Course materials for 20.109 Laboratory Fundamentals in Biological Engineering, Fall 2007. MIT
OpenCourseWare (http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 

MIT 20.109 Module 1 Class 2 notes (DRAFT)� 

13 September 2007 

29.  The signiﬁcance of the Seller�s screw thread standard is that each of us can 
go to a hardware store today, purchase nuts and bolts, and put them together. 
We don�t need to take a Fundamentals of Mechanical Engineering Laboratory to 
put nuts and bolts together.  It just works. 

30.  Nuts and bolts go together w/o requiring further experimentation because 
they are designed to support reliable physical and functional composition. 

31.  Do natural genetic parts support reliable physical and functional composi­
tion? 

32.  Can we engineer synthetic genetic parts that more readily support reliable 
physical and functional composition? 

33. How does our M13 work related to making synthetic parts?  Well, maybe we 
can redesign the parts of M13 to make them easier for us to work with them, to 
enable more reliable physical and functional composition. 

34. If time, relate synthetic biology to genetic engineering 

Cite as: Drew Endy. Course materials for 20.109 Laboratory Fundamentals in Biological Engineering, Fall 2007. MIT
OpenCourseWare (http://ocw.mit.edu), Massachusetts Institute of Technology. Downloaded on [DD Month YYYY]. 

