Harvard-MIT Division of Health Sciences and Technology 
HST.951J: Medical Decision Support, Fall 2005
Instructors: Professor Lucila Ohno-Machado and Professor Staal Vinterbo 

Three Bioinformatics Problems 

Staal A. Vinterbo 

Harvard­MIT Division of Health Science and Technology 

Decision Systems Group, BWH 

Harvard Medical School 

Nov 2005:  HST 951/MIT 6.873 Class 

Motivation 


Introduce bioinformatics  through discussinb 
�  sequence alignment 
�  maximum parsimony phylogenetic  trees 
�  haplotype  tagging 

Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf 

HST 951/MIT 6.873 

1  / 43 

Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf 

HST 951/MIT 6.873 

2  / 43 

Bioinformatics 

Introduction 

Sequence Alignment 
Sequence Alignment 
DNA and RNA 

�  Advances  in molecular biology and  technology  in  this area 
�  lots of data ⇒

�  application of  information  technology ⇒

�  bioinformatics 

DNA 
�  polymer made up of nucleotides 
�  adenine (A), cytosine (C), guanine (G), and  thymine (T), and 
�  abstracted as a string over Σ = {A, C , G, T }. 
RNA 
�  another molecule abstracted as a string over Σ = {A, C , G, U }, U 
= uracil. 
DNA and RNA are par ts of  the reproductive machinery, and  insight  is 
warranted. 
Deﬁnition (Sequencing) 
process of determining  the DNA and RNA sequences  from organisms 

Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf 

HST 951/MIT 6.873 

3  / 43 

Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf 

HST 951/MIT 6.873 

4  / 43 

Sequence Alignment	
Sequence Alignment 
Problem 

Sequence Alignment 
Sequence Alignment 
Alignment of Two Sequences 

Problem 
evolutionary process does not necessarily preserve  the exact  location 
of  the (somewhat changed) original sequence par t. 
I.e.  do not know exactly how different sequences ﬁt  together. 
Need: 
alignment 

Let 
�  x  = x1  . . . xn  and y  = y1  . . . ym  strings over Σ, 
�  Special symbol −  /
.∈ Σ
An alignment of x  and y : 
�  pair of strings x �  and y � ,  x  = y  = k , max(n, m) ≤ k  ≤ m + n 
|
| 
|
| 
over Σ ∪ {−} such  that 
1.	 at no position can  the strings x �  and y �  both contain  the special 
symbol −, and 
2.  by removal of all occurrences of −  in both x �  and y �  we get x  and y , 
respectively,

both hold.


Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf	

HST 951/MIT 6.873 

5  / 43 

Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf	

HST 951/MIT 6.873 

6  / 43 

Sequence Alignment 
Sequence Alignment 
Alignment of Two Sequences 

Sequence Alignment 
Sequence Alignment 
Alignment of Two Sequences 

Example 
Consider sequences CACT and ACGCTT.  Three possibilities of aligning 
them are 

−  A  −
C	
C T
A C G C T T 

−  C A  −  C T 
A C G C T T 

and 

−  C A C T  −
A C G C T T 

Let 
�	 d  :  Σ ∪ {−} → R be a  function  that assigns a “distance” between 
the elements of Σ ∪ {−} such  that  for a ∈ Σ 
d (a, −) = d (−, a) = g (a) 

for some suitable  function g . 
Then 
�  d (a, b) = cost of mutating (changing) a  to b 
�  g (a) = cost of  inser ting or deleting  the  letter a 

Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf	

HST 951/MIT 6.873 

7  / 43 

Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf	

HST 951/MIT 6.873 

8  / 43 

Sequence Alignment 
Sequence Alignment 
Alignment of Two Sequences 

Sequence Alignment 
Sequence Alignment 
Alignment of Two Sequences 

If we  let A(x , y ) denote  the set of all alignments (x � , y � ) of x  and y , we 
� 
can deﬁne 
k
d (x � , y � )
D (x , y ) =  min 
i
i 
(x � ,y � )∈A(x ,y ) 
i =1 
as  the cost of an optimal alignment of x  and y . 

Crucial Observation 
The optimal alignment of x  and y  can end  in one of  three possible 
ways: 
. . .  − 
. . . 
. . . 
xn 
xn 
. . .  − 
, 
. 
,
. . . 
. . . 
ym 
ym 
D (x , y ) is  the cost of  the optimal alignment up  to  the (k − 1)st 
character plus  the smallest cost of  the  three possibilities. 

Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf 

HST 951/MIT 6.873 

9  / 43 

Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf 

HST 951/MIT 6.873 

10  / 43 

Sequence Alignment 
Sequence Alignment 
Alignment of Two Sequences 
Deﬁne 

x1x2  · · ·
Di ,j  = D (

and 

, y1y2  · · · y
xi 

j ),

D0,j  = 

� 
D0,0  =  0 
j
d (−, yi ) 
� 
i =1 
i
d (xj , −). 
j =1 

Di ,0  = 

Sequence Alignment 
Sequence Alignment 
Alignment of Two Sequences 

Have  that 
�  D (x , y ) = Dn,m 
�  At position  i , j , a step 
�  left = appending − to x � 
�  down = appending a − to y � 
�  down and  to  the  left = xi  and yj  to x �  and y �  respectively. 
Can use  this  to reconstruct an optimal sequence. 

Then we have  that 
Di ,j  = min{Di −1,j  + d (xi , −), Di −1,j −1  + d (x , yj ), Di ,j −1  + d (−, yj )}.
i 

Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf 

HST 951/MIT 6.873 

11  / 43 

Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf 

HST 951/MIT 6.873 

12  / 43 

Sequence Alignment	
Sequence Alignment	
Alignment of Two Sequences	

Sequence Alignment 
Sequence Alignment 
Alignment of Two Sequences 

x  = ACCGTAC and y  = GCCTAA.  If we  let g  = 1, d (a, a) = 0  for all a,

and d (a, b) = 1  for all distinct a and b ,  the matrix D  then becomes 

0 
1 
2
3
4
5
6
7

A 
C 
C 
G 
T 
A 
C 

G 
1 
1 
2 
3
3
4
5
6

C 
2 
2 
1 
2 
3 
4
5
5

C 
3 
3 
2 
1 
2 
3 
4
5

T 
4 
4 
3 
2 
2 
2 
3 
4

A 
5 
4 
4 
3 
3 
3
2 
3 

A 
6 
5	
5	
4	
4	
4 
3 
3

Star ting  in  the  lower right hand corner, we notice  that 2 + d (C, A) = 3,

which  is  the number  in our current position.  Hence, we step  to D5,6 
containing a 2. We now note  that 2 + d (A, A) = 2, and we step  to D4,3 . 
The choices we make along  this  traceback are  indicated by  the boxed 
entries  in D  above.  Note  that  these choices are not unique, and  that 
other optimal alignments are possible.  Having made our choices, we 
can now star t  in  the upper  left corner and construct  the alignment 
according  to  the step rules given above.  The resulting alignment  is 

A C C G T A C 
G C C  −  T A A 

Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf 	

HST 951/MIT 6.873 

13  / 43 

Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf	

HST 951/MIT 6.873 

14  / 43 

Sequence Alignment 
Sequence Alignment 
BLAST 

Sequence Alignment 
Sequence Alignment 
Alignment of Multiple Sequences 

The above:  Global alignment. 
Alternative:  Local Alignment 
Basic Local Alignment Search Tools (BLAST)  is a set of  tools  to 
perform  local alignment:  the search  for similar segments of  two 
sequences. 

An alignment of k  strings x1 , x2 , . . . , xk  over Σ is a k ­tuple of strings 
� over alphabet Σ ∪ {−}, where −  �∈ Σ, of equal  length  l 
� , x2
� , . . . , xk
x1
such  that 
1.	 for each position  i  ∈ {1, 2, . . . , l }  there  is a  j  such  that  the 
� is different from −, namely xj
,i  = −, and 
�
character in position i  in xj
2.  deletion of − from all x1
� , x2
� , . . . , xk
� yields x1 , x2 , . . . , xk , 
respectively,

both hold.


Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf 	

HST 951/MIT 6.873 

15  / 43 

Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf 

HST 951/MIT 6.873 

16  / 43 

�
Sequence Alignment	
Sequence Alignment 
Alignment of Multiple Sequences 

Sequence Alignment 
Sequence Alignment 
Alignment of Multiple Sequences 

Given an alignment x �  and y �  of  length k  of strings x  and y , we deﬁne 
� 
k
d (x � , y � ).
i
i 
i =1 

SP(x � , y � ) = 

The measure SP  is  the sum of pairwise alignment costs.  Let 
� ) be an alignment of strings x1 , x2 , . . . , xk .  Abusing 
� , x2
� , . . . , xk
M  = (x1
� 
notation slightly, we deﬁne 
SP(x � , xj
� )
i 
i <j 

SP(M ) = 

as  the sum of pairwise alignment cost of M . 

Given strings x1 , x2 , . . . , xk ,  the problem of ﬁnding M  that minimizes

SP(M ) is NP­hard.

Can use  the Center Star Method, a 2­approximation algorithm.


Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf	

HST 951/MIT 6.873 

17  / 43 

Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf	

HST 951/MIT 6.873 

18  / 43 

Sequence Alignment 
Sequence Alignment 
Center Star 
Assume  that d  is such  that  for all a, b , c  ∈ Σ we have  that 
d (a, b) = d (b , a) and d (a, c ) ≤ d (a, b) + d (b , c ),  i.e., d  is symmetric 
and observes  the  triangle  inequality.  The center star method  is as 
follows: 
� 
1.	 Find c  ∈ {1, 2, . . . , k } that minimizes 
D (xc , xi ). 
i =c 

Sequence Alignment 
Sequence Alignment 
ClustalW 

A popular alternative  in practice  is ClustalW: 
1.	 Determine all pairwise alignments between sequences and  the

degree of similarity between  them 

2.	 Construct a dendrogram 
3.	 Combine  the alignments  from 1  in  the order speciﬁed  in 2 

and set M  = (xc ) 
let y  = xc 
2.	
3.	 For all  j  ∈ {1, 2, . . . , k } − {c } in order, 
3.1  add  the gaps  in y  to xj  forming z 
3.2  compute  the optimal alignment (y � , z � ) of y  and z 
3.3  add  the newly added gaps  in y  to all sequences  in M , 
3.4  add z �  to M  as xj
� , and 
3.5  set y  = y � 
Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf	

HST 951/MIT 6.873 

19  / 43 

Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf	

HST 951/MIT 6.873 

20  / 43 

�
Maximum Parsimony Phylogenetic Trees 
Maximum Parsimony Phylogenetic Trees 
Introduction 

Maximum Parsimony Phylogenetic Trees 
Maximum Parsimony Phylogenetic Trees 
Phylogenetic  tree 

�  Phylogeny =  the evolutionary history 
�  At a molecular  level, evolution can proceed by  inser tions, 
deletions, substitutions,  inversions and  transpositions 
�  A phylogenetic  tree  is a representation of evolution based on 
genetic sequences.  Star ting at a root, a branch represents a  time 
where  there  is a divergence  in  the sequence. 
The phylogenetic  tree  is often  inferred  from contemporary sequences, 
with  internal nodes  labelled according  to  the most plausible ancestral 
sequence. 

Deﬁnition (Phylogenetic  tree) 
Let Σ be an alphabet, and  let Σm  denote  the set of all strings of  length 
m.  Let T  ⊆ Σm  be a ﬁnite set. 
A phylogenetic  tree over T  is a  tuple (G, l ) consisting of a graph 
→ 
G = (V , E ), and a ver tex  labeling  function  l  :  V  Σm  such  that 
�  G  is a spanning  tree of V , 
�  T  ⊆  l (V ), 
�  the  leaves of G are uniquely  labeled by T . 

Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf 

HST 951/MIT 6.873 

21  / 43 

Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf 

HST 951/MIT 6.873 

22  / 43 

Maximum Parsimony Phylogenetic Trees 
Maximum Parsimony Phylogenetic Trees 
Phylogenetic  tree 

Maximum Parsimony Phylogenetic Trees 
Maximum Parsimony Phylogenetic Trees 
Maximum Parsimony Principle 

Example 
Consider  the sequences x  = GAT, y  = CAA and z  = CCT.  There are a 
number of ancestral relationships we can  think of, among  them are 
�  x  is an ancestor of z  and y , 
�  z  is an ancestor of x  and y , 
�  an unknown w  is an ancestor of all  three. 

In order  to choose between alternatives, we need  to evaluate  their 
plausibility.  One principle  is  to choose  the  tree  that  incorporates  the 
least evolutionary changes,  i.e.,  the  least number of mutations  in  the 
sequences along  the branches of  the  tree.  This principle  is called  the 
maximum parsimony principle. 

Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf 

HST 951/MIT 6.873 

23  / 43 

Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf 

HST 951/MIT 6.873 

24  / 43 

Maximum Parsimony Phylogenetic Trees 
Maximum Parsimony Phylogenetic Trees 
Deﬁnition 

Maximum Parsimony Phylogenetic Trees 
Maximum Parsimony Phylogenetic Trees 
Example 

� 
Deﬁne  the score σ(G, l ) of a phylogenetic  tree (G, l ) over T  as 
(a,b)∈E 

h(l (a), l (b)), 

σ(G, l ) = 

Example 
From  the preceding example x  = GAT, y  = CAA and z  = CCT. 

where h(l (a), l (b)) is  the hamming distance between  the  labels  l (a) 
and  l (b). 
Deﬁnition (Maximum Parsimony Phylogenetic Tree (MPPT)) 
A phylogenetic  tree (G, l ) over T  that minimizes σ . 

tree. 

is a maximum parsimony phylogenetic 

Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf 

HST 951/MIT 6.873 

25  / 43 

Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf 

HST 951/MIT 6.873 

26  / 43 

Maximum Parsimony Phylogenetic Trees 
Maximum Parsimony Phylogenetic Trees 
Steiner Trees 

Maximum Parsimony Phylogenetic Trees 
Maximum Parsimony Phylogenetic Trees 
Steiner Trees 

Deﬁnition (Steiner Tree) 
Let G = (V , E , w ) be a graph with ver tices V , edges E , and a 
non­negative edge cost  function w .  Any  tree  in G spanning a given set 
of  terminals T  ⊆ V  is called a steiner  tree (over T ). 
Problem (Steiner Tree Problem (STP)) 
Let G = (V , E , w ) be a graph with ver tices V , edges E , and a 
non­negative edge cost  function w .  For  terminals T  ⊆ V , ﬁnd a 
minimum cost steiner  tree  in G. 

We recognize  the MPPT problem as a an  instance of  the STP  for  the 
some unknown graph G �  with (again unknown)  terminals S  such  that 
T  ⊆  l (S ). 
�  MST(T)  is a 2­approximation  for STP 
�  STP  is ≈1.55­approximable 
This means  that MST(T)  is a 2­approximation  for  the MPPT problem. 
Problem: 
The application of steiner  tree problem algorithms  is sometimes 
problematic as  the graph G �  can be  taken  to have a  labelling  function 
with co­domain  that  includes Σm , and consequently can be huge. 

Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf 

HST 951/MIT 6.873 

27  / 43 

Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf 

HST 951/MIT 6.873 

28  / 43 

Maximum Parsimony Phylogenetic Trees 
Maximum Parsimony Phylogenetic Trees 
Transformations 

Maximum Parsimony Phylogenetic Trees 
Maximum Parsimony Phylogenetic Trees 
Transformations 

We can deﬁne  transformations on phylogenetic  trees  that do not 
increase  the score of  the  tree, but have  the potential  to decrease  it. 

Deﬁnition 
Deﬁne  the consensus of a collection A of strings  from Σm  as  the set of 
strings 
c1c2  · · ·
cm
where ci  is a character  that occurs with  the highest  frequency  in 
position  i  in  the elements  from  the collection A. 
Let cons(A) be an element  from  the consensus of A. 
Fur ther deﬁne  the neighbors n(v ) of v  ∈ V  in G  to be  the set of 
ver tices w  such  that {(v , w ), (w , v )} ∩ E  = ∅. 

Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf 

HST 951/MIT 6.873 

29  / 43 

Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf 

HST 951/MIT 6.873 

30  / 43 

Maximum Parsimony Phylogenetic Trees 
Maximum Parsimony Phylogenetic Trees 
Transformations 

Maximum Parsimony Phylogenetic Trees 
Maximum Parsimony Phylogenetic Trees 
Transformations 

Example 
The consensus of {“abc”, “acb”, “aca”, “bad”}  is {“aca”,“acb”, “acc”, 
“acd”}. 

Proposition 
Let (G = (V , E ), l ) be a phylogenetic  tree over T .  Then,  for any v  ∈ V 
� 
� 
we have  that  if we  let A = n(v ) ∪ {v }  then 
h(l (v ), l (w )) ≥ 
h(cons(l (A)), l (w )) 
w ∈A 
w ∈n(v ) 

holds. 

Proposition 
Let a, b , c  ∈ Σm  for some positive  integer m.  Then, a maximum 
parsimony phylogenetic  tree over a, b  and c  is {(1, 4), (2, 4), (3, 4)}, 
and  the mapping  function  l  is such  that  l ({1, 2, 3}) = {a, b , c } and 
l (4) = cons(a, b , c ). 

Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf 

HST 951/MIT 6.873 

31  / 43 

Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf 

HST 951/MIT 6.873 

32  / 43 

�
Maximum Parsimony Phylogenetic Trees 
Maximum Parsimony Phylogenetic Trees 
Mutable and  Immutable ver tices 

Maximum Parsimony Phylogenetic Trees 
Maximum Parsimony Phylogenetic Trees 
Transformations 

Given a phylogenetic  tree (G, l ) of T  we can par tition  the ver tices V 
into  two classes, mutable M and  immutable I .  This par tition must 
meet  the  following requirement:  T  ⊆ l (I ). 

We deﬁne  the  following  transformations on a phylogenetic  tree (G, l ) of 
T .  They are: 
s  for all  internal ver tices v  in  turn, compute c  = cons(n(v ) ∪ {v }), 
connect a new  leaf w  to v , change  l  such  that  l (w ) =  l (v ) and 
l (v ) = c , 
m  for all  immutable ver tices v  in  turn, ﬁnd w  ∈ V  ∩ l −1 (l (v )) such 
that h(cons(l (n(w ))), l (w ))  is minimal, make (l −1 (l (v )) ∩ I ) − {v }
mutable, 
k  recursively delete all mutable  leaves, 
d  delete mutable ver tices  that have degree 2, connecting  the  two 
edge endpoints, 
c  for all mutable ver tices v  in  turn, set  l (v ) = cons(l (n(v ))). 

Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf 

HST 951/MIT 6.873 

33 

/ 43 

Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf 

HST 951/MIT 6.873 

34  / 43 

Maximum Parsimony Phylogenetic Trees 
Maximum Parsimony Phylogenetic Trees 
Transformations 

Proposition 
Let τ  be one of  the  transformations s,m,d,k,c.  The application of τ  to 
phylogenetic  tree (G, l ), results  in a phylogenetic  tree with score at 
most  that of (G, l ). 

Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf 

HST 951/MIT 6.873 

35 

/ 43 

Maximum Parsimony Phylogenetic Trees 
Maximum Parsimony Phylogenetic Trees 
Heuristic 
Let APPROX  be an algorithm  that  takes T  as  input and returns  the 
phylogenetic tree (G, l ) that corresponds to the minimum spanning tree 
over  the  terminals. We  then deﬁne  the  following algorithm RETREE. 
Set T �  = T . 
1.  (G, l ) ←APPROX(T � ) 
←
2.  s 
σ(G, l )
3.  (G, l ) ← c (d (k (m(s(G, l ))))) 
←
4.  T � 
l (G[V ])
5.  if σ((G, l ) < s  goto step 1 
6.  return (G, l )

Proposition

RETREE  is polynomial  in m|T  and guarantees a solution score at 
|
most  twice  the optimum. 

Moreover :  RETREE  is usually better  than APPROX  alone. 
HST 951/MIT 6.873 
Bioinf 
Staal A. Vinterbo  (HST/DSG/HMS) 

36  / 43 

Maximum Parsimony Phylogenetic Trees 

Maximum Parsimony Phylogenetic Trees 

nea1997 
nea2000 
human 
gorilla 
chimp 
orangutan 

(gi:2286205) 
(gi:7769684) 
(gi:975204) 
(gi:3766221) 
(gi:6288860) 
(gi:1743293) 

ATCCCTCTTTTTTTGTGGAATAATTCAACCCTCGTCTTAGTCTCCTATTAGTAGCATTACCTA 
ATCCCTCCCTTTTTGTGAAATAATTCACCCCTCGTCTTAGTCTCCTATTAGTAGCATTACCTA 
ATTCCTCTCCTATTGCGGAACAATTCAAACTTTGTCCTAATCCCCTGCTAGCAATATTACTTA 
GTACCCCCCTCACCCCAATCCCCCCCCCACTCCCCTCCCAAATAACACTCCTCGCGATCACAC 
GCTTTTTTCTTCCCATAATCACCCTTCAATATCATCCCAGTCCAATGCCCCCCATCACAACCC 
ACCTTCTTTCCTCTACAAAACCAACTCGATACTCCTCCCCAACACCGCCAGTAACCACCCTCC 

Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf 

HST 951/MIT 6.873 

37  / 43 

Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf 

HST 951/MIT 6.873 

38  / 43 

Haplotype Tagging 
Haplotype Tagging 

Haplotype Tagging 
Haplotype Tagging 

Much of  the population­wide variation of  the human genome can be 
attributed  to single nucleotide polymorphisms (SNPs), which are 
changes  in single base pairs within  the genome. 
For  the study of population genomics, SNPs can be used  to measure 
linkage disequilibrium, an  indication of how much more (or  less)  likely, 
compared  to chance, cer tain combinations of neighboring SNP alleles 
are. 
Due  to  linkage disequilibrium,  the distribution of possible alleles at 
SNPs  is not uniformly random, and some combinations of neighboring 
alleles occur more often  than others.  Such a combination of SNP 
alleles  is called a haplotype, and a given set of SNPs can give rise  to a 
wide variety of haplotypes. 

It  is an  impor tant problem  to  identify a subset of SNPs within a 
haplotype  that allows  the unique  identiﬁcation of all possible allele 
variations within a haplotype.  If such a subset can be  found, a 
haplotype can be uniquely  identiﬁed by knowing only  the allele values 
at a  few SNP positions.  SNPs  that satisfy  this requirement are called 
haplotype  tagging SNPs (htSNPs). 

Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf 

HST 951/MIT 6.873 

39  / 43 

Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf 

HST 951/MIT 6.873 

40  / 43 

Haplotype Tagging 
Haplotype Tagging 
Formal Problem Deﬁnition 

Haplotype Tagging 
Haplotype Tagging 
Complexity 

We can  think of  the problem of haplotype  tagging by a minimum 
cardinality set of (diallelic) SNPs as  the problem of ﬁnding a minimum 
cardinality set of columns  that  lets us discern between  the unique rows 
in a binary matrix M .  This means  that we want  to  identify as  few 
columns as possible so  that  if  two rows agree on  these columns,  then 
they are  identical.  Formally,  this can be expressed as  follows. 
Let H  = {h1 , h2 , . . . , hn } be a set of haplotypes with associated SNP 
markers at positions S = {1, 2, . . . , m}, and let S �  be a subset of S . We 
deﬁne hi [S � ]  to be  the string consisting of marker values of haplotype 
hi  found at  the positions  in S � . We can view H  as an n × m matrix over 
the set of possible SNP alleles values.  Find a minimum cardinality set 
S �  ⊆ S  such  that h [S � ] = hj [S � ]  implies  i  =  j .
i 

Theorem (Vinterbo 2005) 
The haplotype  tagging problem  is NP­hard but approximable within 
1 + ln((n2  − n)/2) for n haplotypes but not approximable within 
(1 − �) ln(n/2)  for any � > 0 unless NP ⊂ D T IME(n log log n ). 

Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf 

HST 951/MIT 6.873 

41  / 43 

Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf 

HST 951/MIT 6.873 

42  / 43 

Haplotype Tagging 
Haplotype Tagging 
Algorithm 

Solve  the minimum hitting set  instance given by  the discernibility 
matrix over H . 

Staal A. Vinterbo  (HST/DSG/HMS) 

Bioinf 

HST 951/MIT 6.873 

43  / 43 

