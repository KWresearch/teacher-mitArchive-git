Harvard-MIT Division of Health Sciences and Technology 
HST.951J: Medical Decision Support, Fall 2005
Instructors: Professor Lucila Ohno-Machado and Professor Staal Vinterbo 

Motivation 


From Propositions To Fuzzy Logic and Rules 

Staal A. Vinterbo 

Harvard­MIT Division of Health Science and Technology 

Decision Systems Group, BWH 

Harvard Medical School 

Nov 9 2005:  HST 951/MIT 6.873 Class 

Present a  formal  foundation  for

�  propositional rules

�  fuzzy sets

�  fuzzy rules

in order  to enable understanding and  implementation of a  fuzzy 
propositional rules classiﬁer. 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff 

HST 951/MIT 6.873 

1  / 56 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff 

HST 951/MIT 6.873 

2  / 56 

Outline 

Propositional Logic 
What  is a proposition anyway? 

�  Propositions

�  Propositions over sets

�  Fuzzy Sets

�  Propsitions over Fuzzy Sets


A proposition  is a statement  that  is either  true or  false.  In  this context, 
an interesting statement was made by the greek philosopher Eubulides 
a  long  time ago: 
This statement  is  false. 
Before we can star t saying anything about  the above or other 
statements, we need  to establish a  language,  the propositional 
language or PL. 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff 

HST 951/MIT 6.873 

3  / 56 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff 

HST 951/MIT 6.873 

4  / 56 

Propositional Logic 
Propositional Logic Syntax 
Components 

Syntax 

Propositional Logic 

Syntax 

Formation Rules 

The PL  language consists of 
�  an  inﬁnite set of variables V  = {a, b , . . .}, and 
�  a set of symbols S = {∼, ∨, (, )}. 
Deﬁnition 
An expression  in PL  is any string consisting of elements  from  the sets 
V  and S ,  i.e., any string of variables and symbols. 

An expression  is either a well  formed  formula (wff) or  it  is not. 
The  following wff  fomation rules allow us  to deﬁne wff: 
Deﬁnition 
�  A variable alone  is a wff 
�  If α  is a wff, so  is ∼ α, and 
�  If α and β  are wff, so  is (α ∨ β ) 

Example 
for variables a and b  the expression (a∨ ∼∼∼ b)  is a wff, while  the 
expression a ∼ ∨b  is not. 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff 

HST 951/MIT 6.873 

5  / 56 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff 

HST 951/MIT 6.873 

6  / 56 

Propositional Logic 
Syntax 
Leaving out outer parentheses 

Propositional Logic 
Semantics 
Propositional Logic Semantics 
Semantics = Meaning 

We sometimes  leave out  the outermost parentheses of expressions: 
(α ∨ β ) becomes α ∨ β  even  though  this  is, strictly speaking, not a well 
formed  formula according  to  the rules above. 

Given a wff we would  like  to determine whether  this expression  is  true 
or  false.  In order  to do  this we need  to deﬁne  the semantics or 
meaning of our  language. 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff 

HST 951/MIT 6.873 

7  / 56 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff 

HST 951/MIT 6.873 

8  / 56 

Propositional Logic 
Semantics 
Propositional Logic Semantics 
Setting:  variable value assigments 

Propositional Logic 
Semantics 
Propositional Logic Semantics 
Interpretation:  Truth Value of Expressions 

Deﬁnition 
We deﬁne a setting s  as a  function s  :  V  → {0, 1} assigning  to each 
variable either  the value 0 or  the value 1, denoting  true or  false 
respectively. 

Deﬁnition 
An  interpretation  is a  function  that  takes as  input a wff and returns 0 or 
1 depending on  the setting used. 
�  Formally  if we  let WFF  denote  the (inﬁnite) set of wff of PL we 
deﬁne  the  interpretation  Is  as  Is  :  WFF  → {0, 1}. 
�  If  the setting s  is given by  the context or  is  irrelevant, we drop  the 
subscript and  just write  I . 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff 

HST 951/MIT 6.873 

9  / 56 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff 

HST 951/MIT 6.873 

10  / 56 

Propositional Logic 
Semantics 
Propositional Logic Semantics 
Semantics of Operators:  Pronunciation 

Propositional Logic 
Semantics 
Propositional Logic Semantics 
Semantics of Operators:  Formals 

∼ and ∨ are propositional operators and are called negation and 
disjunction, respectively. 
The expression α ∨ β  is called the “disjunction of α and β ”, while ∼ α  is 
called  the “negation of α”. 
In everyday  language negation  is often pronounced “not”, while 
disjunction  is pronounced “or”. 

:∼ {0, 1} → {0, 1} 
∨ :  {0, 1} × {0, 1} → {0, 1} 

∼ (0) =  1 
∼ (1) =  0 

∨
0  1
0  0  1 
1  1  1 
Table:  Truth  table  for disjunction ∨ 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff 

HST 951/MIT 6.873 

11  / 56 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff 

HST 951/MIT 6.873 

12  / 56 

Propositional Logic 
Semantics 	
Propositional Logic Semantics	
Semantics of Operators:  Inﬁx notation	

Propositional Logic 
Semantics 
Propositional Logic Semantics 
Computing  the  Interpretation  I 

Usually  the propositional operators  taking  two arguments (binary 
operators) are written  in what  is called  inﬁx notation,  i.e.,  instead of 
∨(0, 1) we write 0 ∨ 1. We also usually remove  the parentheses  from 
∼ (0) and write ∼ 0. 
Example 
∨(0, 1) = 0 ∨ 1 = 1. 

The computation of I  applied to a wff is made according to these rules: 
�  For a variable a,  I (a) = s(a), 
�  I (∼ α) =∼ I (α), and 
�  I (α ∨ β ) = I (α) ∨ I (β ) 
for wff α and β . 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff	

HST 951/MIT 6.873 

13 

/ 56 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff	

HST 951/MIT 6.873 

14  / 56 

Propositional Logic 
Semantics 
Propositional Logic Semantics 
Example:  Computing  the  Interpretation  I 

Example 

I (∼ (∼ a∨ ∼ b)) 	 =  ∼ I (∼ a∨ ∼ b) 
=  ∼ (∼ I (a)∨ ∼ I (b)) 
=  ∼ (∼ s(a)∨ ∼ s(b)) 

If we  let s(a) = 1 and s(b) = 0,  then 
Is (∼ (∼ a∨ ∼ b)) 	 =  ∼ (∼ 1∨ ∼ 0) 
=  ∼ (0 ∨ 1) =∼ 1 = 0 

Semantics 

Propositional Logic 
Propositional Logic 
Syntactic “Sugar” 
�  ∧ is called conjunction (“and”) 
(a ∧ b) = ∼ (∼ a∨ ∼ b) 
def
(a ∧ b) is often called  the “conjunction of a and b”. 
→
is called  implication (“implies”)
(a → b) = (∼ a ∨ b) 
def

� 

� 

Left side  is  the antecedent, right side  is  the consequent. We also 
let (b ← a) = (a
b).→
def
↔
is called equivalence (“equivalence”) 
↔
b) = (a → b) ∧ (b → a)
def

(a

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff	

HST 951/MIT 6.873 

15 

/ 56 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff	

HST 951/MIT 6.873 

16  / 56 

Propositional Logic 
Propositional Logic 
Validity and Satisﬁability:  Deﬁned 

Validity and Satisﬁability	

A wff α  is valid  if and only  if  Is (α) = 1  for every setting s .  A wff α  is 
satisiﬁable  if  there exists a setting s  such  that  Is (α) = 1, and 
unsatisﬁable  if no such setting s  exists. 
Example 
The wff (α∨ ∼ α)  is valid, while (α∧ ∼ α)  is unsatisiﬁable. 

Validity and Satisﬁability 

Propositional Logic 
Propositional Logic 
Testing  for validity:  Truth Table Method 
→
b)  is given here: 
The  truth  table  for (a
(a → b) 
1 
1 
0 
1 

a  b 
0  0 
0  1 
1  0 
1  1 

�	 Table rows represent settings of variables a and b  and  the

b).
→
resulting value  for (a
→
�  Is (a
b) valid?  Satisﬁable? 
Valid:  No.  Satisﬁable:  Yes. 
Note:Tables can become Large. 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff	

HST 951/MIT 6.873 

17  / 56 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff	

HST 951/MIT 6.873 

18  / 56 

Propositional Logic 
Validity and Satisﬁability 
Testing  for validity:  Falsifying Setting Method 

Propositional Logic 
Propositional Logic 
Example:  Testing  for validity using Falsifying Setting Method 

Validity and Satisﬁability 

Based on  the observation  that: 
�  ∼ α  is satisiﬁable 
⇒

α  is not valid, or 
�  ∼ α  is unsatisiﬁable 
⇒
α  is valid.

Strategy:  ﬁnd consistent satisfying setting s  for ∼ α or show  that  there 
is none. 

Is ((p ∧ (p ↔ (q ∧ r ))) → q ) valid? 
(  p  ↔  (  q
∧	
∧ 
1
1
1 
1
1 
5 
7
6
8
2 

((  p 
1
4

)

r  )))  →  q 
0 
0
1 
9 
3 
1

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff	

HST 951/MIT 6.873 

19  / 56 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff	

HST 951/MIT 6.873 

20  / 56 

Propositional Logic 
Propositional Logic 
Example:  Testing  for validity using Falsifying Setting Method 

Validity and Satisﬁability	

Is ((p ∧ (p ↔ (q ∧ r ))) → q ) valid? 
(  p  ↔  (  q
∧ 
∧	
1
1
1 
1
1 
5 
7
6
8
2 

((  p 
1
4

)

r  )))  →  q 
0 
0
1 
9 
3 
1

Answer :  Yes.  The settings underlined pose a contradiction. 
Note: 
If we during  the process shown are allowed alternatives, we need  to 
show a contradiction  in all  the possible alternative settings  in order  to 
declare our expression valid. 

Propositional Logic 
Propositional Logic 
The PL Logic System:  Components 

The PL Logic System 

The  logic system of PL consists of  three  things: 
�  The speciﬁcation of  the  language PL, as given above, 
�  the set of valid wff of PL, known as axioms, and 
�  the  two  transformation rules Uniform Substitution (US) and Modus 
Ponens (MP). 
The axioms and wff obtained  from  the axioms by application of  the 
transformation rules are called  theorems of PL. We denote  that α  is a 
theorem by writing � α. 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff	

HST 951/MIT 6.873 

21  / 56 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff	

HST 951/MIT 6.873 

22  / 56 

Propositional Logic 
Propositional Logic 
The PL Logic System:  Uniform Substitution 

The PL Logic System 

Propositional Logic 
Propositional Logic 
The PL Logic System:  Modus Ponens 

The PL Logic System 

�	 The result of uniformly replacing any variable a1 , a2 , . . . , an  in a 
theorem α with any wff β1 , β2 , . . . , βn  respectively  is  itself a 
theorem. 
�	 Uniform means here  that any occurrence of ai  in α  is substituted 
with  the same wff βi . We write  this as α[β1/a1 , β2/a2 , . . . , βn /an ]. 

Example 
The result of (a → (a ∨ b))[(c ∧ d )/a, c /b]  is ((c ∧ d ) → ((c ∧ d ) ∨ c )). 

Modus Ponens (also called  the rule of detachment)  is sometimes 
written as 

α 
α
β 
→
β  are  theorems,  then by MP so  is β .  This simply reﬂects 
If α and α
the  truth­functional meaning of →. 

β→ 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff	

HST 951/MIT 6.873 

23  / 56 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff 

HST 951/MIT 6.873 

24  / 56 

Propositional Logic 
Propositional Logic 
The PL Logic System:  Derivability 

The PL Logic System 

Propositional Logic 
Propositional Logic 
Propositional Consequence:  Deﬁnition 

Propositional Consequence 

We express  the derivability of a wff by one or more wff by  ’ ⇒’.  As  in: 
� α ⇒� α[β1/a1 , β2/a2 , . . . , βn /an ] 
� α, (α → β ) ⇒� β

US: 
MP: 

Clear : 
we can manipulate wff by using  the rules deﬁning operators and 
semantics. 

Deﬁnition 
The wff β  is a propositional consequence of wff α  if and only  if 
α ↔ β ∧ γ  for some wff γ . 
We  formulate  this as a derived  transformation rule: 
PC:  � α, � (α ↔ (β ∧ γ )) ⇒� β 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff 

HST 951/MIT 6.873 

25  / 56 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff 

HST 951/MIT 6.873 

26  / 56 

Propositional Logic 
Propositional Logic 
Propositional Consequence:  Proof of Rule 

Propositional Consequence 

By showing how we would do without  the rule: 

(1) 
(2)
(3) 
(4) 
(5)
(6) 
(7) 
(8) 

αgiven 
↔ (β ∧ γ ))given 
(α 
((α → (β ∧ γ )) ∧ ((β ∧ γ ) → α))US  (a→
b)∧(b→a)
((((α → (β ∧ γ )) ∧ ((β ∧ γ ) → α))) → ((α → (β ∧ γ )))US  ((a∧b)→
→ (β ∧ γ ))MP  (3)+(4) 
(α 

(β ∧ γ )
MP  (1)+(5) 
((β ∧ γ ) → 
β )US  ((a∧b)→a)
β 

a)

Propositional Logic 
Propositional Logic 
Propositional Consequence:  Example 

Propositional Consequence 

If Alf studies, Alf gets good grades.  If Alf does not study, Alf 
has a good  time.  If Alf does not get good grades, Alf does not 
have a good  time. 

What can we say about Alf?


Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff 

HST 951/MIT 6.873 

27  / 56 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff 

HST 951/MIT 6.873 

28  / 56 

Propositional Logic 
Propositional Logic 
Propositional Consequence:  Example Formals 

Propositional Consequence	

Propositions over Sets 
Propositions over Sets 
Characteristic Function:  Deﬁned 

�	 s = “Alf studies” 
�	 g = “Alf gets good grades” 
�	 t = “Alf has a good  time” 
s ∨ t )
→ t ) ∧ (∼ g →∼ t ) ↔ g ∧ (
(s → g ) ∧ (∼ s	
Using PC, we can conclude  that Alf gets good grades. 

Deﬁnition 
A characteristic  function  is a  function  that has as co­domain  the set 
{0, 1},  i.e.,  f  :  U  → {0, 1} is a characteristic  function. 
�	 Fur thermore,  f  is  the characteristic  function of  the subset S  of U 
such  that S  consists exactly of  the elements x  in U  such  that 
f (x ) = 1. 
�	 Formally, S = f −1 (1) = {x  ∈ U f (x ) = 1}. We will denote  the 
|
characteristic  function  for  the set S ⊆ U  as χS . 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff	

HST 951/MIT 6.873 

29  / 56 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff	

HST 951/MIT 6.873 

30  / 56 

Propositions over Sets 
Propositions over Sets 
Propositions:  Deﬁned 

Propositions over Sets 
Propositions over Sets 
Syntax 

Now, a proposition over a set  is a proposition  that describes a proper ty 
of  the elements of  that set.  Such propositions are modeled by 
characteristic  functions. 
Example 
Let N be  the set of natural numbers, and  let p  be  the proposition “x  is 
an even number”. We model p  by  the characteristic  function 
even  :  N → {0, 1} deﬁned as 

even(x ) = (x + 1) mod 2 

We have  that even(2) = 1, and even(3) = 0, and so  for th... 

As before we have  to deﬁne  the  language PL(U ) of propositions over 
the set U .  Syntactically,  this  language  is  identical  to  the  language PL, 
except  that  the set V  is  the set F  consisting of (the names of) 
characteristic  functions on  the set U . 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff	

HST 951/MIT 6.873 

31  / 56 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff	

HST 951/MIT 6.873 

32  / 56 

Propositions over Sets 
Propositions over Sets 
Semantics:  Truth Sets 

Propositions over Sets 
Propositions over Sets 
Semantics:  Truth Sets  for “Syntactic Sugar” 

The semantics of p  over U  is based on  truth sets. We deﬁne  truth sets 
of wff of PL(U ) according  to  the  following rules:  For p ∈ F , and wff α 
and β 
�  T (p) = {x  ∈ U p(x ) = 1},
|
�  T (∼ α) = U − T (α), and

�  T (α ∨ β ) = T (α) ∪ T (β ). 


Analogous  to  the PL case: 
�  T (α ∧ β ) = T (α) ∩ T (β ), 
�  T (α → β ) = (U − T (α)) ∪ T (β ), and 
�  T (α ↔ β ) = ((U − T (α)) ∪ T (β )) ∩ ((U − T (β )) ∪ T (α)). 
Example 
For  the natural numbers and  the proposition even  the  truth set  is 
T (even) = {2, 4, 6, . . .}. 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff 

HST 951/MIT 6.873 

33  / 56 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff 

HST 951/MIT 6.873 

34  / 56 

Propositions over Sets 
Propositions over Sets 
Semantics:  Interpretation 

Propositions over Sets 
Propositions over Sets 
Interpretation Example 

If we  let WFF (U ) be  the set of wff of PL(U ) we deﬁne  the 
interpretation  I (α, x ) of a wff α with respect  to an element x  in U  to be 
�  I (α, x ) = 1  if and only  if x  ∈ T (α). 
Alternatively, we can  formulate  the above as 

I (α, x ) = χT (α) (x ). 

Consider  the propositions “x  is a prime number” and “x  is an even 
number” over  the natural numbers modeled by  the characteristic 
functions even and prime with  the usual deﬁnitions.  Let 
α = even ∧ prime.  Then we have  that 
T (α) = T (even) ∩ T (prime) = {2}, 

and  I (α, x ) = 1  if and only  if x  = 2. 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff 

HST 951/MIT 6.873 

35  / 56 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff 

HST 951/MIT 6.873 

36  / 56 

Propositions over Sets 
Propositions over Sets 
PL(U ) ⊇ PL 

Propositional Rules 
Propositional Rules 
The  implication view 

We state  that PL  is “contained  in” PL(U ).  Indeed, PL  is contained  in 
PL({0, 1}) as we can  let a ∈ V  become a ∈ F  given by T (a) = {s(a)}. 
Then  Is (α) = I (α, 1). 

if­then  form 
if height =  tall and hair = dark  then  look=handsome 
�  “height =  tall and hair = dark”  is  the antecedent or “if­par t”, 
�  “look=handsome”  is consequent, or “then­par t”. 

Application 
�  fact:  height =  tall and hair = dark 
�  rule:  if height =  tall and hair = dark  then  look=handsome 
�  inference:  look=handsome 
In effect we are using Modus ponens 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff 

HST 951/MIT 6.873 

37  / 56 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff 

HST 951/MIT 6.873 

38  / 56 

Propositional Rules 
Propositional Rules 
The  implication view:  formals 

Propositional Rules 
Propositional Rules 
Computation:  Computing  the  Interpretation 

The descriptor “height =  tall”  is a proposition HeightTall over  the set of 
all people. We now  formulate  the  if­then rule as propositions over sets: 
(HeightTall ∧ HairDark) → LookHandsome 

The application becomes: 
(HeightTall ∧ HairDark) 
(HeightTall ∧ HairDark) → LookHandsome 
(LookHandsome) 

Effect: 
We  infer  the unknown proposition LookHandsome. 

Deﬁnition 
→
� 
β ).  The application of  this rule  to a data point x  is
Given a rule (α
the computation of  I (β , x ) as  I (α, x ). 
1 
I (α, x ) = 1, 
0  otherwise. 

In other words we set  I (β , x ) = 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff 

HST 951/MIT 6.873 

39  / 56 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff 

HST 951/MIT 6.873 

40  / 56 

Fuzzy Sets 

Fuzzy Sets 
Inherent Vagueness 

Fuzzy Sets 

Fuzzy Sets 
Generalization of Characteristic Functions 

�  What would you answer  if  I ask “Am  I  tall?”.

�  Does knowing  that  I am 6ft  tall help?

�  Not really.  The problem  lies  in  the meaning of  the word “tall”.  I

might be  tall  in Japan, but not  in Holland. 

Inherent Vagueness 
Fuzzy sets offer a way of modeling  Inherent Vagueness. 

Central: 
the generalization of  the characteristic  function χS  :  U  → {0, 1} of set

S  to membership  function µS  :  U  → [0, 1].

µS  :  U  → [0, 1] gives a degree of memberhip  in  the  fuzzy set S .


Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff 

HST 951/MIT 6.873 

41  / 56 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff 

HST 951/MIT 6.873 

42  / 56 

Fuzzy Sets 

Fuzzy Sets 

Fuzzy Sets 
Crisp Set Operators Deﬁnitions 

Let A and B  be  two subsets of some set U . We deﬁne union, 
intersection, difference, and complementation using  in  terms of χA  and 
χB  as  follows: 
Deﬁnition 

Fuzzy Sets 
Fuzzy Set Operations Example 

Example 

χA∩B (x ) =  min(χA (x ), χB (x )) 
χA∪B (x ) =  max(χA (x ), χB (x )) 
χA−B (x ) =  min(χA (x ), 1 − χB (x )) 
χAc (x ) =  1 − χA (x ). 

For  fuzzy set operations substitute µ  for χ . 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff 

HST 951/MIT 6.873 

43  / 56 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff 

HST 951/MIT 6.873 

44  / 56 

Fuzzy Relations 

Fuzzy Relations 

Fuzzy Relations 
Deﬁnition 

Fuzzy Relations 
Crisp Composition 

Deﬁnition 
A  fuzzy relation R  from a set X  to a set Y  is a  fuzzy set  in  the 
car tesian product X  × Y ,  i.e., µR  is a  function µR  :  X  × Y  → [0, 1]. 
For x  ∈ X  and y  ∈ Y ,  the value µR (x , y ) gives  the degree  to which x  is 
related  to y  in R . 

For crisp binary relations R  ⊆ X × Y  and R �  ⊆ Y  × Z  we can formulate 
their composition  in  terms of characteristic  functions 
{min(χR (x , y ), χR � (y , z ))}
χR R �� (x , z ) = max 
◦
y ∈Y 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff 

HST 951/MIT 6.873 

45  / 56 

Staal A. Vinterbo  (HST/DSG/HMS)

Fuzzy Stuff

HST 951/MIT 6.873

46 / 56 

Fuzzy Relations 

Fuzzy Relations 

Fuzzy Relations 
Fuzzy Composition 

Deﬁnition 
Let X , Y  and Z  be  three sets and  let R  and R �  be  two  fuzzy relations 
from X  to Y  and Y  to Z , respectively. 
{min(µR (x , y ), µR � (y , z ))}. 
µR R �� (x , z ) = max 
◦
y ∈Y 

For  fuzzy relations,  the deﬁnition of composition  is essentially  identical 
to  the crisp case but  for  the now expected substitution of µ  for χ . 

1 

Example 
Consider sets X  = {a, b , c }, Y  = {1, 2, 3, 4}, and Z  = {α, β } and  fuzzy 
relations R  and R �  from X  to Y  and Y  to Z  respectively.  Diagram: 
1 
a 
))))))))) 
>>>>>>>> 
������� 
.1 
0 
.6 
.5 
.5 
α 
b 
=
= 
 
=
=
 
)= =

 
=



))= 
=


=
=
=)
=
.4.8 
.17 
=
=  
))
= 

) 3


 .3
)

      
)))))
1
4 

R � (b , α) =  max{min(.6, .1)), 
min(.5, .5), 
min(.7, .8)}
1, .5, .7} = .
=  max{.

7 

µR

◦

2 

c

β

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff 

HST 951/MIT 6.873 

47  / 56 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff 

HST 951/MIT 6.873 

48  / 56 

A Restricted Fuzzy Logic 

A Restricted Fuzzy Logic 

Fuzzy Logic 
Deﬁning  the Fuzzy Logic Language 

Fuzzy Logic 
Semantics 

Recall: 
For PL(U ),  the  interpretation  I (α, x ) is given by 

I (α, x ) = χT (α) (x ). 

Deﬁnition (Fuzzy Propositional Language) 
We deﬁne FPL(U ),  the  language of propositions over  fuzzy sets by 
substituting µ  for χ  in  the deﬁnition of PL(U ). 

Deﬁnition (Fuzzy Truth Set) 
We deﬁne  the  fuzzy  truth set T (α) of wff α  in PL(U ) according  to  the 
following rules.  For p ∈ F , x  ∈ U , and wffs α and β : 
�  µT (p) (x ) = p(x ), 
�  µT (∼α) (x ) = 1 − µT (α) (x ), and 
�  µT (α∨β ) (x ) = max(µT (α) (x ), µT (β ) (x )). 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff 

HST 951/MIT 6.873 

49  / 56 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff 

HST 951/MIT 6.873 

50  / 56 

A Restricted Fuzzy Logic 

A Restricted Fuzzy Logic 

Fuzzy Logic 
Semantics of “Syntactic Sugar” 

Fuzzy Logic 
Examples 
Example 

Analogous  to  the PL(U ) case we can show  that 
�  µT (α∧β ) (x ) = min(µT (α) (x ), µT (β ) (x )), 
�  µT (α→β )  = max(1 − µT (α) (x ), µT (β ) (x )), and 
�  µT (α β ) (x ) = 
↔
min(max(1 − µT (α) (x ), µT (β ) (x )), max(1 − µT (β ) (x ), µT (α) (x ))). 
Deﬁnition (Fuzzy  Interpretation) 
If we  let WFF (U ) be  the set of wffs of FPL(U ) we deﬁne  the 
interpretation  I (α, x ) of a wff α with respect  to an element x  in U  to be 
�  I (α, x ) = µT (α) (x ). 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff 

HST 951/MIT 6.873 

51  / 56 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff 

HST 951/MIT 6.873 

52  / 56 

A Restricted Fuzzy Logic 

Summary 

Fuzzy Rules 
Deﬁnition 

Summary 
Propositions 

There are different ways of deﬁning  fuzzy rules. We choose  the 
following: 
Deﬁnition 
I (β , x ) is computed as 

I (β , x ) = I (α, x ) 
according  to  the  fuzzy rule (α → β ). 

We have  learned 
�  about  the propositional  language PL, with variable assignments 
given by settings and  the  truth value of an well  formed  formula 
(wff) given by  the  interpretation. 
�  that a wff  is valid  if  its  interpretation  is 1  for all possible settings, 
and is satisﬁable if there exists a setting such that its interpretation 
is 1. 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff 

HST 951/MIT 6.873 

53  / 56 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff 

HST 951/MIT 6.873 

54  / 56 

Summary 

Summary 

Summary 
Propositions over sets 

Summary 
Fuzzy Sets and Logic 

We have  learned 
�  about  the propositional  language PL(U ), over propositions over 
sets modeled by characteristic  functions of subsets of U . 
�  that a  truth set  for a given wff  is  the set  for which  the  interpretation 
is a characteristic  function. 
�  that a propositional rule essentially  is  the application of modus 
ponens  to an  implication called  the rule. 

We have  learned 
�  that  fuzzy sets are a generalization of crisp sets by relaxing  the 
characteristic  function  to a membership  function giving  the degree 
of membership  in  the set. 
�  that  fuzzy propositions are  just  like  the crisp counterpar ts, 
�  and that we can deﬁne fuzzy rules just like their crisp counterpar ts. 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff 

HST 951/MIT 6.873 

55  / 56 

Staal A. Vinterbo  (HST/DSG/HMS) 

Fuzzy Stuff 

HST 951/MIT 6.873 

56  / 56 

