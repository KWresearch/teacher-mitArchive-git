6.034 Artificial Intelligence. Copyright © 2004 by Massachusetts Institute of Technology. 

6.034 Notes: Section 1.1 

Slide 1.1.1 

This is a brief introduction to the content and organization of 6.034. 

Slide 1.1.2 

These are the topics that we will cover during the semester. 6.034 is an introductory subject. Our 
goal is to give you a solid introduction to three key topics: search, knowledge representation and 
inference, and machine learning. We will introduce a variety of other different topics in AI, such as 
planning, robotics and natural language only in passing. Subsequent courses in AI cover those areas 
in more depth. 

Slide 1.1.3 

These are the formal and informal prerequisites for the subject. 

6.001 is an essential prerequisite. In particular, we expect you to read and understand substantial 
Scheme programs and to make small modifications to the code. Remember, this is a subject in 
computer science. Programming is to CS as calculus is to physics and EE; it is the essential 
language for making the ideas concrete. Also, practice makes perfect and you should take every 
opportunity to practice programming. Scheme is the language that we can count on everyone having 
from 6.001, so we use it heavily. It is also highly suitable for many (though not all) of the topics 
covered in this subject. If you're going to study computer science, you should take mastering 
programming languages in stride. 

We will assume that you know basic differential calculus of several variables and vector algebra, 
such as covered in 18.02. You will not be able to understand machine learning without this basic 
mathematical background. 

6.034 Artificial Intelligence. Copyright © 2004 by Massachusetts Institute of Technology. 

Slide 1.1.4 

The class meets as a whole twice a week for 1 1/2 hours. The lectures will introduce the basic 
material for the course. These on-line chapters are the textbook for the course; you are responsible 
for the material in the on-line text. Most weeks there will be a required on-line problem set. 

We will schedule meetings with the TAs on Friday in groups of about 20 students. These recitation 
meetings will go over the on-line problem set problems. The meetings are required unless you've 
already completed all the on-line problems correctly by Friday. 

The recommended book provides a wealth of additional materials and in-depth exploration of the 
topics we will cover. Although the book is not required, you might find it very helpful if you want 
to dig deeper into the material. 

We will have two in-class quizzes (held in-class on the indicated dates) and a final. 

Slide 1.1.5 

The grading is broken down as shown here. The only aspect that requires some comment is the 
treatment of the on-line problems. I feel that you can't really learn the material without doing the 
problems. You may even be able to do well on the exams but you won't have a full understanding 
without working the problems. And so, the problems are required. 

Since most (though not all) of the problems have "Check" buttons, you should be able to get full 
credit for them. Some of the problems don't have Check buttons and so you won't necessarily get 
100% on every problem set. On the other hand, we don't expect you to get a score of 100%; 90% is 
sufficient for full credit. You won't get a better final grade because you got 100% on the problems. 
So, don't obsess about losing a point here and there. The objective of the problems and exercises is 
to help you learn the material and make sure that you understand what we view as key points. 

Slide 1.1.6 

Don't hand in work that you did not do, even to the on-line system. Talking to other people to try to 
understand the material is fine, in fact, encouraged. Cutting and pasting someone else's answer is 
NOT fine under any circumstances. Not only is it unethical but you will fail to learn anything in the 
course. 

If you feel so pressured that you are tempted to turn in someone else's work, you are probably trying 
to do too much. You should probably be taking fewer subjects or cutting back somewhere else. 
Speak to your advisor or a counseling Dean or come talk to one of us. 

6.034 Artificial Intelligence. Copyright © 2004 by Massachusetts Institute of Technology. 

6.034 Notes: Section 1.2 

Slide 1.2.1 

This section provides you with a quick overview of the on-line system that we will be using in the 
class. If you've used the On-Line Tutor in 6.001, you should be familiar with the operation of this 
system in spite of the slightly different look. 

Slide 1.2.2 

These presentations will tend to focus on the nitty-gritty detail of the material and be a bit skimpy on 
motivation - we will do more of that in class. We have tried to provide a variety of ways of going 
through the material, either on-line or for printing; hopefully you will find one that suits you. 

Note that each assigned chapter will have several presentations (sections) as well as some interactive 
exercise problems. You should do these correctly after going through the appropriate section - this 
should help make sure that you picked up on the key points of the section. 

We also have more substantial interactive problems, including programming problems, in the week's 
problem set. 

Slide 1.2.3 

The on-line problems come in three basic types: multiple-choice or true-false problems which have 
basically binary answers, short answers where you enter a phrase, expression or equation and coding 
problems. You can check the correctness of your answers to the short answer and coding problems 
with the Check button. Once you are satisfied with your answer, Submit it, which will show you our 
answer. Of course, after submission, you won't be able to change your answer. 

Note that you will get a gold star next to the problem set name (in the Contents page) if you 
submitted all the required problems and scored 90% or better (which means full credit). Some 
problems are not graded, e.g., surveys and feedback problems, but still have to be submitted (even if 
blank) to get the star. A few problems may be marked optional and need not be submitted to get the 
star. 

Slide 1.2.4 

Some problems are multi-part with each part being of one of the types discussed earlier. These 
problems will have only one Submit button; make sure that you do all of the parts before submitting. 

On a separate point, it is often useful to have a page open to one of the presentations while working 
on a problem. To do this, use Ctl-N in most modern browsers. 

6.034 Artificial Intelligence. Copyright © 2004 by Massachusetts Institute of Technology. 

Slide 1.2.5 

Some problems can be solved by guessing using the Check button. This is not recommended; if it 
comes up on an exam, you won't have a Check button handy. 

Occasionally, the system will mark wrong an answer that you know is right. Please let us know right 
away so that we can fix it (although probably not at 3am). Consider it your humanitarian duty 
towards your fellow students. Don't waste your time trying to figure out what the system is looking 
for. Of course, before sending us e-mail, please make sure that you actually read the problem... 

Slide 1.2.6 

Click on the Preferences button to see what options are available. Hopefully the defaults are set 
sensibly but the Preferences are generally there in response to requests from previous users. 

Slide 1.2.7 

We'd like to be able to address any issues that you have with the material, the organization of the 
course, or the on-line system. To that end, we have provided you with several mechanisms to try to 
get your feedback. Of course, you can always send email about any of this to me or to any of the 
TAs. There's an email link at the bottom of every page that reaches all of us. In addition, each 
chapter and problem set has a question that's explicitly geared to getting feedback on the current 
material. 

Of course, you can always ask questions in class. But, we know that many of you will not ask a 
question in class if your life depended on it. So, let's see if the technology can help. 

Slide 1.2.8 

You will need to use Scheme in this subject. For short problems, you might be able to debug directly 
on the on-line system - although the underlying Scheme is not very good about error messages and 
interactive debugging is out of the question. 

For any substantial programming, especially for the projects, you will need a stand-alone system. 
On Intel x86 machines (running Windows, Linux, FreeBSD), the MIT Scheme system works pretty 
well. However, you should install the most recent complete release of MIT Scheme - don't rely on 
the one from 6.001. 

If for some reason you don't have regular access to an Intel x86 machine, there are a couple of other 
options mentioned on our Web page, but we make no guarantees. 

6.034 Artificial Intelligence. Copyright © 2004 by Massachusetts Institute of Technology. 

Slide 1.2.9 

If you're experiencing any technical problems, please send us e-mail with helpful information, such 
as the HTML source of the page showing the problem and a description of your environment. 

If you are using an old Netscape and you get a blank page that doesn't mean there is no HTML 
there. What it means is that the Netscape HTML renderer has decided that the HTML on the page is 
not perfect and it's not worth rendering. Unfortunately, there's usually an informative error message 
lurking in there. So, if faced with a blank page, get the HTML source and, if there's anything there, 
send it along to us. It's likely to help us catch the bug. 

We had someone in the end-of-term survey say "Halfway through the term the sound stopped 
working", but this person never told anyone who could do anything about it that they were having 
problems! I guess they assumed that it had stopped working for everyone and someone else would 
report it. Well it didn't fail for everyone and no one reported it. We might not be able to solve all 
your problems, given the immense variety of incompatible or broken software and hardware out 
there, but we definitely can't solve any of your problems if you don't tell us about them. 

Slide 1.2.10 

This is a bit of a 6.001 review. Your browser has interpreters for a few languages, specifically 
HTML, Javascript and Java. You learned about interpreters in 6.001. So, suppose I write a Scheme 
program for a Scheme interpreter and, when I run it, the interpreter crashes and burns, whose fault is 
this? Is it my fault for writing such a nasty Scheme program? Or, do we have a buggy interpreter on 
our hands? If you said it was the fault of the program, you should go back and review 6.001 and try 
again. 

Similarly, if you feel that your browser (or your OS) crashing is due to the little piece of Java (or 
HTML or Javascript) code in our on-line system, try again. I can pretty much guarantee you that it is 
because you have some buggy combination of browser and Java Virtual Machine installed on your 
machine; there are plenty of these around. I am confident of this because, by design, I'm not 
supposed to be able to write Java (or HTML or Javascript) code that crashes your browser (or, 
heaven forbid, your machine). Note that I am not promising that all our code will work correctly (I 
wish!). But crashing your browser or your machine should be beyond our power. 

Unfortunately, it means that these problems are also likely to be beyond our power to fix. We'd like 
to know when they happen (which seems to be mercifully rarely), but it's not clear that we will be 
able to help since we most likely won't even be able to reproduce it. It's likely something about your 
particular setup. So, you'll need to change the setup. In any case, do let us know if you experience problems. 

