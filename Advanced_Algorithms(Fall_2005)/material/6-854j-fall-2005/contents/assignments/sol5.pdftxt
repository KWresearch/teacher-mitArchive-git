Massachusetts  Institute  of  Technology 
6.854J/18.415J: Advanced  Algorithms 
David  Karger 

Handout  12 
Wednesday,  October  17,  2005 

Problem   Set   5   Solutions  

Problem  1. 
(a)  Consider  the admissible graph.  Let Li  denote the vertices  located 
in  the  layer  i  (with distance  i  from the source).  We note that L0  = s and Ld  = t. 
Then  we  take  the  summation  of  number  of  elements  in  all  pairs  of  layers 
� 
d  |Li | + |Li+1 | ≤ 2n . 
i=1  

We conclude the inequality because we count each layer at most twice.  By pigeon-
holing,  when  we  add  d  elements  to  get  2n,  there  must  be  at  least  one  element 
of  value  ≤  2n/d.  Thus,  we  conclude  that  |Li | +  |Li+1 | ≤  2n/d  for  some  i, or 
(|Li | + |Li+1 |)/2 ≤ n/d. 
�
�2 
The  number  of  edges  between  layers  i  and  i + 1  is  at  most1 
�2 
� n 
|Li | + |Li+1 |  ≤ 
|Li | |Li+1 | ≤ 
d 
2 

. 

Since  the  full graph has no edges  jumping  layers  that are  in  the admissible graph 
(otherwise,  the  layers  are  incorrect  in  the  admissible  graph),  we  conclude  that 
the  cut  between  layers  Li  and  Li+1   has  a  capacity  ≤  (n/d)2 ,  as  each  edge  has 
unit  capacity.  Thus,  the max  ﬂow  is  at most  (n/d)2  . 
After  k  blocking  ﬂows,  s  and  t  are  at  a  distance  of  k  from  eachother.  The  max 
ﬂow of the residual graph is (n/k)2  from above, thus we need to do at most (n/k)2 
more  blocking  ﬂows.  Setting  k = n2/3 , we  get  the  total number  of blocking  ﬂows 
is  O(k + (n/k)2 ) = O(n2/3  + (n/n2/3 )2) = O(n2/3  + (n1/3 )2) = O(n2/3). 

Problem  2. 
(a)   We  represent  the  problem  as  a  bipartite  graph  G  with  vertex  set  Students   ∪ 
√ 
Recitations  and unit-capacity edges representing availability of students to attend 
recitations.  Now use the O(m n) bipartite matching algorithm to ﬁnd a maximal 
matching. 
(b)   We  reduce  the problem  to a max ﬂow as  follows.  Expand  the graph G by adding 
a sink  s, a source  t,  unit-capacity  edges  from  s  to  each  student,  and  edges  from 
each recitation to t with capacity k .  Any max ﬂow  in this graph gives an optimal 
assignment  of  students  to  recitations. 
√ 
ab   ≤ (a  +  b)/2,   or   geometric   mean   is   at most   arithmetic   mean.  

1First   step of   inequality   follows   from  

2 

Handout  12:  Problem  Set  5  Solutions 

(c)   Suppose we remove (cid:1) blocking ﬂows, so that the distance between source and sink 
is  ≥  (cid:1).  Each  path  in  the  residual  graph  has  length  ≥  (cid:1)  and  thus  passes  through 
≥ 
(cid:1)−1  students (since the path must alternate student, recitation, student, recita-
= O( n 
tion,  etc.,  before  reaching  the  sink).  Therefore,  there  exist  ≤  2
2 
|#  students |
(cid:1) ) 
(cid:1)−1 
√
√ 
disjoint  paths  from  source  to  sink,  so  n  additional blocking  ﬂows  suﬃce.  Setting 
(cid:1) =  n, this gives  O(  n)  total  blocking  ﬂows. 
(cid:1) 
Each blocking ﬂow can be computed in O(m) time using the same advance-retreat 
DFS  algorithm  as  for  unit  capacity  graphs.  This  is  because  the  only  non-unit 
capacity  edges  are  the  edges  from  recitations  to  the  sink,  and  we  only  advance 
√ 
to  the  sink  on  the  last  step  of  the  blocking-ﬂow  algorithm.  The  overall  running 
time  is  thus  O(m n). 

Problem  3.  Let A = (aij ) be an  n × n matrix 
with  fractional  entries  such  that  all  row  and  column  sums  are  integral.  Without  loss  of 
generality,  we  assume  that  0 ≤  aij  <  1  for  all  i, j  ∈ {1, ..., n}.  (We  can  subtract  (cid:6)aij (cid:7)  from 
each  aij ,  perform  the  procedure  below,  and  add  back  the  same  amount  afterwards.) 
Consider  the graph G with vertex  set {s, t} ∪ {vij  : i, j  ∈ {1, ..., n}} ∪ {r1 , ..., rn} ∪ {c1 , ..., cn}
where  the  r ’s  and  c’s  represent  the  rows  and  columns  of  A,  respectively.  For  all  i, j  ∈ 
{1, ..., n},  let  there  be  edges: 
� � 
•  (s, ri)  with  capacity 
j �  aij � , 
•  (cj , t)  with  capacity 
i�  ai� j , 
•  (ri , vij ) and  (cj , vij )  with  capacity  (cid:8)aij (cid:9),  i.e.,  0  if  aij  = 0  and  1  otherwise. 
� 
Consider  the  s-t  cut  (S, T ) where  S  =  {s}.  Clearly  the  value  of  this  cut  is 
i,j 
� � 
consider  the  ﬂow  f  where: 
•  f (s, ri) = 
j �  aij � , 
•  f (cj , t) = 
i�  ai� j , 
•  f (ri , vij ) = f (vij , cj ) = aij . 
� 
f  has  value 
i,j  aij ,  the  same  as  the min  cut.  Therefore,  f  is  a max  ﬂow. 
Note  that  G  has  integral  capacities,  so  G  has  an  integral  max  ﬂow  g . Let  B  = (bij ) be the 
n × n matrix  where  bij  = g (ri , vij ).  B  is  the  desired  integral matrix. 

aij . Now 

