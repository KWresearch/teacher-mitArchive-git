Massachusetts  Institute  of  Technology 
6.854J/18.415J:  Advanced  Algorithms  
David   Karger  

Handout  7 
Friday,  October   7,  2005 

Problem  Set   5 

Due:  Wednesday,  October  12  2005. 

In  class  we  proved   a  running  time  bound  of   O(m3/2 )  for  ﬁnding  a  maximum 
Problem  1. 
ﬂow  in  a  unit­capacity  graph  with  m  edges   using  blocking  ﬂows.   We  will  prove  some  related 
bounds. 

(a)  Consider  an  arbitrary  unit­capacity  graph,  and   let  d  be  the  distance  between   the

source  and  sink.  Prove   that  the  value  of  the  maximum  ﬂow  is  at   most  n2/d2  .

Conclude  that   O(n2/3 ) blocking  ﬂows  in  time  O(mn2/3 ) suﬃce  to  ﬁnd  a  maximum

ﬂow.  Hint:  argue  that  there  are  two  adjacent   layers  in   the  admissible  graph   with

few  vertices  in  each.   How  much  ﬂow  can   cross   between  the  two   layers?) 

(b) 	 Consider  a   graph  in  which  all   edges  are  unit  capacity,  except  for  the  edges   incident

on  p  vertices  which  have  arbitrary  integer  capacities.  Extend  the  unit­capacity

ﬂow  bounds  to  give  good  bounds   in   terms  of  m,  n,  and  p  on  the  number  of

blocking  ﬂows   needed  to   ﬁnd  a  maximum  ﬂow.


Problem  2. 
You  are   TAing  a  class  with  s  students  and  r  recitations.  The  students  tell 
you  which  recitations  they  can  ﬁt  into  their  schedules.  However,  each  recitation  has   room 
for  only  k  students.  (Conversely,   each   student  only  has  to  attend   one  recitation.)  Your  goal 
is  to  assign  the  most  students   to   recitations  within   these  constraints. 

√
(a)  Suppose  ﬁrst   that  k  = 1  (personal  tutors!).  How  can   you   easily  solve  this   problem

n)  time?

in  O(m
(b)	 Now  suppose  k  is  arbitrary.  How  can   you  solve  this   problem  with   maximum

ﬂow?

√
n)  time  bound   can   be   achieved   for   your  network  from  part

(c)  Argue  that  an  O(m
(b),  as  in  unit   networks. 


Problem  3. 
Consider  a  matrix  of  numeric  data  where  each  entry  is  fractional,  but  each 
row  and   column  sum   is  an  integer.   Prove  that   you   can   “round  oﬀ   ”  this  matrix,  rounding 
each   entry  to  the  next  integer  above  or   below,  without  changing  the  row   or   column  sums. 
Hint:  the   matrix  can  be  thought  of   as   describing  (most  of )   a  ﬂow   in   a  bipartite   graph.  
Recall   that  integer  ﬂow  problems  have  integer   solutions. 

