Massachusetts  Institute  of  Technology 
6.854J/18.415J:  Advanced  Algorithms  
David   Karger 

Handout  13  
Wednesday,  October  18,  2005 

Problem  Set  7 

Due:  Wednesday,  October   26,   2005. 

Problem  1. 

Suppose  you  are  given   two  polyhedra  P  =  {x  Ax  ≤ b} and  Q =  {x  Dx  ≤ e}.
|	
| 

(a)  Using  duality,  prove  that  if  polyhedra  P  and  Q  have  empty  intersection  (i.e.,  no

point  is  in  both),   then  there  are  y , z  ≥ 0  such  that  yA + zD  = 0  but  yb + ze  <  0.

(b)	 Conclude  that   if  polyhedra   P  and  Q  have  empty  intersection  (i.e.,  no  point  is   in

both),   then  there  is  a  separating  hyperplane  for  P  and  Q  (i.e.,  a  vector  c  such

that  c  x  <  c   w  for  all  x  ∈  P  and  w  ∈  Q).   Hint:  consider   c  =  yA  from  the

·
· 
previous  part.  

(c)  Conclude  that  given  the   two   polyhedra,  there  is   a  quickly  veriﬁable  answer   as   to 

whether  or  not  the   two   polyhedra   have  a  point   in  common (do   not  worry  about 

whether  the  numbers  in  your  answer   have  large  representations).


NONCOLLABORATIVE  Problem  2. 
Another  way  to  formulate  the   maximum­ﬂow 
problem  as  a   linear  program   is  via  ﬂow  decomposition.  Suppose  we  consider  all  (exponentially  
many)  s­t  paths  P  in  the  network  G,  and   let   fP  be  the  amount  of  ﬂow   on  path   P .  Then 
� 
maximum  ﬂow  says  to   ﬁnd 
� 
fP , 
P �e 

z  =  max 
fP	 ≤
ue ,
0.≥ 

fP 

(The  ﬁrst  constraint  says  that  the   total  ﬂow  on  all  paths   through   e  must  be  less   than  ue .) 
Take  the   dual of   this  linear  program  and   give  an  English  explanation   of  the  ob jective   and 
constraints.  

Although  the  dual   can  tell  you   a  lot   about  the  structure  of  a  problem,  knowing  
Problem  3. 
an  optimal  dual  solution  does  not  in   general  help  you  solve  the  primal  problem.  Suppose   we 
had   an  algorithm  that  could  optimize  an  LP  with  an  m × n  constraint  matrix  in  O((m + n)k ) 
time   given   an  optimal   solution  to   the  dual  LP. 

2 

Handout  13:   Problem  Set  7 

(a)  Argue  that   any  LP  optimization  problem  can   be  transformed  into  the  following 

form: 

0  x· 
minimize 
sub ject  to  Ax  =  b

x  ≥ 0

(This  LP  has  optimum  value  0  if  it  is  feasible,  and  ∞  if  it   is  infeasible.)

(b)  What  is  the  dual  of  this  linear   program? 

(c)  Argue  that,   if  the  primal  is   feasible,  then  the  dual  has  an   obvious  optimum

solution. 

(d)	 Deduce  that,  given  the  algorithm  above,  you  can   build   an  LP  algorithm  that 

will  solve  any   LP  without  knowing  a  dual  solution,  in  the  same  asymptotic  time

bounds  as  the  algorithm   above. 


Problem  4. 
Consider  a  graph  in  which   edges   have  costs (possibly  negative,  representing  
proﬁts).  Suppose  you   want  to   ﬁnd  a  minimum  mean  cycle  in   this  graph:   one  with  the 
minimum  ratio   of  cost  to  length  (number   of   edges).  Going  around   such  a  cycle   repeatedly  
(assuming  it  is  negative)  provides  you  with   the  maximum  possible  proﬁt  per   unit  length/time, 
so  is  the   fastest  way  to   earn  money  if  you   are,  for   example,  a  delivery  service.  Minimum  
mean   cycle  also  arises  as  a   subroutine   for   solving  problems   like  min  cost   ﬂow.  Consider   the 
� 
following  linear  program: 
� 
w  =  min 
cij fij 
fij  − fj i � 
(∀i)  
j 
fij  =  1 
fij  ≥  0 

=  0 

(a)  Explain  why   this  captures  the  minimum  mean  cycle  problem.  (Hint:  fij  is   a 
circulation  so   can  be   decomposed  into  cycles.)  

(b)	 Give  the   dual   of  this  linear  program—it   will  involve  maximizing  a  certain   variable 
λ. 

(c)  Give  an  explanation  (in  terms  of  min­cost­ﬂow  reduced  costs)   for   why  this   dual 
formulation  also  captures  minimum  mean   cycles.  (Hint:  how  much   is  added  to 
the   cost  of  a   k ­edge  cycle?) 
(d)	 Let’s  assume  the  costs  cij  are  integers.  Suggest  a  combinatorial  algorithm  (not 
based  on  linear  programming)  that  uses   binary  search   to  ﬁnd  the  right   λ  to  solve 

Handout  13:  Problem   Set  7  

3 

the  dual  problem.  Can  you   use  this  to  ﬁnd   a  minimum  mean  cycle?  Note: 
to  know  when  you  can  terminate  the  search,  you  will  need   to  lower  bound  the 
diﬀerence  between  the  smallest  and   next   smallest  mean   cost   of  a  cycle. 

