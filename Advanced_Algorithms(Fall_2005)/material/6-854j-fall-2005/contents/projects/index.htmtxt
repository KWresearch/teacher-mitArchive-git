















[MIT_OpenCourseWare,_Massachusetts_Institute_of_Technology]
                              [Submit ../../common/ [Click_to_visit_our
Subscribe to the [Enter Email images/               Facebook_page.][Click
OCW Newsletter   ]            button_subscribe.png] to_visit_our_Twitter
                                                    feed.]
HelpÂ Â Â |Â Â Â Contact_Us
Â 
    * [Click_for_site_home_page.]
    * Courses
      ***** Find courses by: *****
          o Topic
          o MIT_Course_Number
          o Department
      ***** Collections *****
          o Audio/Video_Lectures
          o New_Courses
          o Most_Visited_Courses
          o OCW_Scholar_Courses
          o Supplemental_Resources
      Â 
      ***** Cross-Disciplinary Topic Lists *****
          o Energy
          o Entrepreneurship
          o Environment
          o Introductory_Programming
          o Life_Sciences
          o Transportation
      Â 
      Â 
      ***** Translated Courses *****
          o ç¹é«å­_/_Traditional_Chinese
          o ç®ä½å­_/_Simplified_Chinese
          o EspaÃ±ol_/_Spanish
          o PortuguÃªs_/_Portuguese
          o à¸ à¸²à¸©à¸²à¹à¸à¸µà¸¢à¸_/_Thai
          o ÙØ§Ø±Ø³Û_/_Persian
          o TÃ¼rkÃ§e_/_Turkish
          o (ë¹ëì¤)íêµ­_/_Korean
          o More...
    * About
          o About_MIT_OpenCourseWare
          o Site_Stats
          o OCW_Stories
          o OpenCourseWare_Consortium
          o Media_Coverage
          o Newsletter
          o Press_Releases
          o OCW's_Next_Decade
    * Donate
          o Make_a_Donation
          o Why_Donate?
          o Become_a_Course_Champion
          o Our_Supporters
          o Other_Ways_to_Contribute
          o Shop_OCW
          o Become_a_Corporate_Sponsor
    * Featured Sites
          o Highlights_for_High_School
          o MITx
          o Teaching_Excellence_at_MIT
[Search              ] [Submit ../../common/images/button_search.png] Advanced
                                                                      Search
Home Â» Courses Â» Electrical_Engineering_and_Computer_Science Â» Advanced
Algorithms Â» Projects
******  Projects  ******
    * Course_Home
    * Syllabus
    * Calendar
    * Readings
    * Lecture_Notes
    * Assignments
    * Projects
The basic goal of the project is for you to independently apply some of the
advanced algorithmic thinking you have been developing in this class. The
course project involves a combination of goals-encountering and independently
absorbing new material, doing some thinking about it, and presenting what you
have done. Different projects will attain these goals in different proportions.
There are 3 main ways to approach the project.
***** Reading Project *****
Find a few interesting but challenging theoretical papers on a coherent topic,
and write up an exposition that synthesizes their ideas. You will be graded on
how much clearer/more informative your exposition is than that of the original
papers (so the original papers should be pretty tough). While you need not give
all proofs in full detail, the reader should come away with a good
understanding of why it all works.
***** Theoretical Research *****
Develop an interesting new solution to an algorithmic problem. "Interesting"
may mean more efficient or may mean simpler. While you will presumably need to
do some background reading, there is no set lower bound on it so long as you
are able to advance beyond what is known. This kind of project will be graded
on the extent of the improvement on previous results.
***** Implementation Project *****
We have studied many algorithms in theoretical form. Their behavior when
implemented can be quite surprising. Grab one that interests you, implement and
test it as above. This kind of project will be graded on how well you explain
the algorithm you are implementing, what kind of interesting heuristics you
developed, what interesting test cases you ran them against, and how well you
interpret the results.
Algorithms papers tend to leave out a lot of little implementation details that
turn out not to be so little when the time comes to implement. You may also
explore implementation of heuristics that have "no theoretical value" but may
lead to enormous improvements in practice. Once you have an implemented
algorithm, you can test it to see how it performs in practice. This involves
devising interesting "hard" inputs that make the algorithm perform poorly.
Study of the algorithm's behavior may lead you to make changes in the algorithm
and test them. A typical implementation paper says "we implemented algorithm X
and it was awful, then we added heuristic Y and it was great!"
Be cautious - implementations can take a lot of time. Make sure what you are
trying to implement is a reasonably "small" algorithm. Give serious thought to
test inputs-ideally, they will come from real-world problems, or will be
specially designed to "stress" some aspect of the algorithm. You probably also
need a control (i.e. dumb) algorithm to compare yours to. Regardless of which
route you take, the end result should be a roughly 10 page paper describing the
results. Presentation quality will be a factor in your grade.
***** Some Frequently Asked Questions *****
**** What Topic Should I Work On? ****
The best topic to pick is one you are interested in anyway. Many of you are
already involved in some research project; some thought may reveal an
algorithmic component. Perhaps your system is presently using a naive algorithm
for X and could be improved by using a more sophisticated one. You can do
background reading on the topic (reading project), develop a theoretical model
of the problem and devise a solution (theoretical project) or take some extant
algorithm and try it out (experimental project). If you aren't working on
anything, try browsing through what we've covered in class as well as papers
(see below) to identify an area that sounds like fun. You are not limited to
the topics we have covered in class. Anything that uses algorithmic ideas and a
theoretical framework to devise more efficient solutions is fair game.
**** Where Can I Find Papers? ****
There are numerous sources of papers on algorithms. The best work in the area
is published in three conferences, each with yearly proceedings:
    * The ACM Symposium on Theory of Computing (STOC).
    * The IEEE Symposium on Foundations of Computer Science (FOCS).
    * The ACM-SIAM Symposium on Discrete Algorithms (SODA).
There are lots of other sources, of course. There are also journals but they
tend to be rather behind.
**** Is Collaboration Allowed? ****
Yes, even encouraged - group projects are much more fun, and you will be able
to get more done (more will be expected of groups). We recommend limiting group
size to at most 3.
*** Courses ***
    * Find_by_Topic
    * Find_by_Course_Number
    * Find_by_Department
    * Audio/Video_Courses
    * OCW_Scholar_Courses
    * Most_Visited_Courses
    * New_Courses
    * Translated_Courses
    * Supplemental_Resources
*** About ***
    * About_OpenCourseWare
    * Site_Stats
    * OCW_Stories
    * OCW_Consortium
    * Media_Coverage
    * Newsletter
    * Press_Releases
    * OCW's_Next_Decade
*** Donate ***
    * Make_a_Donation
    * Why_Donate?
    * Become_a_Course_Champion
    * Our_Supporters
    * Other_Ways_to_Contribute
    * Shop_OCW
    * Become_a_Corporate_Sponsor
*** Featured Sites ***
    * Highlights_for_High_School
    * MITx
    * Teaching_Excellence_at_MIT
*** Tools ***
    * Help_&amp;_FAQs
    * Contact_Us
    * Advanced_Search
    * Site_Map
    * Privacy_&amp;_Terms_of_Use
*** About MIT OpenCourseWare ***
MIT OpenCourseWare makes the materials used in the teaching of almost all of
MIT's subjects available on the Web, free of charge. With more than 2,000
courses available, OCW is delivering on the promise of open sharing of
knowledge.
[Massachusetts_Institute_of_Technology_logo_and_name.] [OpenCourseWare
Consortium_logo.] [Creative_Commons_logo_with_terms_BY-NC-SA.]
Â© 2001â2013
Massachusetts Institute of Technology
Your use of the MIT OpenCourseWare site and materials is subject to our
Creative_Commons_License and other terms_of_use.
Â 
