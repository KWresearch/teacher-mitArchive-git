Massachusetts  Institute  of  Technology 
1.203J/6.281J/13.665J/15.073J/16.76J/ESD.216J 
Logistical  and  Transportation  Planning  Methods 
Fall  2004 

Assignment  6  Solutions 

Prepared  by  Michael  Metzger  

1.   Example  6.7 

Let  G  be  the  graph  under  consideration  with  node  set  N . Let  x  be  some  point  between  nodes 

p  and  q .  For  all  x�  ∈  G,  x  is  reachable  from  x�  only  through  p  or  q .  Therefore,  the  shortest  path 

from  x  to  x�  is  through  either  p  or  q .  As  a  function  of  x,  d(x, x� )  is  a  piecewise  linear  function with 

slope  ±1  at  each  value  of  x.  Similarly,  it  is  easy  to  see  that  d(x, p) and  d(x, q),  as  functions  of  x 

are  linear  with  slope  ±1.  Since  m(x) = maxj∈N d(x, j )  by  deﬁnition,  then  m(x)  is  the  maximum 

of  piecewise  linear  functions  each  having  slope  ±1  for  each  value  of  x. So,  m(x)  itself  is  also  a 

piecewise  linear  function  of  x  with  slope  at  each  point  equal  to  ±1. 

Let  d(p,q) (p, x) and  d(p,q) (q , x)  be  the  distances,  along  link  (p, q) from  x  to  p  and  from  x  to  q , 

respectively.  Because  the  slope  of  m(x) is  ±1  for  each  point  x  on  the  link  (p, q),  as  we  move  from 

z  =  p  to  z  = x,  m(z )  can  decrease  by  no  more  than  d(p,q) (p, x).  Similarly,  as  we  move  from  z  = x 

to  z = q , m(z )  can  increase  by  no  more  than  d(p,q) (x, q).  That  is, 

m(x)  ≥	 max  m(p) −  d(p,q) (p, x), m(q) −  d(p,q) (x, q)) 
� 
�
1 
1 
m(p) −  d(p,q) (p, x) +  m(q) −  d(p,q) (x, q)
�
� 
�
� 
2 
2
m(p) + m(q) −  �(p, q) 
2 

= 

≥ 

The  second  inequality  follows  since  the  maximum  of  two  values  is  no  smaller  than  their  average.


	
Massachusetts  Institute  of  Technology 
1.203J/6.281J/13.665J/15.073J/16.76J/ESD.216J 
Logistical  and  Transportation  Planning  Methods 
Fall  2004 

2.  LO  Problem  6.6 

(a) 

�  � � 
(indegree  of  i) −  (outdegree  of  i) 
Pi  = 
� 
i∈N
i∈N 

= 

� 
(indegree  of  i) − 
i∈N

� 
(outdegree  of  i) 
i∈N 

=

�  �  �  � 
1 − 
1 = 0 . 
i∈N (k,i)∈A
i∈N (i,k)∈A 

Both of  the  last  two  sums  count  every directed arc of  the network  exactly once:  the  left­hand 

sum  from  the  point  of  view  of  the  tails  and  the  right­hand  sum  from  the  point  of  view  of  the 

heads.  Hence  the  diﬀerence  of  the  two  sums  is  zero  (note  that  every  arc  (i, j )  contributes 

exactly  one  to  the  outdegree  of  i  and  one  to  the  indegree  of  j ). 

(b)  In  order  to  have  a  directed  Euler  tour,  we  must  have  P �  = 0  for  all  nodes.  Parallel  to  the 
i 

undirected version, we add artiﬁcial arcs (i, j ) between supply nodes i ∈  S  and demand nodes 

j  ∈  D .  Unlike  the  undirected  version,  where  one  additional  arc  was  suﬃcient  to  make  any 

odd  node  even,  here  it  may  be  necessary  to  add  many  arcs  to  a  node  whose  |Pi |  is  large.  In 

order  to  minimize  the  total  length  of  arcs  added,  we  construct 

� 
i∈S 
�  = 0  for  all  nodes, 
paths  between  the  supply  nodes  and  demand  nodes.  In  order  to  ensure  Pi 

Pi  minimum  distance 

we  require 

j∈D xij  = Pi ,  ∀i ∈  S ,  which  implies  that 
� 

P �  = Pi −  outdegree  of  new  artiﬁcial  arcs = Pi − 
i 

� 
xij  = 0 .
j∈D 

Massachusetts  Institute  of  Technology 
1.203J/6.281J/13.665J/15.073J/16.76J/ESD.216J 
Logistical  and  Transportation  Planning  Methods 
Fall  2004 

Similarly,  we  require 

i∈S xij  = −Pj ,  ∀j  ∈ D ,  which  ensures  that 
� 

� 
xij  = 0 . 
�  = Pj + indegree  of  new  artiﬁcial  arcs = Pj + 
Pj 
i∈S 

Here,  xij  represents  the  number  of  new  artiﬁcial  paths  between  nodes  i  and  j . Since  we  now 

have P �  = 0, i ∈ S  and Pj 
�  = 0, j  ∈ D , we can construct an Euler tour.  It is certainly possible 
i 

to  use  a  link  more  than  twice  (See,  for  example,  arcs  (d, e) and (b, a)  in  the  next  part). 

(c)  Step   1:  S  =  {b, d, g} with  Pb  =  Pd  =  Pg  = 1,  and  D  =  {a, e} with  Pa  =  −2, Pe  =  −1.  By 

inspection,


Step  2: 

d(b, a) = 5,

d(b, e) = 17


d(d, a) = 14, d(d, e) = 3


d(g , a) = 20, d(g , e) = 9


minimize 

z = 5xba + 17xbe + 14xda + 3xde + 20xga  + 9xge  

sub ject  to 

xba + xbe  = 1 

xda + xde  = 1 

xga  + xge  = 1 

xba + xda + xga  = 2 

xbe + xde + xge  = 1 

xij  ∈ {0, 1, 2, . . . } 

Massachusetts  Institute  of  Technology 
1.203J/6.281J/13.665J/15.073J/16.76J/ESD.216J 
Logistical  and  Transportation  Planning  Methods 
Fall  2004 

There  are  only  three  feasible  integer  solutions  to  this  problem,  so  we  enumerate  these  and 

check  the  value  of  the  ob jective  function  in  each  case: 

(1)  xba  = 1, xbe  = 0, xda  = 1, xde  = 0, xga  = 0, xge  = 1 :  z = 5 + 14 + 9 = 28 

(2)  xba  = 0, xbe  = 1, xda  = 1, xde  = 0, xga  = 1, xge  = 0 :  z = 17 + 14 + 20 = 51 

(3)  xba  = 1, xbe  = 0, xda  = 0, xde  = 1, xga  = 1, xge  = 0 :  z = 5 + 3 + 20 = 28 

Both  solutions  1  and  3  are  optimal.  We  choose  the  solution  1.


Step   3:  We  add  paths  from  b →  a,  d →  a  (d →  e →  b →  a),  and  g →  e  (g →  d →  e).


g 

4 

5 

f 

6 

e 

8 

6 

6 

d 

3 

6 

c 

9 

b 

4 

4 

5 

a 

Step  4:   b →  a →  c →  d →  c →  f  →  g  →  d →  e →  g  →  d →  e →  b →  a →  d →  e →  b → 

a →  b  is  one  possible  tour. 

(d)  The suggested method forces us to traverse every undirected arc twice (once in each direction), 

which  may  not  be  optimal. 

3.  LO  Problem  6.11 

(a)   Let  G  be  an  arbitrary  tree. 

We  will  prove  the  equality  by  proving m(x) ≤  m(x ∗ ) +  d(x, x  ) and  m(x) ≥  m(x ∗ ) +  d(x, x  ). 
∗
∗

Massachusetts  Institute  of  Technology 
1.203J/6.281J/13.665J/15.073J/16.76J/ESD.216J 
Logistical  and  Transportation  Planning  Methods 
Fall  2004 

•  Claim:   m(x) ≤  m(y) + d(x, y),  ∀x, y ∈  G 

Pf:   ∀x, y , z  ∈  G,  the  shortest  path  from  x  to  z  is  no  worse  than  the  shortest  path  from  x  to 

y  followed  by  the  shortest  path  from  y  to  z .  That  is,  using  the  function  d(·, ·)  as  deﬁned  in 

the  text, 

d(x, z )  ≤  d(x, y) + d(y , z ),  ∀x, y , z  ∈  G 

Let  z  be  the point  in  the  tree  furthest  from x.  That  is,  z  is  s.t.  m(x) = d(x, z ).  Furthermore, 

note  that  ∀y ∈  G,  d(y , z ) ≤  m(y).  Combining  these  relations,  we  obtain  that,  ∀x, y ∈  G. 

m(x) 	 ≤  d(x, y) + d(y , z ) 

≤  d(x, y) + m(y) 

Letting  y = x ∗ ,  the  yet  unknown  absolute  center,  we  reach  the  desired  result. 

•  Claim:   m(x) ≥  m(x ∗ ) + d(x, x  ) 
∗

Pf:   We  must  ﬁrst  show 

∗	
–  Sub-claim:   ∃p, p�  ∈  G  s.t.  p  �=  p ,  m(x ∗ ) =  d(x  , p) =  d(x ∗  , p� ),  and  x 
∗ 
�

lies  on  the 

unique  path  from  p  to  p�  . 

Pf   of  Sub-claim:   Consider  the case where x ∗  does not coincide with a node.  Let q  and 

q �  be  the  nodes  s.t.  x  is  contained  on  the  link  (q , q � ).  For  any  r  ∈  N ,  the  set  of  nodes 
∗ 

in  the  network,  the  path  from  r  to  x ∗  must  pass  through  either  q  or  q �  .  Therefore,  we 

can  partition N  into  Nq  and  Nq �  ,  the  set  of  nodes  accessible  to  x ∗  via  a  path  through  q 

Massachusetts  Institute  of  Technology 
1.203J/6.281J/13.665J/15.073J/16.76J/ESD.216J 
Logistical  and  Transportation  Planning  Methods 
Fall  2004 

and  q � ,  respectively.  Nq  and  Nq �  are  disjoint  since  the  path  between  any  two  nodes  in  a 

tree  is  unique.  Therefore,  the  tree  cannot  contain  both  a  path  from  r  to  x ∗  via  q  and 

one  from r  to x ∗  via q �  (recall  that a path  is a “journey”  through  the network  that never 

covers  the  same  point  twice). 

Note  that  ∀r  ∈  N ,  d(r, x ∗ )  ≤  m(x  ),  by  the  deﬁnition  of  m(x ∗ ).  Let  p�  be  the  node 
∗

furthest from x ∗ , i.e.  d(p , x  ) = m(x ∗ ).  Without loss of generality, suppose that p�  ∈  Nq �  . 
∗
�

Suppose  there  is  no  r  ∈  Nq  s.t.  d(r, x ∗ ) =  m(x  ).  That  is,  ∀r  ∈  Nq ,  d(r, x ∗ )  < m(x  ). 
∗
∗

Accordingly,  ∃� >  0 s.t.  ∀r  ∈  Nq ,  d(r, x ∗ )  ≤  m(x  ) −  �.  Now  consider  the  point  y 
∗

which  is  also  on  the  link  (q , q

� )  but  is  � 
2 units  closer  to  q

�  than  is  x  .  Then,  ∀r  ∈  Nq , 
∗

d(r, y) =  d(r, x ∗

�
) + 2 < m(x
∗

) and  ∀r  ∈  Nq �  ,  d(r, y) =  d(r, x 
∗

�
) − 2 < m(x
∗ ).  Since


m(y) = maxj∈N d(j, y),  then m(y) < m(x ∗ ).  This yields a contradiction, since x  cannot 
∗ 

be  the  absolute  center.  So,  ∃p  ∈  Nq  s.t.  d(p, x ∗ ) = m(x  ).  Since  p  ∈  Nq  and  p�  ∈  Nq �  , 
∗

by  the  deﬁnitions  of  these  sets,  the  path  from  p  to  p�  must  cover  the  link  (q , q � ) and 

therefore  passes  through  x ∗  . 

The  case  of  x ∗  coinciding  with  a  node  is  completely  analogous  but  messier,  so  we  will 

leave  it  out  and  assume  the  claim  proved. 

–  Sub-Claim:  ∀x  ∈  G,  x ∗  lies  on  the  path  between  x  and  p  or  on  the  path  between  x 

and  p�


∗

Pf:   Suppose  not.  Then  the  path  from  p  to  x  to  p�  does  not  go  through  x  .  However, 

we  already  said  that  x ∗  must  lie  on  the  path  between  p  and  p�  .  Since  a  tree  contains  a 

unique  path  between  any  two  nodes,  this  yields  a  contradiction. 

Massachusetts  Institute  of  Technology 
1.203J/6.281J/13.665J/15.073J/16.76J/ESD.216J 
Logistical  and  Transportation  Planning  Methods 
Fall  2004 

Without  loss  of  generality,  suppose  that  x ∗  lies  on  the  path  from  x  to  p�  .  Then 

m(x)  ≥  d(x, p	� ) 

=  d(x, x  ) + d(x  , p � ) 
∗ 
∗

=	 d(x, x  ) + m(x  ) 
∗
∗

∗	
Since  m(x)  ≥	 m(x ∗ ) +  d(x, x  ) and  m(x)  ≤  m(x ∗ ) +  d(x, x  )  ∀x  ∈  G,  we have that  m(x) = 
∗

m(x ∗ ) + d(x, x	 )  ∀x ∈  G. 
∗

(b)  Now  consider  any  x ∈  G  and  let  es  be  the  farthest  point  from  x.  That  is, m(x) = d(x, es ). 

•	 Claim:   x ∗  lies  on  the  path  from  x  to  es .


Pf:   Suppose  not,  then


d(x, x  ) + d(x  , es )	 > d(x, es )

∗ 
∗

=  m(x)


=  m(x  ) + d(x  , x),  from  part  (a) 
∗ 
∗

∗	
m(x  )  < d(x	 , es ),  by  subtracting  d(x  , x) from each side 
∗
∗ 

∗	
≤  m(x  ),  by  deﬁnition  of m(x  ) 
∗

Contradiction,  since m(x ∗ ) < m(x  )  is  impossible. 
∗

Massachusetts  Institute  of  Technology 
1.203J/6.281J/13.665J/15.073J/16.76J/ESD.216J 
Logistical  and  Transportation  Planning  Methods 
Fall  2004 

Now,  using  the  fact  that  x ∗  lies  on  the  path  from  x  to  es ,  we  have  that 

m(es ) =  m(x  ) + d(x  , es ),  from  part  (a) 
∗ 
∗

=  m(x  ) + (d(es , x) −  d(x  , x)) 
∗ 
∗

=  m(x  ) + m(x) −  d(x  , x),  since  d(es , x) = m(x) 
∗ 
∗

=  m(x  ) + (m(x  ) + d(x  , x)) −  d(x  , x),  from  part  (a) 
∗
∗
∗ 
∗ 

= 2m(x  ) 
∗

If  we  repeat  the  proof  of  the  Claim  using  es  in  place  of  x,  we  know  that  x ∗  must  lie  on  the 

path  from  es  to  the  furthest  point  from  es ,  namely  et .  Therefore,  d(x ∗  , es ) =  m(x  ) = 1 
2 m(es ) = 
∗

1 
2 d(es , et ).  The  ﬁrst  equality  holds  since,  if  there  were  a  vertex  further  from  x ∗  than  es  in  the 

direction of es ,  then  it would also be  further  from et  than es  (contradiction).  So, x  is the midpoint 
∗

between  es  and  et . 

4.  LO  Problem  6.17 

-1/2 

Town A 

0 

x

1/2 

Town B 

(a)  Let  S  denote  the  service  time  (travel  time  +  on­scene  time)  for  a  random  patient.  Since  the 

travel  speed  v  is  1  and  the  on­scene  time  τ  is  1,  we  have  the  following  service  time  PMF: 

pS (s) = 

fA ,

s = 2(0.5 + x) + 1 

⎧ ⎪ ⎪ ⎨ 
⎪ ⎪ ⎩  fB , s = 2(0.5 −  x) + 1 

Massachusetts  Institute  of  Technology 
1.203J/6.281J/13.665J/15.073J/16.76J/ESD.216J 
Logistical  and  Transportation  Planning  Methods 
Fall  2004 

From  the  PMF,  we  obtain 

E [S ] = fA  2(0.5 + x) + 1  + fB  2(0.5 −  x) + 1  = 2(fA −  fB )x + 2 , 
� 
� 
� 
� 
E [S 2 ] = fA  2(0.5 + x) + 1 �2  + fB  2(0.5 −  x) + 1  = 4x 2  + 8(fA −  fB )x + 4 . 
�2 
�
�

Let  R  be  the  response  time  to  a  random  patient.  Then  E [R] = Wq + E [S ],  where  Wq  is  the 

average waiting  time  in  the  queue.  Using  the  formula  for Wq  of  the M/G/1  queueing  system, 

E [R] =	

+ E [S ] = 

+ E [S ]

λ(E [S ]2  + σ2 
λE [S 2 ]
S ) 
2(1 −  λE [S ]) 
2(1 −  λE [S ]) 
1  4x2  + 8(fA −  fB )x + 4 � 
� 
4 =	
+ 2(fA −  fB )x + 2
1
2 1 −  4 (2(fA −  fB )x + 2) 
� 
�
x2  + 2(fA −  fB )x + 1 
1 −  (fA −  fB )x 

+ 2(fA −  fB )x + 2 . 

=	

1
(b)  If  fA  = fB  =  2 ,  E [R] = x2  + 3.  The  value  of  x  that  minimizes  E [R]  is  0.  Hence  the  optimal 

location  of  the  hospital  is  the  mid­point  between  the  two  towns. 

(c)  The  answer  in  (b)  does  not  agree  with  Hakimi’s  theorem.	 If  Hakimi’s  theorem  held,  Town 

A  or  Town  B  would  be  the  optimal  location.  In  fact,  locating  the  hospital  at  Town  A  or 

Town  B  maximizes  E [R].  Note  that  E [R]  is  a  convex  function  of  x.  Hakimi’s  theorem  holds 

when  a disutility  function  to be minimized  is  concave  (or  equivalently  a utility  function  to be 

maximized  is  convex.  Refer  to  the  theorem  in  Section  6.5.3  of  the  textbook).  We  have  also 

seen  in  class  that  the  Stochastic  Queue Median  (SQM)  is  not  at  nodes  in  general. 

(d)  For the system to reach steady­state, ρ = λE [S ] should be less than 1.  Since E [S ] is a function 

of  x,  the  question  of whether  steady­state  is  reached  depends  on  the  location  of  the  hospital. 

	
Massachusetts  Institute  of  Technology 
1.203J/6.281J/13.665J/15.073J/16.76J/ESD.216J 
Logistical  and  Transportation  Planning  Methods 
Fall  2004 

(e)  Since  no  queue  is  allowed, Wq  = 0.  Hence  we  want  to  ﬁnd  the  value  of  x  that  minimizes 

E [R] = E [S ] = 2(fA −  fB )x + 2 = 1.2x + 2 . 

E [R]  is  minimized  when  x  =  −0.5,  so  the  hospital  should  be  located  at  Town  A.  This 

exempliﬁes  that  the  Stochastic  Loss Median  (SLM)  is  a  Hakimi median. 

(f )  We  can  set  up  the  following  linear  optimization  model  for  this  question: 

minimize	

1.2x + 2 

sub ject  to	

2(0.5 + x) + 1 ≤  2.6 

2(0.5 −  x) + 1 ≤  2.6 

−0.5 ≤  x ≤  0.5 

The  ﬁrst  two  constraints  yield −0.3 ≤  x ≤  0.3  (The  third  constraint  is  redundant).  Since  the 

ob jective  function  is  increasing,  the  optimal  value  of  x  is  −0.3. 

5. 

Question 1: we know, to begin with, that TD, the MST of the points in D has an even number of 

odd–degree nodes (just like any undirected network). Let us denote as v the point in D which is 

closest to s (i.e., v is the point in D with which s is connected in the overall tree T). We now 

have two cases: 

(i) The point v had even degree in TD. In this case, the addition of the edge (s,t) will 

make v a node of odd degree in T. This increases the number of odd–degree 

nodes in the "D part" of the tree T by 1, i.e., we have an odd number of 

odd–degree nodes in RÇD. 

(ii) The point v has odd degree in TD. In this case, the addition of the edge (s,t) will 

make v a node of even degree in T. This decreases the number of odd–degree 

nodes in the "D part" of the tree T by 1, i.e., we have again an odd number of 

odd–degree nodes in RÇD. 

An entirely parallel argument can be made about RÇP. 

Question 2: 

(a) This part is obvious. Since H adds one more incidence to all the odd–degree nodes in 

T, the graph G (=TÈH) has no nodes of odd–degree (and is connected) so it has an 

Euler tour. 

(b) The key observation here is that, because of the large additional cost K associated with 

each pairing of a point in D with a point in P, there will be only one pairing of an 

odd–degree point in D (call it z) with an odd–degree point in P (call it w) in the optimal 

matching. (Note that from Question 1 we know that there will be one "left–over" 

odd–degree point from D and one "left–over" odd–degree point in P, after we have 

finished the pairwise matching of odd–degree points in D with one another and of 

odd–degree points in P with one another; please also note that, by construction, s will 

always have a degree of 2 in T.) 

Thus we can begin at s, find an Euler path from s to z that visits all the points in 

D at least once, then use the link (z,w) to go to the points in P and then find an Euler 

path from w to s that visits all the points in P at least once. 

6. 

(a) We need a minimal length pair-wise matching of nodes of odd degree, in order to


make a new network or graph having all nodes of even degree. Then we can


construct an Euler tour. By inspection the matching corresponds to appending to the


original network duplicate links for all interior bridges. This is because the bridges


are by far the shortest length links that we can use to create an augmented network


having all even degree nodes. In practice, this means that the jogger, when


approaching a bridge that he has not yet jogged across, would jog across it and then


immediately make a U turn and jog back across it. (No need to match the two bridges


on the two far ends of the total jogging route, as they have nodes of even degree; all


others have nodes of odd degree.) The total length of the jog is then 18.27 + 1.57 =


19.84 miles.


Note 1: One student came up with another way to implement the Euler tour, one that


is much less boring from a jogger’s point of view. Start at the Science Museum north


and jog south along Science Museum land bridge; jog to Longfellow and jog across 

it; jog to Mass Ave Bridge and jog across it,…continue this alternating path until 

jogger reaches south end of Watertown Sq. Bridge and jogs across it; now return on 

the Cambridge side and again jog across each bridge you come across. It works! 

Draw a picture! 

Note 2: Another student noted quite correctly that we did not explicitly ask for an 

Euler tour in part (a), only an Euler path. Thus, allowing for Mike Jogger to end up 

at a different location than his starting location, we do not have to add the longest 

bridge – the Longfellow Bridge – to our augmented graph. We can allow in the 

augmented graph two nodes of odd degree. The jogger can start at one end of the 

Longfellow Bridge and finish his jogging path at the other end. Full credit was given 

for both interpretations. 

(b) There are 122 = 144 equally likely jogging tours. Note that tour (3,7) for instance is 

different from tour (7,3); the same path is followed around the two selected bridges, 

but in reverse directions. On any given day tour i occurs with probability 1/144. To 

construct the probability law for the total jogging distance on a random day, we just 

compute the jogging length (in miles) for each of the possible 144 tours and assign 

the probability 1/144 to each. Note that the distance for any tour must include the 

extra distance, if any, required for the jogger to get to and from the Operations 

Research Center at MIT to the closer of the two bridges in his tour. We can express 

the result of combining 144 such calculations either as a probability mass function or 

as a cumulative distribution function. Suppose the total jogging distance for tour (i,j) 

is dij. Then the expected jogging distance on a random day is


12  12 
E[D] =  ƒ ƒ dij  / 144 
i =1  j =1 

(c) Each jogging tour has a minimal jogging distance corresponding to the sum of the 

two bridge lengths plus the two land distances between the two bridges crossed. If 

the home location of the jogger on the Cambridge side of the river is between the two 

bridges crossed, then that location adds zero additional mileage to the route. 

However, if that home location is not between the two bridges, then there is a total 

‘deadheading’ distance equal to twice the distance from his home location to the 

closer of the two bridges. This is extra distance he has to jog to get to and return 

from the cyclic route connecting the two bridges selected for that day. To minimize 

the expected distance jogged per day, the jogger has to minimize (twice) the expected 

deadheading distance. 

Suppose the jogger’s proposed home location is west of bridge j and east of bridge 

j+1, j =1,2,…, 11, with the bridges sequentially numbered from 1 to 12, starting with 

the Science Museum land bridge (at j = 1). In the figure below, j = 5. 

Cambridge Side of the River 

ÁProposed home site 

j= 12

11

10

9 

8 

7

6 

5 

4

3 

2

1 

West 

East 

That is, the proposed home location is on the Cambridge side between bridges j and 

j+1. Then there are j2 deadheading routes east of the home location and (12-j)2 

deadheading routes west of the home location. Why? The remaining 2j(12-j) tours 

have no deadheading distance. Why? These observations reduce the problem to a 1 ­

median problem on a straight line. At any proposed home location for the jogger, 

there are 'nodal weights' totaling j2 /144 to the east and (12-j)2/144 to the west. 

For instance if j2 /144 > (12-j)2/144, then the mean daily jogging distance is reduced 

in a linear manner as one moves the jogger’s home location closer to bridge j and 

farther from bridge j+1. One seeks a home location for the jogger at which the 

'weights' pulling left and right are equal. For if they are not equal, one reduces mean 

deadheading distance by moving the home location of the jogger in the direction 

having greater total weight. The optimal balance occurs in this problem at any point 

between bridge 6 (Western Avenue Bridge) and bridge 7 (Weeks Footbridge), 

including the two nodes corresponding to the respective end points of those bridges. 

At these points the two sets of weights are equal, each being 36/144. We recall in the 

one median that we may have non-nodal optimal locations (in addition to nodal ones) 

if the weights pulling in each direction are equal. If the total number N of bridges in 

this problem had been an odd number rather than an even number, then the optimal 

home location would be at a node equal to the bridge number (N+1)/2. For instance, 

if there had been N = 13 rather then 12 bridges in this problem then the optimal 

location would be at the node corresponding to bridge (13 + 1)/2 = 7 (Weeks 

Footbridge). Just as in the regular 1-median location problem, one does not risk 

missing an optimal solution to the problem by examining possible home locations 

solely at the nodes. This is true whether there is an even or an odd number of bridges 

in the problem. 

