Queueing Systems: Lecture 1 

Amedeo R. Odoni 
October 6, 2004 

Topics in Queueing Theory 

•  Introduction to Queues 
•  Little’s Law 
•  Markovian Birth-and-Death Queues 
•  The M/M/1 and Other Related Queues 
•  The M/G/1 Queue and Extensions 
•  Priority Queues 
•  Some Useful Bounds 
•  Congestion Pricing 
•  Queueing Networks; State Representations 
•  Dynamic Behavior of Queues 

1Lecture Outline 

•	 Introduction to queueing systems 
•	 Conceptual representation of queueing 
systems 
•	 Codes for queueing models 
•	 Terminology and notation 
•	 Little’s Law and basic relationships 

Reference: Chapter 4, pp. 182-193 

Queues 
•	 Queueing theory is the branch of operations research 
concerned with waiting lines (delays/congestion) 
•	 A queueing system consists of a user source, a queue 
and a service facility with one or more identical parallel 
servers 
•	 A queueing network is a set of interconnected queueing 
systems 
•	 Fundamental parameters of a queueing system: 
- Demand rate 
- Capacity (service rate) 
- Demand inter-arrival times  - Service times 
- Queue capacity and discipline (finite vs. infinite; 
FIFO/FCFS, SIRO, LIFO, priorities)

- Myriad details (feedback effects, “balking”,  

“jockeying”, etc.)


2A Generic Queueing System 

Arrival point 
at the system 

Source 
of users/ 
customers 

Arrivals 
process 

Size of 
user source 

Servers 

Departure point 
from the system 

Queue 
C  C  C  C  C  C 

C 
C 
C 
C 
C 
C 
C 

Queue discipline and 
Queue capacity 

Service process  Number of servers 

Queueing  network consisting of 
five queueing systems 

Queueing 
system 
2 

Queueing 
system 
3 

In  

Queueing 
system 
1 

Point where 
users make 
a choice 

Point where 
users merge 

+ 

Queueing 
system 
5

Out 

Queueing 
system 
4 

3Applications of Queueing Theory 

•	 Some familiar queues: 
_  Airport check-in; aircraft in a holding pattern 
_  Automated Teller Machines (ATMs) 
_  Fast food restaurants 
_  Phone center’s lines 
_  Urban intersection 
_  Toll booths 
_  Police or other spatially distributed urban services 
•	 Level-of-service (LOS) standards 
•	 Economic analyses involving trade-offs among 
operating costs, capital investments and LOS 
•	 Congestion pricing 

The Airside as a Queueing Network 

4Queueing Models Can Be Essential in 
Analysis of Capital Investments 
Cost 

Total cost  

Optimal 
cost 

Cost of building the capacity 

Cost of losses due to waiting  

“Optimal” capacity 

Airport Capacity 

Strengths and Weaknesses of 
Queueing Theory 
•	 Queueing models necessarily involve approximations 
and simplification of reality 
•	 Results give a sense of order of magnitude, changes 
relative to a baseline, promising directions in which to 
move 
•	 Closed-form results essentially limited to “steady 
state” conditions and derived primarily (but not solely)
for birth-and-death systems and “phase” systems 
•	 Some useful bounds for more general systems at 
steady state 
•	 Numerical solutions increasingly viable for dynamic 
systems 
•	 Huge number of important applications 

5A Code for Queueing Models: 
A/B/m 

Distribution of 
service time 
– / – /  –  

Distribution of 
interarrival time 

Number of servers 

Customers 

Queue 
C C C C C C 

Queueing System 

C 
C 
C 
C 

S 
S 
S 
S 

Service 
facility 

•  Some standard code letters for A and B: 
) 
(
M: Negative exponential  M stands for memoryless
_ 
_ D: Deterministic 
_ Ek
:kth-order Erlang distribution 
_ G: General distribution 

Terminology and Notation 

•	 Number in system: number of customers in 
queueing system 
•	 Number in queue or “Queue length”: number of 
customers waiting for service 
•	 Total time in system and waiting time 
•	 N(t) = number of customers in queueing system 
at time t 
•	 Pn(t) = probability that N(t) is equal to n at time t 
•	 λn: mean arrival rate of new customers when 
N(t) = n 
•	 µn: mean (total) service rate when N(t) = n 

6Terminology and Notation (2) 

•	 Transient state: state of system at t is 
influenced by the state of the system at t = 0 
•	 Steady state: state of the system is independent 
of initial state of the system 
•	 m: number of servers (parallel service
channels) 
If λn and the service rate per busy server are 
constants, λand µ, respectively, then λ =λ, µ = 
n
n 
min (nµ, mµ); in this case:

_  Expected inter-arrival time = 1/λ

_  Expected service time = 1/µ


•	

Some Expected Values of Interest 
at Steady State 

•  Given: 
_  λ= arrival rate 
_  µ= service rate per service channel 
•  Unknowns: 
= expected number of users in queueing system 
_  L 
= expected number of users in queue 
_  Lq 
W = 
= expected time in queueing system per user (
_  W 
E(w)) 
expected waiting time in queue per user (
Wq  = 
_  Wq = 
E(wq)) 
•  4 unknowns ⇒ We need 4 equations 

7Little’s Law 

Number of 
users 

A(t): 
cumulative arrivals to the system 
C(t): 
cumulative service completions in the system 

A(t) 

N(t) 

C(t) 

T 
∫ 
0 

L 
T 

= 

dt 

t N 
)( 
T 

=

T A 
)(
T

⋅

t 
T
∫
0

dt 

t N 
)(
T A 
)( 

T 

Time 

=

λ 
T 

⋅

W 
T

Relationships among L, Lq, W, Wq 

•	 Four unknowns: L, W, Lq, Wq 
•	 Need 4 equations. We have the following 3 equations: 
_  L = λW  (Little’s law) 
_  Lq  = λWq 
1 
_	 W = Wq + 
µ 
If we can find any one of the four expected values, we 
can determine the three others 
•	 The determination of L (or other) may be hard or easy 
depending on the type of queueing system at hand 
∞ 
•	 L = ∑ nP  (P 
n
n

n =0


n 
in the 
system) 
are 
customers 
y that 
probabilit 
: 

•	

8Birth-and-Death Queueing Systems 

1. 	 m parallel, identical servers. 
Infinite queue capacity (for now). 
2. 	
3. 	 Whenever n users are in system (in 
queue plus in service) arrivals are 
Poisson at rate of λn per unit of time. 
4. 	 Whenever n users are in system, 
service completions are Poisson at 
rate of µn per unit of time. 
5. 	 FCFS discipline (for now). 

The Fundamental Relationship 

λn∆t 

1-(λn+ µn)∆t 

n users 

µn∆t 

n+1 users 

n users 

n-1 users 

Pn(t
[n users 
) = Prob 
in system at time t] 

tP 
( 
n 

t
)
∆ 
+ 

=

P
n

t
)(
1 
+ 

⋅

Pt
∆µ
+
⋅
n
n
1
+

t
)(

⋅

tPt
t
(1[)(
)
]
∆λ
∆λµ
−⋅
+
+
⋅
⋅
n
n
n
n
1
−

−

1

9The differential equations that 
determine the state probabilities 
Pt
tPt
P
t
t
t
t
(1[)(
)
)(
)(
)
]
∆µ
∆ 
=
⋅
⋅
∆λ
∆λµ
+ 
+
⋅
⋅
−⋅
+
+
⋅
n
n
n
n
n
n
n
1 
1
1
−
+ 
+

1
−

tP 
( 
n 

+

1

t
)(

+

1

(1) 

1
−

)

⋅

⋅

1 
− 

⋅

P
n

t
)(

+

P
n

+

λ
n

µ
n

tP
)(
n

(
+ 
µλ 
− = 
n 
n

After a simple manipulation: 
dP 
t
)( 
n 
dt 
(1) applies when  = 1, 2, 3,….; when 
0, we have: 
n = 
n 
dP 
t
)( 
0 
dt 
The system of equations (1) and (2) is known as the 
• 
Chapman-Kolmogorov equations for a birth-and-death 
system 

tP
)(
⋅ 
0

λ 
− = 
0 

tP
)(
1

(2) 

+

µ
1

⋅

The “state balance” equations 

• 

• 

We now consider the situation in which the queueing 
t is large
system has reached “steady state”, i.e., 
t
dPn 
)( 
tP 
P
=)( 
enough to have 
           , independent of t, or 
n
n 
dt 
Then, (1) and (2) provide the state balance equations: 
P 
n
P
0 
)3(
λ 
µ
=
⋅ 
⋅
=
0 
0
1
1
P 
P
P
n
,..
( 
)
,1 
)4(
3 
,2 
µ
µλ 
λ
+ 
=
=
⋅
⋅
+
⋅
n
n 
n
n
n
n
n
1 
1
1
1
+
+
− 
−
The state balance equations can also be written directly 
• 
from the state transition diagram 

0
= 

10Birth-and-Death System: State 
Transition Diagram 

λ0 

λ1 

λ2 

λm-1 

λm 

λm+1 

0 

1 

2 

…… 

m 

m+1

…… 

 

µ1 

µ2

µ3

µm 

µm+1  µm+2 

We are interested in the characteristics of the system 
• 
under equilibrium conditions (“steady state”), i.e., when 
the state probabilities Pn(t) are independent of t for 
large values of t 

Can write system balance equations and obtain 
• 
closed form expressions for Pn, L, W, Lq, Wq 

Solving….. 

⋅

=

⋅

=

P
⋅ 
0 

etc
.

= 

P
2

P
1 

P 
1 

P
; 
0 

Solving (3) and (4), we have: 
⋅ 
λ 
λλ 
λ 
1 
0
0 
1 
µ 
µµ 
µ 
⋅ 
1
2 
2 
1 
and, in general, 
..... 
⋅
⋅
⋅
λλ
λλ 
⋅ 
n
n 
1 
0
1
2
− 
−
..... 
⋅ 
⋅
⋅
⋅
µµ
µµ 
n 
n
1
1 
2
− 
But, we also have: 
1 
= 

P
⋅ 
0 

P 
n 

= 

∞ 
∑ 
P 
n 
n 
0 
= 

Giving, 

P 
0 

1 
= 
∞ 
∑ 
nK 
1 
+ 
n 
1 
= 

=

PK
⋅
n 
0

=

)
n 

P
0 

1(
+⋅

∞ 
∑
K
n 
1 
= 
Condition for steady state: 
∞ 
∑ 
nK 
∞ < 
=1n 

11