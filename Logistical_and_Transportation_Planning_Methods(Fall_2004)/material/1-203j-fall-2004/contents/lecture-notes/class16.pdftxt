Spatially Distributed 
Queues 

M/G/1 
2 Servers 
N servers 
Approximations 

M/G/1


(0,Y0

) 

YA 

Directions 

Of Travel


Ambulance 

(0,0) 

XA 

(X0,0) 

M/G/1

M/G/1

(0,Y0) 

YA 

Directions 
Of Travel 

Ambulance 

(0,0) 

XA 

(X0,0) 

M/G/1


aAmbulance always returns home with 
each service;  standard M/G/1 applies 
aBut suppose we have an emergency 
repair vehicle that travels directly from one 
customer to the next?…... 

M/G/1with different 1st 
service time 

2  =  expected value and variance,respectively,
S1 ,σS1 
 of the 1st service time in a busy period 
S2 ,σ
2  =  expected value and variance,respectively,
S2 
              of the 2nd  &  all succeeding service times in a busy period 
λS2  < 1 
ρ= 1 − P0  = fraction of time server is busy 

M/G/1with different 1st 
service time 

λS1
ρ= 
1 − λ( S2  − S1 ) 

λ
2 
L = ρ+ 
1 − λ( S2 

σS1 
2
[ 
− S1 ) 

+ S1  + λ{S1(σ + S 2 ) − S 2 (σ + S1
2
2 
2 )
2
2 
S 2 
S1 
2(1 − λS 2) 

]

M/G/1with different 1st 
service time 

Little' s Law : Buy one, get three others for free!


L = λW 

Lq


= λ
Wq 

See the book, Eqs. (5.0) - (5.5)


M/G/1with different 1st 
service time 

aDoes this new more general M/G/1 model  

apply exactly to the ambulance problem?


aWhy or why not?


Two-Server “Hypercube”

Queueing Model 

aDistinguishable servers 
aDifferent workloads (due to geography)

aCan appear with or without queueing 
`With -- usually FCFS 
`Without -- usually means a backup contract 
service is in place 

Our Effort Involves In-the-
Field Research Visitations, to 
Learn of Current Emergency 
Response Services

A 

B-A 

B = “Service Region”


Poisson Arrivals from any sub-region A


λ(B-A)=λ2 

A 

B-A 

λ(A)=λ1 

B = “Service Region” 

λ = λ1+ λ2 

Service Discipline


a1st Dispatch Preference to ‘primary 
server’ 
aOtherwise, assign customer to other 
server, if available 
aOtherwise, job is ‘lost”  (What happens in 
practice?) 

1,0 

1,1 

0,0 

0,1 

1,0 

λ2 

µ 

0,0 

λ 

µ 

λ1 

µ 

1,1 

λ 

µ


0,1 

Balance of Flow Equations, Loss System

λ 

OK? 

1,0 

λ2 

µ 

0,0 

µ 

λ1 

µ 
OK? 

1,1 

λ 

µ 

0,1 

Balance of Flow Equations, 
Finite Capacity Queue System 
λ 

1,1,3 
2µ 

λ 

1,1,2 
2µ 

λ 

1,1,1 
2µ 

1,0 

λ2 

µ 

0,0 

µ 

λ1 

µ 

λ 

1,1

λ 

µ 

0,1 

Balance of Flow Equations, 
Infinite Capacity Queue System 
λ 
λ 

λ 

2µ 

1,1,3 
2µ 

λ 

1,1,2 
2µ 

1,1,1 
2µ 

1,0 

λ2 

µ 

0,0 

µ 

λ1 

µ 

λ 

1,1

λ 

µ 

0,1 

Balance of Flow Equations, Loss System 

P00  (λ1 + λ) = P01µ+ P10µ
2
P01  (λ+ µ) = P11µ+ P00 λ1 
Etc. 
P00  +P10+P01+P11  = 1 

Workload and Imbalances


aρ1  = W1  = P01  + P11 
aρ2  = W2  = P10  + P11 
aWorkload Imbalance = ∆W = |W1  - W2|


To Obtain Travel Times, 
We Must Have Server 
Response Patterns 
afnj  = fraction of dispatches that are server 
n to response area j 
aTn(C) = average time for server n to travel 
to a customer in region C 
aT(A) = average system-wide travel time, 
assuming that server 1’s primary 
response area is region A. 

Average System-Wide  

Travel Time 

T(A)=f11T1(A) + f22T2(B-A) 
+f12T1(B-A) + f21T2(A) 

Average System-Wide 
Travel Time 

f11T1(A) + f22T2(B-A) 
T(A)=
(B-A) + f21T2(A) 
+f12T1

Queueing 

Average System-Wide 
Travel Time 

T(
A)=f11T1(A) + f22T2(B-A) 
+f12T1(B-A) + f21T2(A) 

Geometry 

How do we obtain the fnj’s? 

aConsider a long time interval T

af12=(# requests that assign unit 1 to area 2)/ 
(total # requests answered) 
aTotal # requests answered = (1-P11)λT

aAverage # requests that are “server 1 to area 
2” is λ2TP10.  Why? 
aTherefore f12  =(λ2TP10  / [1-P11]λT) = 
{λ2/(1-P11)λ)} P10 

How do we generalize this 
to N  servers? 

New York City 
EMS  Hypercube 

New York City 
EMS  Hypercube 

Rectangular City Example


y 

-1 

+1 
x 

x=-0.25 

x=0.75 


Rectangular City Example 

y 

1-w 

w

High 
Demand 
Area: 
50% 
workload 

-1 

x=-0.25 

* 

+1 
x 

x=0.75 

Equal travel time 
Boundary line 

Optimal Districting


a“Dispatch the closest available server’ is 
often not optimal, where ‘optimal’ implies 
minimizing mean travel time 
aMay not be good for reducing workload 
imbalance either 
aWith numerical example in book, the 
optimal boundary line is shifted to the right 
by 10/126 miles. 

Rectangular City Example 

y 

High 
Demand 
Area: 
50% 
workload 

1-w*=73/126 

w*=53/126

-1 

x=-0.25 

* 

10/126 

+1 
x 

x=0.75 

Equal travel time 
Boundary line 

Optimal 
Boundary Line 

Boundary Line Comparison


aEqual travel time boundary line

`T(Aw=1/2)=0.46246 
`∆W = 0.05236 
aOptimal boundary line 
`T(Aw*)=0.46166 
`∆W = 0.04405 

Two server Loss Model: 
Boundary Line Result 

aTo minimize mean city-wide mean 
travel time: 
aThe optimal partitioning consists of a 
set of points within the region that is a 
constant travel time s0  closer to facility 
1 than to facility 2.  (Carter, Chaiken, 
Ignall, 1972) 
aDoes our rectangular city example work 
for this? 

S0: Optimal Partitioning

α≡ λ / 2µ 
µ = µ1
2 
S0  = [2α/(2α+ 1)]{T2 ( B ) − T1 ( B)}


2 

Directions 
Of Travel 

1 

Directions 
Of Travel 

2 

Equal travel time 
boundary line 

1 

Directions 
Of Travel 

2 

S0  growing larger 

1 

2 

Directions 
Of Travel 

1 

And what about the corner 
case? 

2 

Directions 
Of Travel 

1 

The S0  result is general


aWorks for discrete grid 
aOne way streets 
aGeneral transportation network


aRick Jarvis, in an MIT Ph.D. thesis, 
generalized this to N servers 

