Queueing Systems: Lecture 3 

Amedeo R. Odoni 
October 18, 2004 

Announcements 

•	 PS #3 due today 
•	 Office hours – Odoni: Tue. 10-12 AM or 
send me a message for an appointment 
•	 Quiz #1: October 25, open book, in class 
•	 Old quiz problems and solutions: 
posted 
•	 Quiz coverage for Chapter 4: Sections 
4.0 – 4.6 (inclusive) 

Lecture Outline 

•  M/M/m: finite system capacity, K 
•  M/M/m: finite system capacity, K=m 
•  M/G/1: epochs and transition probabilities 
•  M/G/1: derivation of L 
•  Why M/G/m, G/G/1, etc. are difficult 

Reference: Sections 4.7 and 4.8.1 

M/M/m: finite system capacity, K; 
customers finding system full are lost 

λ 

λ 

λ 

λ 

λ 

λ 

λ 

λ 

0 

1 

2 

…… 

m 

m+1

…… 

K-1

K 

µ 

2µ

3µ

mµ 

mµ 

mµ 

mµ 

mµ

Can write system balance equations and obtain 
• 
closed form expressions for Pn, L, W, Lq, Wq 

•  Often useful in practice 

 
 
M/M/m: finite system capacity, m; 
special case! 

λ 

λ 

λ 

λ 

λ 

0 

1 

2 

……

m-1  

m 

3µ

(m-1

)µ 

mµ 

n 

=

n 

= 

,0 

2µ

P 
n 

for 

µ 
λ 
)
( 
µ 
n
! 
λ 
)
( 
m 
µ 
∑ 
i 
! 
i 
0 
= 
Probability of full system, 
, is “Erlang’s loss formula” 
Pm
G/m system with K=m 
Exactly same expression for 
Pn  of M/

m 
,...2 

,1 

i 

• 
• 

M/M/∞ (infinite no. of servers) 

λ 

λ 

λ 

λ 

λ 

λ 

1 

2 

…

m-1  

m 

3µ

(m-1

)µ 

mµ 

µ 
(m+1}

2µ

λ 
)
( 
− 
µ 

n 

e 
⋅ 

m+1  

… 

µ 
(m+2)

0 

λ 

µ 

λ 
)
( 
µ 

n 

= 

,1 

for 

,0 
= 

,.....
2 

P 
n 
n 
! 
•  N is Poisson distributed! 
•  L = λ/ µ; W = 1 / 
Lq  = 0; Wq = 0 
µ ; 
Many applications 
• 

Variations and extensions of 
birth-and-death queueing systems 
•	 Huge number of extensions on the previous
models 
•	 Most common is arrival rates and service 
rates that depend on state of the system; 
some lead to closed-form expressions 
•	 Systems which are not birth-and-death, but 
can be modeled by continuous time, discrete 
state Markov processes can also be
analyzed [“phase systems”] 
•	 State representation is the key (e.g. M/Ek/1) 

M/G/1: Background 

•	 Poisson arrivals; rate λ 
•	 General service times, S; fS(s); E[S]=1/µ; σS 
Infinite queue capacity 
•	
•	 The system is NOT a continuous time Markov 
process (most of the time “it has memory”) 
•	 We can, however, identify certain instants of time 
(“epochs”) at which all we need to know is the 
number of customers in the system to determine 
the probability that at the next epoch there will be 
0, 1, 2, …, n customers in the system 
•	 Epochs = instants immediately following the 
completion of a service 

N 

M/G/1: Transition probabilities for 
system states at epochs (1) 
= number of customers in the system at a random 
epoch, i.e., just after a service has been completed 
= number of customers in the system at the 
N' 
immediately following epoch 
R = number of new customers arriving during the
service time of the 
customer to be served after 
first 
an epoch 

N' = N + R – 1  

N > 0 
if  

N' = R 
if N = 0 
Note: make sure to understand how R is defined 
• 

Epochs and the value of R 

N 

Between t1 and t2, 
R=2 
R=0 
Between t5 and t6, 

t1 

t2  t3 

t4 

t5 

t6 

t 

M/G/1: Transition probabilities for 
system states at epochs (2) 
•  Transition probabilities can be written in
terms of the probabilities: 

P[number of new arrivals during a service
time = r] = 
r 
e
t 
( 
)
⋅ 
λ
= ∫ ∞ 
0 
r 
! 
•  Can now draw a state transition diagram
at epochs 

for

α 
r 

t
λ
− 

⋅ 

f 

t
)(

⋅

dt

S 

r

=

,...2,1,0

A Critical Observation 

•	 The probabilities P[N=n] of having n customers 
epoch are equal to 
in the system at a random epoch
the steady state probabilities, Pn, of having n 
customers in the system at any random time! 
•	 The PASTA property: “Poisson arrivals see 
time averages” 
•	 Can use simple arguments to obtain (as for 
M/M/1 systems):

P0  = 1- (λ/ µ) = 1- ρ  and  E[B] = 1/(µ– λ)

•	 Can also derive closed-form expressions for L, 
W, Lq  and Wq 

Probability the Server is Busy 

• 

Suppose we have been watching the system for a long 
time, T. 
, the utilization ratio, is the long run fraction of time 
ρ 
(= the probability  the server is busy; this means, 
)
assuming the system reaches steady state: 

amount 

of  

ρ 
= 

time 
T 

server  

is 

busy 

T 
⋅ 
λ

=

S E 
][ 
⋅ 
T

S E 
][
⋅ 
= 
λ

=

λ
µ 

Idle and Busy Periods; E[B] 

No. of 
customers 

Observe a large number, N, of busy periods: 
B E  
B E  N 
[ 
]
]
[ 
⋅ 
( 
N 
B E  
B E  N 
]
/1]
[
( 
[ 
⋅ 
+
+ 

= 
ρ 

)
λ

= 

) 
λ

/

B E  
[

]

/
1 
λ ρ 
= 
= 
1 
− 
− 
λ µ ρ 

I 

B 

I 

B 

I

B 

t 

Derivation of L and W: M/G/1 

T 

= amount of time a randomly arriving 
customer j 
will spend in the M/G/1 system 
= remaining service time of customer 
T1 
currently in service 
T2  = the time required to serve the customers
j in the queue 
waiting ahead of 
T3  = the service time of j 

Clearly: 
• 
T = T1  + T2  + T3 
W = E[T] = E[T1] + E[T2] + E[T3] 

Derivation of L and W: M/G/1 [2] 

•  E[T3] = E[S] 
Given that there are already  customers in the system 
n 
• 
j arrives (and since one customer is being served 
when 
while  –1 are waiting) 
n
T E 
S E  
n 
n
(
)1
[ 
]
,][
|
− 
= 
⋅ 
2 
T E 
n  
n
[ 
0
]
|
,0 
=
= 
2 
•  Thus, 
∑ 
T E 
[
2
n 

⎡ 
∑
nP
⎢ 
n 
⎢ 
⎣ 
n 
1
≥

∑
(
n 
1 
≥ 

Pn 
]
⋅
n 

= 

S E 
][

⋅

P
⋅ 
n 

= 

n

−

)1

S E 
][
⋅ 

= 

n

≥

1

|

−

∑
P
n 
n 
1
≥

⎤ 
⎥ 
⎥ 
⎦ 

T E 
[ 
]
2 

T E 
[  2 
]

= 

S E 
][

⋅

L 

S E 
][
− 

ρ ⋅

Derivation of L and W: M/G/1 [3] 

•  From our “random incidence” result: 
2 
2
S E 
(
])
[
n  σ 
+ 
S 
]
= 
S E 
][
2 
⋅ 
n  
n
0
]
,0 
= 
=

T E 
[ 
1 

1
≥ 

n

,

|

|

T E 
[ 
1 

• 

Thus, giving: 

T E 
]
[ 
1 

= 

∑ 
T E 
[
1
n 

|

Pn 
]
⋅
n 

= 

2

2 
S E  
])
[
(
σ 
+ 
S 
S E  
][
2 
⋅ 

∑
n
1 
≥ 

P
⋅ 
n 

2 
S E  
])
[( 
σ
+ 
S 
= 
S E  
][
2 
⋅ 

2

ρ
⋅ 

Derivation of L and W: M/G/1 [4] 

So we finally have: 
• 
(Little’s theorem) 
L = λ W 
W = E[T] = E[T1] + E[T2] + E[T3] 
and solving (1) and (2), we obtain: 
2
2 
2
σ λ 
+ 
⋅ 
ρ
S
1(2 
)
− 
ρ 

+ 
ρ 

)1
< 

ρ

= 

L 

(

(1) 
(2) 

W 

= 

1 
+ 
µ 

2
2 
2
ρ 
+ 
⋅ 
σ λ 
S
)
1(2 
ρλ 
− 

Expected values for M/G/1 

(

ρ

)1
< 

L 

= 

+
ρ 

2
2 
2
σλρ
+ 
⋅
S
)
1(2 
ρ 
− 

W 

= 

1 
+
µ 

2
2 
2
σλρ 
+ 
⋅
S
1(2 
)
ρλ 
− 

W 

q 

= 

2
2 
2
⋅
+ 
σλρ 
S 
1(2 
)
− 
ρλ 

= 

2
2
C
)
1( 
1 
+ 
ρ 
S
⋅ 
= 
1(2 
)
1( 
− 
µρλ 

ρ 
)
−
ρ 

1( 
⋅ 

C
+ 
2 

2
S

)

qL 

= 

2
2 
2
σλρ 
+ 
⋅
S 
1(2 
)
ρ 
− 

Note 

: 

SC

= 

σ 
S 
S E 
][ 

σ µ ⋅ 
= 
S 

Dependence on Variability (Variance) 
of Service Times 

Expected delay 

Demand 

ρ = 1.0 

Runway Example 

•	 Single runway, mixed operations 
•	 E[S] = 75 seconds; σS = 25 seconds 
µ = 3600 / 75 = 48 per hour 
•	 Assume demand is relatively constant for a 
sufficiently long period of time to have 
approximately steady-state conditions 
•	 Assume Poisson process is reasonable 
approximation for instants when demands 
occur 

Estimated expected queue length 

and expected waiting time


λ(per hour) 

ρ 

30 
30.3 

36 
36.36 

42 
42.42 

45 
45.45 

0.625 
0.63125 

0.75 
0.7575 

0.875 
0.88375 

0.9375 
0.946875 

Lq 

0.58 
0.60 

1.25 
1.31 

3.40 
3.73 

7.81 
9.38 

Lq 
(% change) 

3.4% 

4.8% 

9.7% 

20.1% 

Wq 
(seconds) 
69 
71 

125 
130 

292 
317 

625 
743 

Wq 
(% change) 

2.9% 

4% 

8.6% 

18.9% 

Can also estimate PHCAP ≅ 40.9 per hour 

