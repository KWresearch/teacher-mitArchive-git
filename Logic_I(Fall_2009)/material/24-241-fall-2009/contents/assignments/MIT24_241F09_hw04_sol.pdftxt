Problem  Set  4:  Answers	

Damien  Rochford 

In  most  of  these  proofs,  when  things  have  got  a  little  complicated,  I  have 
numbered  the  steps  I’m  taking  in  the  hope  that  this makes  things  clearer.  You 
aren’t  required  to  do  this  when  you  answer,  but  I  think  it’s  probably  a  good 
idea  —  it  helps  you  get  clear  on  what,  exactly,  you  are  doing,  and  it  helps  me 
understand  what  you  are  doing  (if  I  can’t  follow  your  proof,  that’s  bad). 

Section  5.3E,  Question  14 

In  what  follows,  I  will  refer  to  the  following  sentence: 
•	 Γ � P  in  SD  if  and  only  if  Γ |= P. 
as  ‘S&C’  (short  for  ‘Soundness  and  Completeness’  —  you’ll  see  why  I  use  this 
name  in  the  near  future). 

Part  (a) 
Let  α  be  an  argument  of  SL  such  that  the  set  of  assumptions  that  begin  α  is 
Γ  and  the  conclusion  of  α  is  P  (I’m  using  ‘α’  so  you  don’t  confuse  it  with  a 
sentence  letter  of  SL,  but  you  can  use  whatever  you  like). 

1. 	 α  is  valid  in  SD  iﬀ  there  is  an  SD  derivation  that  has  the  members  of  Γ 
as primary assumptions and P  in  the  scope of  those assumptions only  (by 
deﬁnition  of  ‘valid  in  SD’). 

2.  There  is  an  SD  derivation  that  has  the members  of Γ  as  primary  assump­
tions  and  P  in  the  scope  of  those  assumptions  only  iﬀ  Γ  �  P  in  SD  (by 
deﬁnition  of  ‘�’). 
3.  Γ � P  in  SD  iﬀ  Γ  |= P  (S&C). 
4.  Γ |= P  iﬀ  there  is no  truth-value  assignment  such  that  every member  of Γ 
is  true  and  P  is  false  (by  deﬁnition  of  ‘|=’). 
5.  There  is  no  truth-value  assignment  such  that  every  member  of  Γ  is  true 
and  P  is  false  iﬀ  α  is  truth-functionally  valid  (by  deﬁnition  of  ‘truth­
functionally  valid’). 

So,  assuming  S&C,  an  argument  of  SL  is  valid  in  SD  if  and  only  if  the 
argument  is  truth-functionally  valid. 
Q.E.D. 

Part  (b) 
1.  A  sentence  P  of  SL  is  a  theorem  in  SD  iﬀ  ∅ �  P  in  SD  (by  deﬁnition  of 
theoremhood). 
2. 	 ∅ � P  in  SD  iﬀ  ∅ |= P  (by  S&C). 

3.	 ∅ |= P  iﬀ  there  is  no  truth-value-assignment  that makes  every member  of 
∅  true  and  P  false  (by  deﬁnition  of  ‘|=’). 
4.  There  is  no  truth-value-assignment  that  makes  every  member  of	 ∅  true 
and  P  false  iﬀ  there  is  no  truth-value  assignment  that  makes  P  false  (as 
every  truth-value  assignment makes  every  member  of  ∅  true). 
5.  There  is  no  truth-value  assignment  that  makes	 P  false  iﬀ  P  is  truth-
functionally  true  (deﬁnition  of  ‘truth-functionally  true’). 

So,  assuming  S&C,  a  sentence  P  of  SL  is  a  theorem  in  SD  if  and  only  if  P 
is  truth-functionally  true. 
Q.E.D. 

Part  (c) 
1.  Sentences  P  and  Q  of  SL  are  equivalent  in  SD  iﬀ  {P} �  Q  in  SD  and 
{Q} � P  in  SD  (deﬁnition  of  ‘equivalent  in  SD ’). 
2.	 P � Q  in  SD  and Q � P  in  SD  iﬀ  P  |= Q  and Q |= P  (by  S&C). 
3.	 P  |= Q  and  Q  |= P  iﬀ  there  is  no  truth-value  assignment  such  that  P  is 
true  and Q  is  false,  and  vice-versa.  (by  deﬁnition  of  ‘|=’). 
4.  There  is no  truth-value assignment  such  that P  is  true and Q  is  false, and 
vice-versa,  iﬀ  P  and  Q  are  truth-functionally  equivalent  (by  deﬁnition  of 
‘truth-functionally  equivalent’). 

So,  assuming  S&C,  sentences  P  and  Q  of  SL  are  equivalent  in  SD  if  and 
only  if  P  and Q  are  truth-functionally  equivalent. 
Q.E.D. 

Section  6.1E,  Question  1 

Part  (b) 
To  show: 

Claim:  Every sentence of SL that contains no binary connectives is truth-functionally 
indeterminate. 

Claim  follows  from  the  following. . . 

Basis  Clause:  Every  atomic  sentence  of  SL  is  truth-functionally  indeterminate. 

Inductive  Step:  If  every  sentence  of  SL  containing  (a)  no  binary  connectives  and  (b)  n 
or  fewer  negations  is  truth-functionally  indeterminate,  then  so  is  every 
sentence  of  SL  containing  no  binary  connectives  and  n + 1  negations. 

2 

. . . as  every  sentence  of  SL  that  contains  no  binary  connectives  is  a  sentence 
of  SL  that  contains  no  binary  connectives  and  n  negations,  for  some  natural 
number  n. 
The  proof  of  Basis  Clause  is  immediate  —  every  atomic  sentence  of  SL 
is  such  that  there  is  a  truth-value  assignment  that  makes  it  true  and  a  truth-
value  assignment  that  makes  it  false,  so  every  atomic  sentence  of  SL  is  truth-
functionally  indeterminate.  It  remains  to  prove  Inductive  Step. 
Proof  of  Inductive  Step: 

1.  Suppose  every  sentence P  of  SL  containing  (a)  no  binary  connectives  and 
(b)  n  or  fewer  negations  is  truth-functionally  indeterminate  (i.e.,  suppose 
the  antecedent  of  Inductive  Step). 

2.  Then  for  all  such  P,  there  exists  a  truth-value  assignment  that  make  P 
true  and  a  truth-value  assignments  that makes  P  false. 
3.  So,  by  the  deﬁnition  of  ‘ ∼’,  there  is  truth-value  assignment  that  makes 
�∼  P�  false  and  a  truth-value  assignment  that  make  �∼  P�  true,  for  all 
such  P. 

4.  But  every  sentence  of	 SL  containing  no  binary  connectives  and  n  + 1 
negations  is  of  the  form  �∼ P�,  for  some  such  P. 

5.  So  for  every  sentence  of  SL  containing  no  binary  connectives  and  n + 1 
negations,  there  is  truth-value  assignment  that makes  it  true  and  a  truth-
value  assignment  that  makes  it  false. 

6.  So  every  sentence  of  SL  containing  no  binary  connectives  and  n + 1  nega­
tions  is  truth-functionally  indeterminate. 

So,  if  every  sentence  of  SL  containing  (a)  no  binary  connectives  and  (b)  n 
or  fewer negations  is  truth-functionally  indeterminate,  then  so  is  every  sentence 
of  SL  containing  no  binary  connectives  and  n + 1  negations. 
Q.E.D. 

Part  (e) 
Where P is a sentence of SL and Q is a sentential component of P, let [P](Q1 //Q) 
be  a  sentence  that  is  the  result  of  replacing  at  least  one  occurrence  of  Q  in  P 
with  the  sentence Q1 . 
To  show: 

Claim:  If  Q  and  Q1  are  truth-functionally  equivalent,  then  P  and  [P](Q1 //Q) 
are  truth-functionally  equivalent. 

Clearly,  Claim  follows  from  the  following. . . 

Basis  Clause:  Claim  is  true  when  P  is  atomic. 

3 

Inductive  Step:  If  Claim  is  true  for  all  P  containing  n  or  fewer  connectives,  it  is  true  for 
all  P  containing  n + 1  connectives. 

. . . as  every  sentence  of  SL  contains  n  connectives,  for  some  natural  number  n. 

Proof  of  Basis  Clause: 

1.  [P](Q1 //P)  is  just Q1 . 
2.  So if Q1  is  truth-functionally  equivalent  to P,  then obviously  [P](Q1 //P) 
is  truth-funcitonally  equivalent  to  P. 

3.  But  when  P  is  atomic,  it’s  only  sentential  component  is  P. 

4.  So, for all sentential components Q of P, if Q and Q1  are truth-functionally 
equivalent,  then  P  and  [P](Q1 //Q)  are  truth-functionally  equivalent, 
when  P  is  atomic. 

So  Claim  is  true  when  P  is  atomic. 
Q.E.D. 

Proof  of  Inductive  Step:  Every  sentence  of  SL  containing  n + 1  connec­
tives  is  either  of  the  form  �∼ P�,  for  some  P  containing  n  connectives,  or  is  of 
·	
·
the  form P R, where P, R  contain  n  or  fewer  connectives  (and  ‘ ’  is  a  variable 
that  ranges  over  binary  connectives  of  SL).  I  prove  Inductive  Step  for  each 
case  in  turn. 
Case  1:  Consider a sentence of SL of the form �∼ P�, where P is a sentence 
containing  n  connectives.  Every  sentential  component Q  of  �∼ P�  is  either 
(a)  �∼ P�  itself,  or 
(b)  is  a  sentential  component  of  P. 

I  prove  each  sub-case  in  turn. 
Sub-case (a):  When Q is �∼ P� itself, [�∼ P�](Q1 //Q) is truth-funcitonally 
equivalent  to  �∼  P�,  for  Q1  truth-functionally  equivalent  to  Q,  by  the  same 
argument  as  in  the  proof  of  Basis  Clause. 
Sub-case  (b): 

1.  Suppose Q  is  a  sentential  component  of  P. 

2.  Suppose,  also,  that  P  and  [P](Q1 //Q)  are  truth-functionally  equivalent 
when Q1  truth-functionally  equivalent  to  Q  (i.e.,  suppose  the  antecedent 
of  Inductive  Step  for  the  case  of  P). 
3.  Then  �∼ P�  and  �∼ ([P](Q1 //Q))�  are  truth-functionally  equivalent  (by 
the  deﬁnition  of  ‘∼’). 
4.  And	 �∼  ([P](Q1 //Q))�  is  identical  to  [�∼ P�](Q1 //Q),  when  Q  is  a 
sentential  component  of  P. 

4 

5.  So,  if P  and  [P](Q1 //Q)  are  truth-functionally  equivalent,  then  �∼ P�  is 
truth-functionally equivalent to [�∼ P�](Q1 //Q), for Q1  truth-functionally 
equivalent  to Q,  when Q  is  a  sentential  component  of  P. 

So,  if  Claim  is  true  for  a  sentence  P  containing  n  connectives,  it  is  true  for 
�∼ P�.  That  concludes  the  proof  for  Case  1. 

· 
Case  2:  Consider  a  sentence  of  SL  of  the  form  P R,  where  P, R  are  sen­
tences  containing  n  or  fewer  connectives.  Every  sentential  component  of  P R· 
is  either 
· 
(a)  P R  itself, 
(b)  a  sentential  component  of  P  or  a  sentential  component  of R  (or  both). 

I  prove  each  sub-case  in  turn. 
Sub-case  (a):  The  proof  here  is  the  same  as  the  proof  of  Basis  Clause 
and  sub-case  (a)  of  Case  1, mutatis-mutandis. 
Sub-case  (b): 

1.  Suppose Q  a  sentential  component  of  P  or R  or  both. 

2.  Suppose,  also,  that  P  and  [P](Q1 //Q)  are  truth-functionally  equivalent, 
and  R  and  [R](Q1 //Q)  are  truth-functionally  equivalent,  when  Q1  is 
truth-functionally equivalent to Q (i.e., suppose the antecedent of  Induc­
tive  Step  for  the  cases  of  P  and R). 
·	
· 
3.  Then  P R  is  truth-functionally  equivalent  to  [P](Q1 //Q) [R](Q1 //Q)
(by  the  relevant  binary-connective’s  deﬁntion). 
·	
· 
4.  And [P](Q1 //Q) [R](Q1 //Q)  is  identical  to  [P R](Q1 //Q),  when Q  is
a  sentential  component  of  P  or R. 

5.  So,  if	 P  and  [P](Q1 //Q)  are  truth-functionally  equivalent,  and  R  and 
· 
[R](Q1 //Q) are truth-funcitonally equivalent, then P R is truth-functionally 
· 
equivalent  to  [P R](Q1 //Q),  for  Q1  truth-functionally  equivalent  to  Q,
when Q  is  a  sentential  component  of  P  or R. 

So,  if  Claim  is  true  for  sentences P, R  containing  n  or  fewer  connectives,  it 
· 
is  true  for  P R.
That  concludes  the  proof  for  Case  2. 

So  that  concludes  the  proof  for  Inductive  Step. 
Q.E.D. 

5 

MIT OpenCourseWare
http://ocw.mit.edu 

24.241 Logic I

Fall 2009 


For information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms . 

