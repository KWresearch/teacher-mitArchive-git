Problem  Set  3:  Answers 

Damien  Rochford 

Question  1 

Here  is  the  truth-table.  Same  conventions  as  usual. 

A  C  ∼ 
F 
T 
T 
F 
F 
T 
F 
T 
F 
T 
F 
F 
2 

(C  ∨  A) 
T 
T 
T 
T 
T 
F 
T 
T 
F 
F  F 
F 
0 
1 
0 

∼ 
T 
F 
F 
T 
3 

(C  ≡  ∼  A) 
T 
F 
F 
T 
T 
F 
T 
F 
T 
T 
T 
F 
F 
T 
F 
F 
0 
2 
1 
0 

As  you  can  see,  there  are  no  lines  in  which  the  premise  is  true  and  the 
conclusion  false —  the only  line  in which  the premise  is  true  is  the  last one,  and 
on  that  line  the  conclusion  is  true  too.  So  this  argument  is  truth-functionally 
valid. 

Question  2 

All  of  these  are  proved  by  providing  derivations  in  SD.  I  do  so  below. 

Part  (a) 

1 
2 
3 
4 
5 
6 
7 
8 

A ⊃ B 
∼ B 
A&D 

A 

B 
∼ B 
∼ (A&D) 
∼ B  ⊃ ∼ (A&D) 

A 
A/⊃I 
A/∼I 
3,  &E 
1,4  ⊃  E 
2  R 
3-6  ∼I 
2-7  ⊃I 

Part  (b) 

Part  (c) 

1 
2 
3 
4 
5 
6 
7 
8 

1 
2 
3 
4 
5 
6 
7 

(A ⊃ B ) ⊃ ∼ B 
B 

A 

B 
A ⊃ B 
∼ B 
B 
∼ B 

A 
A/∼I 
A/⊃I 
2 R 
3-4,  ⊃I 
1,5  ⊃E 
2 R 
2-8  ∼I 

F  ⊃ (G ∨ H ) 
∼ (∼ F  ∨ H ) 
∼ G 
H 
∼ F  ∨ H 
∼ (∼ F  ∨ H ) 
∼ H 

A 
A 
A 
A/∼I 
4  ∨I 
2 R 
4-6  ∼I 

Question  3  (5.3E  12(b))


Let  ‘A’ =  ‘The  recipe  calls  for  ﬂavouring’;  ‘B ’ =  ‘The  recipe  calls  for  eggs’;  ‘C ’ 
=  ‘The  recipe  is  a  recipe  for  tapioca.’ 
The relevant set of sentences is {‘(∼ A ∨ ∼ B ) ⊃ ∼ C ’, ‘B  ⊃ (C&∼ A)’, ‘B ’ }. 
The  below  derivation  shows  that  this  set  is  inconsistent  in  SD. 

2 

1 
2 
3 
4 
5 
6 
7 
8 

(∼ A ∨ ∼ B ) ⊃ ∼ C 
B  ⊃ (C& ∼ A) 
B 
C&∼ A 
∼ A 
∼ A ∨ ∼ B 
∼ C 
C 

A 
A 
A 
2,3  ⊃E 
4  &E 
5  ∨I 
1,6  ⊃E 
4  &E 

Question  4  (5.3E  13(a)) 

This  derivation  rule  allows  one  to  derive  something  false  from  something  true. 
To  see  this:  let  P  =  A,  Q  =  B ,  and  consider  the  truth-value  assignment  that 
assigns  false  to  A  and  true  to  B .  Under  that  assignment,  ‘A ∨ B ’  is  true,  but 
‘B ’  is  false. 
That’s bad — the only derivation rules we want are ones that guarantee that 
the  sentence  you  derive  is  true,  given  that  the  sentences  you  started  with  are 
true. 

Question  5  (5.3E  13(e)) 

Because,  in  SD,  you  can  derive  any  conclusion  from  the  negation  of  theorem. 
Why  is  that?  Suppose we have a derivation  in SD with  the negation of some 
theorem  P  as  an  assumption  on  line  i.  As  P  is  a  theorem,  we  can  derive  it  in 
this  derivation;  say  we  do  so  on  line  j .  Then,  starting  at  line  k > max(i, j ),  we 
can  construct  a  sub-derivation  of  the  following  form: 
∼ Q 
A/∼E 
j  R 
P 
∼ P 
i  R 
k–k + 1  ∼E 
One  can  do  this  for  any  value  of  Q.  So,  one  can  derive  any  sentence  from 
the  negation  of  a  theorem,  in  SD. 

k 
k + 1 
k + 2 
k + 3 

Q 

Question  6 

I  like  this  one. 

3 

1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
11 
12 
13 
14 
15 
16 
17 

∼ ((A ⊃ B ) ∨ (B  ⊃ A)) 
A 

B

A
B  ⊃ A 
(A ⊃ B ) ∨ (B  ⊃ A) 
∼ ((A ⊃ B ) ∨ (B  ⊃ A)) 
∼ A 
A 

∼ B 
A 
∼ A 

B 
A ⊃ B 
(A ⊃ B ) ∨ (B  ⊃ A) 
∼ ((A ⊃ B ) ∨ (B  ⊃ A)) 
(A ⊃ B ) ∨ (B  ⊃ A) 

A/∼E 
A/∼I 
A/⊃I 
2 R 
3-4  ⊃I 
5  ∨I 
1 R 
2-7  ∼I 
A/⊃I 
A/∼E 
9 R 
8 R 
10-12  ∼E 
9-13  ⊃I 
14  ∨I 
1 R 
1-16  ∼E 

Question  7 

Consider an SD derivation and sentences P, Q of SL  such  that �P ∨ Q� appears 
on  line  i  of  the  derivation,  to  the  right  of  m  scope-lines,  and  �∼  P�  appears 
on  line  j  of  the  derivation,  to  the  right  of  n  scope  lines.  Starting  at  row  k > 
max(i, j ),  and  to  the  right  of  max(m, n) − 1  scope  lines,  one  can  construct  a 
sub-derivation  of  the  following  form: 

4 

P 

∼ Q 
P 
∼ P 

A/∨E 
k 
A∼E 
k + 1 
k  R 
k + 2 
j  R 
k + 3 
k + 1-k + 3  ∼E 
k + 4 
Q 
A/∨E 
k + 5 
Q 
k+5  R 
k + 6 
Q 
i,  k  –  k + 4,  k + 5  –  k + 6  ∨E 
k + 7 
Q 
Using  this construction,  one can always derive Q,  from �P ∨ Q� and �∼ P�, 
in  SD.  So  anything  we  can  derive  in  SD�  we  can  derive  in  SD. 

5 

MIT OpenCourseWare
http://ocw.mit.edu 

24.241 Logic I

Fall 2009 


For information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms . 

