Log ic I - Session 9 

Plan 

One more example to practice meta-language proofs 
Explain mathematical induction 
Examples 

More practice 
3.6E (2b)   If Γ ∪ {P} ⊨ Q, then Γ ⊨ P⊃Q 
  
1.  Γ ∪ {P} ⊨ Q 
2.  Every TVA that makes every member of Γ  ∪ {P} true also 
makes Q true 
3.  Every TVA that makes every member of Γ true and P true 
also makes Q true.
4. No TVA makes every member of Γ true and P true but 
makes Q false.
5. So no TVA that makes every member of Γ true makes P⊃Q 
false. 
6. So every TVA that makes every member of Γ true also 
makes P⊃Q true. 
7. So Γ ⊨ P⊃Q 

Remember: 

Truth-functional notions are all deﬁned in terms of TVAs (not 
der ivability or possibility) 
E.g.: Γ is truth-functionally inconsistent iff there’s no TVA that 
makes every member of Γ true. 
⊨  vs. ⊢ (The symbol for der ivability looks like a piece of a 
der ivation.) 

Mathematical induction 
If we have an ordered sequence of inﬁnitely many things, 
we can prove that all of them have a property F by proving
two simpler claims: 
Basis clause: Prove that the ﬁrst thing in the sequence 
is F 
Inductive step: Prove that if the nth thing is F, then so 
is the n+1st. 
Conclu de that everything in the sequence is F 
The things in the sequence can b
e anything, e.g. sentences 
f SL or sets of sentences SL 
o

First Example of MI 

6.1E (1a) Prove: No sentence of SL that contains only binary 
connectives, if any, is truth-functionally false. 
First step: insert relevant deﬁnitions in the thesis to be proven 
Prove: No sentence of SL that contains only binary connectives 
is false on every truth-value assignment 
Equivalently: 
Prove: Every sentence of SL that contains only binary 
connectives is true on some TVA 

Second step: Arrange our sentences into a sequence. We can do
that by using the number of connectives in the sentences. (This
w ill be a common strategy) 
Third step: Find our basis clause and inductive clause. We 
sometimes get them by directly applying our thesis to the 
members of our sequence. 
So we might start w ith: 
Basis clause: Every sentence w ith zero occurrences of a 
binary connective (and no occurrence of `∼’) is true on some 
TVA. 
Inductive step: if ( A) every sentence w ith n occurrences of 
binary connectives or fewer (and no occurrence of `∼’) is
true on some TVA, then (C) every sentence w ith n+1 
occurrences of binary connectives (and no occurrence of `∼’)
is true on some TVA. 

But sometimes we need to look ahead and think about why, 
intuitively, the thesis we’re proving is true. Do ing that might 
help us see that it’s easier to prove something stronger! 
In this case we can see that if we have a TVA that makes 
atomic sentences P and Q true, it w ill also make these true: 
(P&Q), (PvQ), (P⊃Q), (P≣Q). 
That is, if we have a TVA that makes all atomic sentences true,
we can never get a false compound w ith negation! 
So we should be able to use this TVA to prove the thesis that 
every sentence w ith only binary connectives is true on some 
TVA. 

So instead of having as our basis clause: Every sentence w ith 
zero occurrences of a binary connective (and no occurrence of 
`∼’) is true on some TVA... 
...we might want to work w ith the particular TVA that looks 
like it w ill work and then infer the more general claim later.
So: 
Basis clause: Every sentence w ith zero occurrences of a binary
connective (and no occurrence of `∼’) is true on the TVA that 
makes every atomic sentence true. 

Fourth step: Prove the basis clause. 
This is tr ivial. Every sentence w ith zero occurrences of a 
binary connective (and no occurrence of negation) is atomic. 
Every atomic sentence is true on the TVA on which every 
atomic sentence is true. 
So every sentence w ith zero occurrences of a binary 
connective (and no occurrence of negation) is true on the TVA 
on which every atomic sentence is true. 

Fifth step: Prove the inductive step. 
That is, prove that if ( A), then (C). 
( A) Every sentence w ith n or fewer occurrences of binary 
connectives (and no occurrence of `∼’) is true on the TVA on
which every atomic sentence is true, then 
(C) Every sentence w ith n+1 occurrences of binary 
connectives (and no occurrence of `∼’) is true on the TVA on
which every atomic sentence is true. 
So assume ( A). 

( A) Every sentence w ith n occurrences or fewer of binary 
connectives (and no occurrence of `∼’) is true on the TVA on 
which every atomic sentence is true. 
Now, if a sentence R has n+1 binary connectives, then it is of 
one of the forms (P&Q), (PvQ), (P⊃Q), (P≣Q). 
Furthermore, P and Q must have fewer binary connectives than 
R does, that is, fewer than n+1. 
That means, by assumption ( A), that P and Q are both true on 
the TVA that makes every atomic sentence true. 

So we’ve gotten that P and Q are both true on the TVA that 
makes every atomic sentence true. 
Now, whatever the main connective of R is, R is true whenever 
its immediate components are true. That is, whenever P and Q 
are true. 
So R is true on the TVA that makes every atomic sentence 
true. 
So we’ve shown that if ( A) is true, then any sentence R w ith n 
+1 occurrences of binary connective is true on the TVA that 
makes every atomic sentence true. 
That is, we’ve shown that if ( A), then (C). 
So we’ve proven the inductive step, and the proof is complete! 

Second Example of MI 

Let SL- be a language just like SL except that it contains only 
binary connectives 
Prove: For every sentence P of SL-, P does not contain two 
connectives w ithout at least one parenthesis in between 
To prove this by MI, we need to arrange the sentences of SL- 
into some kind of order 
We can use the # of binary connectives in a sentence to do it 

Basis clause: For every sentence P of SL- w ith zero 
connectives, P does not contain two connectives w ithout at 
least one parenthesis in between 
Proof: This is easy. An SL- sentence w ith zero connectives 
certainly doesn’t contain two connectives. So it does not contain 
two connectives w ithout at least one parenthesis in between. 

Next we have to prove the inductive step: 
Prove that if ( A) then (C) 
( A) For every SL- sentence P w ith n connectives or fewer, P 
does not contain two connectives w ithout at least one 
parenthesis in between 
(C) For every SL- sentence Q w ith n+1 connectives, Q does not 
contain two connectives w ithout at least one parenthesis in 
between 

( A) For every SL- sentence P w ith n connectives or fewer, P 
does not contain two connectives w ithout at least one 
parenthesis in between 
Now suppose Q has n+1 connectives 
There are four cases for the form Q could have: (R&S), (RvS), 
(R⊃S), (R≣S). It cannot be atomic, since n+1>0. 
Our argument w ill not depend on what the main connective is, 
so let us represent it as `?’. Then Q is of the form (R ? S). 

Now, since Q has n+1 connectives, R and S must each have n or 
fewer connectives. So, ( A) applies to R and S: neither contains 
two connectives w ithout a parenthesis in between. 
Now, the only other connective in Q is the main connective we 
are representing w ith `?’. So the only way Q could contain two 
connectives w ithout a parenthesis in between, is if there were 
no parenthesis between ? and some connective in R or S. 
But since R and S are sentences of SL-, they are either atomic 
or have parentheses around the outside. 
If R and S are both atomic, then Q contains only 1 connective, 
and hence does not contain two connectives w ithout at least 
one parenthesis in between. 

If on the contrary at least one of R and S, say R, is molecular, 
then it has parentheses around the outside. 
But since R is adjacent to ?, an outer parenthesis of R is 
between ? and any other symbol in R. The same goes for S 
if it is molecular. 
So either way, there is no connective anywhere in R or S 
w ithout a parenthesis between it and ?. 
Since the only way there could have been two connectives in 
Q w ithout at least one parenthesis in between was if ? was 
one of them, there are no two connectives anywhere in Q
w ithout at least one parenthesis in between. 
So since Q has n+1 connectives, (C) is true. So if ( A) then (C).
So the inductive step is proved, and the argument complete. 

MIT OpenCourseWare
http://ocw.mit.edu 

24.241 Logic I

Fall 2009 


For information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms. 

