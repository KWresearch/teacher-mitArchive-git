Log ic I - Session 22

Meta-theory for predicate log ic


1 

The course so far

Syntax and semantics of SL 
English / SL translations 
TT tests for semantic properties of SL sentences 
Der ivations in SD 
Meta-theory: SD is adequate for SL (sound, complete)


Syntax and semantics of PL 
English / PL translations 
Der ivations in PD 
Next: PD is adequate for PL (sound, complete) 

2 

Soundness, Completeness


There are meta-theoretical results for PD as well as 
PDE. In particular: 
If Γ is a set of PL sentences and P is a PL sentence, 
then Γ  ⊨  P iff Γ  ⊢  P in PD. 
If Γ is a set of PLE sentences and P is a PLE 
sentence, then Γ  ⊨  P iff Γ  ⊢  P in PDE. 
We’ll focus on PL and PD, coming back to PLE and PDE
later if we have time. 

3 

Soundness


We’ll focus on soundness today. 
If Γ  ⊢  P in PD, then Γ  ⊨  P. 
To prove: If there’s a PD der ivation all of whose 
pr imary assumptions are members of Γ and in which 
P occurs only in the scope of those assumptions,  

then P is quantiﬁcationally entailed by Γ.


4 

Soundness


As w ith soundness for SD, we prove our result by 
proving something stronger: 
Every sentence in a PD der ivation is q-entailed by 
the set of assumptions w ith scope over it. 
Our proof of this w ill appeal to a mathematical 
induction analogous to the one we used to prove the 
soundness of SD. 

5 

Soundness

Let Γi be the set of assumptions open at line i in a 
der ivation, and let Pi be the sentence on line i. 
Basis clause: Γ1 ⊨  P1. 
Inductive step: If Γi ⊨  Pi for all i≤k, then Γk+1 ⊨  Pk+1. 
We’ll prove this by cases, one case for each rule 
that could have justiﬁed line k+1. 
Conclusion: For every line k in a der ivation, Γk ⊨  Pk. 
I.e.: Every sentence in a PD der ivation is q-entailed 
by the set of assumptions w ith scope over it. 

6 

Soundness: Basis clause


To prove: Γ1 ⊨  P1. 
= No interpretation mem Γ1 true but makes P1 false. 
The ﬁrst line of any der ivation is an assumption. 
Every assumption counts as being in its own scope, so 
P1 is in the scope of P1 and only P1. 
I.e. Γ1 = {P1}. 
Tr ivially, any interpretation that makes P1 true makes 
P1 true. So {P1} ⊨  P1. So Γ1 ⊨  P1. 

7 

Soundness: Inductive step


Suppose Γi ⊨  Pi for all lines i≤k in a der ivation. 
To prove: Γk+1 ⊨  Pk+1. 
Strategy: Line k+1 must be justiﬁed by some rule,  

and no matter what rule it is, we have Γk+1 ⊨  Pk+1.


We have all 12 rules from SD, so we need the result to
hold for those cases. 
Our proofs don’t need much adjustment... 

8 

Inductive step: &I 


Suppose line k+1 is justiﬁed by &I. 
Then Pk+1 is justiﬁed by two earlier lines i and j, and 
Pk+1 is of the form Qi & Rj. 
So we should prove: Γk+1 ⊨  Qi & Rj 
It sufﬁces to prove that Γk+1 ⊨  Qi and Γk+1 ⊨  Rj. 
Why? Fill in defs of ‘⊨’ and ‘&’. 

9 

Inductive step: &I 

If any I that mem Γk+1 true makes Qi true, and 
   any I that mem Γk+1 true makes Rj true, then:  

any I that mem Γk+1 true makes Qi true and Rj true. 

If I makes Qi is true and Rj true, then I makes Qi & 
Rj true.  [By our semantics for ‘&’] 
If any I that mem Γk+1 true makes Qi true, and 
   any I that mem Γk+1 true makes Rj true, then:  

any I that mem Γk+1 true makes Qi & Rj true.

I.e.: if Γk+1 ⊨  Qi and Γk+1 ⊨  Rj, then Γk+1 ⊨  Qi & Rj. 

10 

Inductive step: &I 

OK, so prove: Γk+1 ⊨  Qi and Γk+1 ⊨  Rj. 
Γi ⊨  Qi and Γj ⊨  Rj  [by the inductive hypothesis, since
                          i and j are earlier than k+1] 
Γi ⊆  Γk+1 and Γj ⊆  Γk+1 
So we want: 
If Γi ⊨  Qi and Γi ⊆  Γk+1, then Γk+1 ⊨  Qi, and 
if Γj ⊨  Rj, and Γj ⊆  Γk+1 then Γk+1 ⊨  Rj. 
So we just need 11.3.2, which is easy: 
If Γ  ⊨  P and Γ  ⊆  Γ*, then Γ* ⊨  P. 

11 

Inductive step: &I 


So now we know: Γk+1 ⊨  Qi and Γk+1 ⊨  Rj. 
So from this, we know that if line k+1 is justiﬁed by 
&I, then Γk+1 ⊨  Qi & Rj. 
So the ﬁrst case of our proof of the inductive step is 
complete. We need to prove analogous results for all 
other rules of PD. 
The interesting ones are the new ones, the rules for 
quantiﬁers. 

12 

Inductive step: ∀E

Suppose Pk+1 is justiﬁed by ∀E. 
Then Pk+1 is of the form Q(a/x) and is justiﬁed by 

applying ∀E to some earlier line i containing (∀x)Q.

Γi ⊨ (∀x)Q   [by inductive hypothesis] 
Γi ⊆  Γk+1 
So Γk+1 ⊨ (∀x)Q   [again, by 11.3.2] 
So we just need to show that:

 if Γk+1 ⊨ (∀x)Q, then Γk+1 ⊨  Q(a/x).

This w ill follow if {(∀x)Q} ⊨  Q(a/x). 

13 

Inductive step: ∀E 
We’ll sketch a proof of the general claim 11.1.4: 
For any a, x, Q, {(∀x)Q} ⊨  Q(a/x). 
Suppose I makes (∀x)Q true. Then for every d for I: 
d satisﬁes (∀x)Q. 
So for every u∈UD, d [u/x] satisﬁes Q. [By df. sat.]

So for any a, d [I(a)/x] satisﬁes Q. 
d [I(a)/x] satisﬁes Q iff d satisﬁes Q(a/x)   [11.1.1]

So d satisﬁes Q(a/x). 
So any I that makes (∀x)Q true makes Q(a/x) true. 

14 

Inductive step: ∀E

If any I that makes (∀x)Q true makes Q(a/x) true, 
that just means that {(∀x)Q} ⊨  Q(a/x). 
So now we know that:

      if Γk+1 ⊨ (∀x)Q, then Γk+1 ⊨  Q(a/x).

And we knew that Γk+1 ⊨ (∀x)Q. 
So Γk+1 ⊨  Q(a/x). 
Q(a/x) was just Pk+1, so we’ve shown that if Pk+1 is 
justiﬁed by ∀E, then Γk+1 ⊨  Pk+1. 

15 

Progress report


Recall, we’re trying to prove PD’s soundness by proving 
that no matter what rule you use to get Pk+1, it’s q-
entailed by Γk+1. 
We’ve talked about the SD rules and ∀E. To complete 
our proof of PD’s soundness, we need to check the 
remaining quantiﬁer rules. 
Let’s do one more. The most complicated is ∃E. 

16 

Inductive step: ∃E 


Suppose Pk+1 is justiﬁed by ∃E. 
(∃x)Q
Then we have lines:  h 
Q(a/x)
 j  

Pk+1
 m 
 k+1  Pk+1 
∃E h, j-m 
And a can’t be in Pk+1, (∃x)Q, or in any open 
assumptions 
Note: Γm = Γh ⋃ {Q(a/x)}. 

17 

Inductive step: ∃E 

Γm ⊨  Pk+1 
                      
[by inductive hypothesis]

So Γh ⋃ {Q(a/x)} ⊨  Pk+1 
[since Γm = Γh ⋃ {Q(a/x)}] 

    
And Γh ⋃ {Q(a/x)} ⊆  Γk+1 ⋃ {Q(a/x)}  [since Γh ⊆  Γk+1]

So Γk+1 ⋃ {Q(a/x)} ⊨  Pk+1 
[by 11.3.2]

    
Also, Γk+1 ⊨  (∃x)Q    [since Γh ⊆  Γk+1 and Γh ⊨  (∃x)Q]

So what we need is this: 

If Γk+1 ⊨  (∃x)Q and Γk+1 ⋃ {Q(a/x)} ⊨  Pk+1, then 
Γk+1 ⊨  Pk+1 (assuming our restr ictions on a) 

18 

Inductive step: ∃E 

So, assume (i ) a doesn’t occur in Pk+1, (∃x)Q, or in any 
member of Γk+1, (ii ) Γk+1 ⊨  (∃x)Q, and 
(iii ) Γk+1 ⋃ {Q(a/x)} ⊨  Pk+1.

Prove Γk+1 ⊨  Pk+1 by reductio.

Assume some I mem Γk+1 true and makes Pk+1 false.

Then by (ii ), I makes (∃x)Q true.

So for any d for I, d satisﬁes (∃x)Q. [by def. truth]

For for any d, there’s some u∈UD s.t. d [u/x] satisﬁes Q

on I [by def. satisf.]


19 

Inductive step: ∃E 


Let I’ be just like I except that I’(a)=u. 
What object a denotes is irrelevant to whether an 
interpretation makes sentences w ithout a true. 
So I’ still mem Γk+1 true and Pk+1 false 
Since I’ mem Γk+1 true, by (ii ) it makes (∃x)Q true 

20 

Inductive step: ∃E 
And I’ makes Q(a/x) true. Because... 
d [u/x] satisﬁes Q on I’ (I’ only differs from I on a)

Since I’(a)=u, d [u/x] satisﬁes Q(a/x) on I’ too 
In fact, Q(a/x) has no free var iables, no x, in it 
So d itself satisﬁes Q(a/x) on I’

    (taking an x-var iant of d isn’t necessary)

A sentence is satisﬁed by every assignment on an I 
if it’s satisﬁed by some assignment on I. 
So every assignment satisﬁes Q(a/x) on I’ 
So by def., Q(a/x) is true on I’ 

21 

Inductive step: ∃E 
So we have: 
Γk+1’s members are all true on I’ 
Pk+1 is false on I’ 
(∃x)Q is true on I’ 
Q(a/x) is true on I’ 
Recall assumption (iii ): Γk+1 ⋃ {Q(a/x)} ⊨  Pk+1. 
So Pk+1 is true on I’. 
Contradiction. 
So not: some I mem Γk+1 true and makes Pk+1 false. 

22 

Inductive step: ∃E 

Recall, we showed earlier that what we need is this: 
If Γk+1 ⊨  (∃x)Q and Γk+1 ⋃ {Q(a/x)} ⊨  Pk+1, then 
Γk+1 ⊨  Pk+1 (assuming our restr ictions on a) 
We assumed (i ) a doesn’t occur in Pk+1, (∃x)Q, or in  

any member of Γk+1, (ii ) Γk+1 ⊨  (∃x)Q, and

(iii ) Γk+1 ⋃ {Q(a/x)} ⊨  Pk+1. 
And we showed this implied Γk+1 ⊨  Pk+1. 
So we’ve shown that line k+1 is q-entailed by the open 

assumptions w ith scope over it when it’s justiﬁed by ∃E


23 

MIT OpenCourseWare
http://ocw.mit.edu 

24.241 Logic I

Fall 2009 


For information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms. 

1 

