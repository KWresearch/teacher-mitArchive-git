% 14.06 Recitation March 5 2004 

% Example Matlab Code


% Starting hints:

% 1) Open MATLAB and selction from the menu select: File=>New=>M File.

% The M-file is where you will write your program. Save it in an 

% appropriate place

% 2) make sure that "current directory" is set to the folder in which your m-file is

saved

% 3) To run a program simply use the "save and run" button in the m-file

% window

% 4) The output of the program will show in the command window of Matlab

% 5) You can type commands (eg plot commands) direct in the command window 

% to operate on variables that are in MATLAB's memory from the last 

% program that ran.

% TO STOP A RUNNING PROGRAMMING (if it is taking too long or is not 

% coverging) simnply use "cntrl" and "C" at once. 


% _________________________________________________________________________


% This is a simple program to solve a deterministic dynamic programming problem

% The value function is V(Wt) = max {ln(c) + beta*V(Wt+1)} where 

% the evolution of wealth occurs according to Wt+1=(1+r)Wt-c+y

% The agent receives a constant income y each period 


%To begin with I need to declare paramater values for r beta y and epsilon 


clear all;  % clears all variables from memory


y = 1;

r = 0.1;

beta = 1/1.1;

epsilon = 0.2; 

% this is the convergence criterion


% Now to set the size of the interval over which we discretize the problem 


wmin = -10;  % Sets the minimum value of the grid for W - THINK ABOUT THIS VALUE

% Sets the maximum value of the grid for W

wmax = 40; 
grid = 0.1; % Sets the fineness of the grid - smaller leads to more accuracy 

% BUT comes at the cost of make the program slow 

W = [wmin:grid:wmax]'; 

nom = length(W);  % Finds the length of this vector 

% The W matrix defines the possible values that we let the state variable take on 
% It will remain unchanged throughout the program. 

V = zeros(nom,1); 

% This V matrix is our starting guess for the value function. 

P = zeros(nom,1); 

% This sets up the policy rule - it will be update as we go 

k=1; 

while k > epsilon;

 k 
%Note that I am allowing this to be printed (by dropping the ";") so we can 
see the convergence 

G = zeros(nom,1); 

 i = 1;

 while i < nom + 1

 M = zeros(nom, 1);

 x = W(i,1);

 j = 1;

 while j < nom + 1;
 M(j,1) = log( max(x*(1+r) + y - W(j,1),0.0000000000000000001) ) + 
beta*V(j,1);
 j=j+1;
 end

 % We now find the optimal choice and put the associate value into the new guess 
at the value function G 

G(i,1) = max(M);

 % Now to find the location of the maximizing choice of W

 e = 1;

 while G(i,1) > M(e,1);

 e = e + 1;

 end


 % Here the policy finction P is the optinal level of wealth to leave over
 % for the future - could covert to consumption through the budget
 % constraint.

 P(i,1)=W(e,1);

 i=i+1; 

end


% Now we see if the new value function G is far away from the previous

% guess - if the normed difference is less than 0.1 then  


k = norm(V-G);


V=G;


end


% Now we have have converged, I print the "policy function" and the expected value 

function


[P V]


% To plot these (against the correct x-axis ie W):

% plot(W,P)

% plot(W,V)


