Power & Limits of Logic 
Three Profound Theorems 
about 
Mathematical Logic 

Gödel's Completeness Theorem 

Thm 1, good news
: 
only need to know* a few axioms 
& rules, to prove all validities. 
*Theoretically only: having more 
rules is convenient. 

© 
Copyright  Albert R. Meyer, 2005

. 

September 16, 2005 

lec 2F.1 

Copyright ©Albert R. Meyer, 2005.

September 16, 2005 

lec 2F.2 

Axioms & Inference Rules 
Namely, starting from a few 
propositional & simple 
predicate validities, every valid 
using 
assertion can be proved 
just UG and modus ponens 
repeatedly! 

Cannot Determine Validity 
Bad News: there is no 
Thm 2, 
procedure that determines when 
assertions are valid 
quantified  
(in contrast to propositional 
formulas). 

© 
Copyright  Albert R. Meyer, 2005

. 

September 16, 2005 

lec 2F.3 

Copyright ©Albert R. Meyer, 2005.

September 16, 2005 

lec 2F.4 

Gödel's Incompleteness Theorem 
for Arithmetic 
Worse News:  N, with 
Thm 3, 
if we stick to domain, 
predicates  x +  y = z, 
x  ·  y = z, 
then no proof system can 
true 
prove all the 
assertions! 

Three Profound Theorems 

We won't  prove these Theorems. 
Their proofs usually require half 
a term in an intro logic course 
after 6.042. 

© 
Copyright  Albert R. Meyer, 2005

. 

September 16, 2005 

lec 2F.5 

Copyright ©Albert R. Meyer, 2005.

September 16, 2005 

lec 2F.6 

1


Mathematics for Computer Science 
MIT  6.042J/18.062J 

Sets & Functions 

Sets 

Informally, 
a set is a collection of mathematical 
objects with the collection treated as 
a single mathematical object. 
This is circular of course: what’s a 
collection? 

© 
Copyright  Albert R. Meyer, 2005

. 

September 16, 2005 

lec 2F.7 

Copyright ©Albert R. Meyer, 2005.

September 16, 2005 

lec 2F.8 

Some sets 
R 
Real numbers, 
complex numbers, C 
Z 
integers, 
the emptyset,         
∅ 
, pow(Z) 
the set of all sets of integers 

	

 
the 
set 
power 

© 
Copyright  Albert R. Meyer, 2005

. 

September 16, 2005 

lec 2F.9 

Some sets 
{7, “Albert R.”, π/2, Τ} 
elements
A set with 4 
: two numbers, 
a string, and a Boolean value. 
Same as 
{“Albert R.”,7,Τ, π/2} 
-- order doesn’t matter 
September 16, 2005 

Copyright ©Albert R. Meyer, 2005.

lec 2F.10 

Membership 
of A 
x is an 
element 
x  A∈ 
π/2 ∈ {7, “Albert R.”,π/2, Τ} 
π/3 ∉ {7, “Albert R.”,π/2, Τ} 
14/2 ∈ {7, “Albert R.”,π/2, Τ} 

Membership 
x is a member of A 
shorter:  “x is in A” 
2/3 ∉ Z  Z ∈pow(R) 

x  A∈ 

7∈Z 

© 
Copyright  Albert R. Meyer, 2005

. 

September 16, 2005 

lec 2F.11 

© 
Copyright  Albert R. Meyer, 2005

. 

September 16, 2005 

lec 2F.12 

2


In or Not In 

{7, π
/2, 7} is same as {7, 
π/2} 
An element, like 7, is 
in a set, 
or not in 
the set. 
(No notion of being in the set 
more than once) 

©
Copyright  Albert R. Meyer, 2005

. 

September 16, 2005 

lec 2F.13 

A  B⊆ 

Containment 
A is a subset of B 
A is contained in B 
A is also an 
Every element of 
element of B. 
Z⊆R,  R⊆C,  {3}⊆{5,7,3} 
∅⊆  every set 
. 
September 16, 2005 
©
Copyright  Albert R. Meyer, 2005

lec 2F.14 

Team Problem 

Problem 1 

Defining Sets 
, x, in A 
The 
set of elements
such that P(x) is true. 
x A  P x
{ 
|∈ 
)
}(

 

©
Copyright  Albert R. Meyer, 2005

. 

September 16, 2005 

lec 2F.15 

©
Copyright  Albert R. Meyer, 2005

. 

September 16, 2005 

lec 2F.16 

Defining Sets 
The set of even integers: 
∈(cid:0) 
(cid:0)
Z 
{ 
}
n
n 
|
 is even 
(cid:0) 
(cid:0)
Z 
Z 
}
{ 
m 
n 
n  m
. 
| 
2
∈ 
∃  ∈ 
=

New sets from old 

A 

B 

Venn Diagram for 

A and B 

©
Copyright  Albert R. Meyer, 2005

. 

September 16, 2005 

lec 2F.17 

©
Copyright  Albert R. Meyer, 2005

. 

September 16, 2005 

lec 2F.19 

3


union

A

B

intersection

A

B

A

∪

B

x
:: { | (
=

x A
)
∈

∨

(

x

∈

B

)}

A

∩

B

x x
:: { |
=

∈

A

∧

x B
}
∈

Copyright © Albert R. Meyer, 2005.

September 16, 2005

lec 2F.20

Copyright © Albert R. Meyer, 2005. 

September 16, 2005

lec 2F.21

set difference

A

B

complement
D−A
A =

A

known
domain D

A

−

B

x
:: { | (
=

x A
)
∈

∧

(

x

∉

B

)}

A

x D
:: {
= ∈

|

x A D
}
∉
=

−

A

Copyright © Albert R. Meyer, 2005. 

September 16, 2005

lec 2F.22

Copyright © Albert R. Meyer, 2005. 

September 16, 2005

lec 2F.23

power set
p w A
S S
) :: { |
o
(
=
{
{

}
a b
,
)

{
pow (

=

} { } { }
a b
a
b
,
,
,

⊆

A
}
}
∅

,

Quickie
What is Pow(∅)?
Ans: {∅}
What is Pow(Pow(∅))?
Ans: {{∅}, ∅}

Copyright © Albert R. Meyer, 2005. 

September 16, 2005

lec 2F.24

Copyright © Albert R. Meyer, 2005. 

September 16, 2005

lec 2F.25

4

Russell’s Paradox 
}
{ 
 S
S=  ∈ 
W 
Sets  S
|
:: 
Let 
∉
S  S  
 so S W∈ 
∉↔ 
Let S be W and reach a 
contradiction: 
W W   W W
∈  ↔  ∉ 
. 
September 16, 2005 
©
Copyright  Albert R. Meyer, 2005

Mathematics for Computer Science 
MIT  6.042J/18.062J 

Functions 

 

Russell’s Paradox 

So the collection, 
Sets
, of all 
be considered a 
sets, cannot 
set! 

lec 2F.26 

©
Copyright  Albert R. Meyer, 2005

. 

September 16, 2005 

lec 2F.27 

f  A
: 

B→ 
 

A to set B 
f
function,  , from set 
( )   B∈ 
f  a
 
associates an element, 
a A∈ 
.
with an element 
Example: f is the string-length 
function:  f(“aabd”)=4 

©
Copyright  Albert R. Meyer, 2005

. 

September 16, 2005 

lec 2F.31 

©
Copyright  Albert R. Meyer, 2005

. 

September 16, 2005 

lec 2F.32 

f  A
: 

B→ 
 

f is the string-length function. 
A, the domain of f, 
is the set of strings. 
N 
B, the codomain of f, is 

R (cid:0) R 
:g  →(cid:0)
2
1
g x y  
( ,
 )
= 
x  y 
− 
domain(g) = all pairs of reals 
codomain(g)=
all reals 
But g is partial: 
not defined on all pairs of reals 

©
Copyright  Albert R. Meyer, 2005

. 

September 16, 2005 

lec 2F.33 

©
Copyright  Albert R. Meyer, 2005

. 

September 16, 2005 

lec 2F.34 

5


:g D′  →(cid:0) R 
1
g x y  
( ,
 )
′ 
= 
x  y 
− 
R 
}
{ 
x y   y   x  
D = 
 )  |
( ,
where 
2 
=
− 
Then g´ is total: 
defined on all pairs in domain 

D. 

Total functions 
:f A   B→ 
is total 
A is 
iff every element of 
assigned a B-value by f 
 B f a
a A  b
 )
(
.
∀ ∈ ∃ ∈  

 b= 
 

©
Copyright  Albert R. Meyer, 2005

. 

September 16, 2005 

lec 2F.35 

©
Copyright  Albert R. Meyer, 2005

. 

September 16, 2005 

lec 2F.36 

Onto functions 
:f A   B→ 
is onto 
B is 
iff every element of 
f 
of something 
 b= 
b B  a  A f a  
 )
(
.
∀ ∈  ∃ ∈  
a surjection 

1-1 functions 
:f A   B→ 
is 1-1 
B is 
iff every element of 
f of at most
1 thing 
a   a  
a a′∀ 
A   f a  
f a  
( 
(  ')) 
. (  (  ) 
, 
')
→  = 
∈ 
= 
an injection 

©
Copyright  Albert R. Meyer, 2005

. 

September 16, 2005 

lec 2F.37 

©
Copyright  Albert R. Meyer, 2005

. 

September 16, 2005 

lec 2F.38 

Bijections 
is a bijection iff 
f  A
B→ 
 
: 
it is all those good things: 
total, onto, and 1-1 

Bijections 
f  A
B→ 
 
is a bijection 
iff it is 
: 
an exact correspondence: 
f( )= 

A 

B 

©
Copyright  Albert R. Meyer, 2005

. 

September 16, 2005 

lec 2F.39 

©
Copyright  Albert R. Meyer, 2005

. 

September 16, 2005 

lec 2F.40 

6


Bijections 

Team Problem 

exactly one arrow out 

exactly one arrow in 

f( )= 

A 

B 

Problem 2 

© 
Copyright  Albert R. Meyer, 2005

. 

September 16, 2005 

lec 2F.41 

© 
Copyright  Albert R. Meyer, 2005

. 

September 16, 2005 

lec 2F.42 

7


