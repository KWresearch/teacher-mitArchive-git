Mathematics for Computer Science 
MIT  6.042J/18.062J 

State Machines II: 
Derived Variables, 
Stable Marriage 

Derived Variables 
A derived variable, v, is a function 
giving a “value” to each state: 
v: Q → Values.

If Values = `, we’d say v was 

“natural-number-valued,” or 
“`-valued.” 

Copyright © Albert R. Meyer, 2005.  

October 24, 2005 

lec 8M.1 

Copyright © Albert R. Meyer, 2005.  

October 24, 2005 

lec 8M.3 

Derived Variables 
Robot on the grid example: 
States Q = `2. 
Define the sum-value, σ, of a state: 
σ(〈x,y〉) ::= x+y 
An `-valued derived variable. 

Derived Variables 
Another derived variable: 
π ::= σ (mod 2). 
π is {0,1}-valued. 

Copyright © Albert R. Meyer, 2005. 

October 24, 2005 

lec 8M.4 

Copyright © Albert R. Meyer, 2005. 

October 24, 2005 

lec 8M.5 

Derived Variables 
Called “derived” to distinguish  

from actual variables that appear  

in a program.  

For robot  Actual: x, y

Derived: σ, π 

Derived Variables 
For GCD, have (actual) 

variables x, y.

Proof of GCD termination:

y is strictly decreasing and 
natural number-valued. 

Copyright © Albert R. Meyer, 2005.  

October 24, 2005 

lec 8M.6 

Copyright © Albert R. Meyer, 2005. 

October 24, 2005 

lec 8M.7 

1 

Derived Variables 
Termination followed by 
Well Ordering Principle: 
y must take a least value – 
and then the algorithm is stuck. 

Strictly Decreasing Variable 

N 

Goes down at 
every step 

QQQQQQQQQ 
2
0 
1
3
4
5
6
7

8

State


16


12


8


4


0 

Copyright © Albert R. Meyer, 2005. 

October 24, 2005 

lec 8M.8 

Copyright © Albert R. Meyer, 2005. 

October 24, 2005 

lec 8M.9 

Weakly Decreasing Variable 

N 

Down or constant 
after each step 

QQQQQQQQQ 
0 
1
2
3
4
5
6
7
8

State


16


12


8


4


0 

σ, π for the Diagonal Robot 
σ: up & down all over the place – 
neither increasing nor decreasing. 
π: is constant –

both increasing & decreasing

(weakly)


Copyright © Albert R. Meyer, 2005.  

October 24, 2005 

lec 8M.10 

Copyright © Albert R. Meyer, 2005.  

October 24, 2005 

lec 8M.11 

Weakly Decreasing Variable 
(We used to call weakly 
decreasing variables 
“nonincreasing” variables.) 

Team Problem 

Problem 1


Copyright © Albert R. Meyer, 2005.  

October 24, 2005 

lec 8M.12 

Copyright © Albert R. Meyer, 2005.  

October 24, 2005 

lec 8M.14 

2 

Stable Marriage
A Marriage Problem

1       2       3       4      5

Boys

Girls

A

B

C      D E

Stable Marriage
Preferences:
Girls
A : 35214
B : 52143
C : 43512
D : 12345
E :  23415

Boys
1:  CBEAD
2 : ABECD 
3 : DCBAE 
4 : ACDBE 
5 : ABDEC 

Copyright © Albert R. Meyer, 2005. 

October 24, 2005

lec 8M.15

Copyright © Albert R. Meyer, 2005. 

October 24, 2005

lec 8M.16

Stable Marriage

Stable Marriage

Preferences

1:  CBEAD
2 : ABECD
3 : DCBAE
4 : ACDBE
5 : ABDEC

Try “greedy”
strategy for boys

Preferences
1:  CBEAD
2 : ABECD
3 : DCBAE
4 : ACDBE
5 : ABDEC

Marry Boy 1 with Girl C
(his 1st choice)

1

C

Copyright © Albert R. Meyer, 2005.  

October 24, 2005

lec 8M.17

Copyright © Albert R. Meyer, 2005. 

October 24, 2005

lec 8M.18

Stable Marriage

Stable Marriage

Preferences

Marry Boy 1 with Girl C
(his 1st choice)

Preferences

Marry Boy 1 with Girl C
(his 1st choice)

2 : ABE   D
3 : D   BAE
4 : A   DBE
5 : ABDE

1

C

2 : ABED
3 : DBAE
4 : ADBE
5 : ABDE

1

C

Copyright © Albert R. Meyer, 2005.  

October 24, 2005

lec 8M.19

Copyright © Albert R. Meyer, 2005.  

October 24, 2005

lec 8M.20

3

Stable Marriage

Next:
Marry Boy 2 with Girl A:
(best remaining choice)

Preferences
1
C
2 : ABED
3 : DBAE
4 : ADBE
5 : ABDE

Stable Marriage
Final “boy greedy” marriages

1  C

2  A

3  D

2

A

4  B

5  E

Copyright © Albert R. Meyer, 2005. 

October 24, 2005

lec 8M.21

Copyright © Albert R. Meyer, 2005. 

October 24, 2005

lec 8M.22

Stable Marriage
Trouble!

Stable Marriage
Boy 4 likes Girl C better than his wife.

1

4
Copyright © Albert R. Meyer, 2005. 

C

B

October 24, 2005

lec 8M.23

1

4
Copyright © Albert R. Meyer, 2005.  

C

B

October 24, 2005

lec 8M.24

Stable Marriage
and vice-versa

Stable Marriage
Rogue Couple

1

4
Copyright © Albert R. Meyer, 2005. 

C

B

October 24, 2005

lec 8M.25

1

4
Copyright © Albert R. Meyer, 2005.  

C

B

October 24, 2005

lec 8M.26

4

Stable Marriage

Stable Marriage Problem: 
Marry everyone without 
any rogue couples!

Stable Marriage
Let’s Try it!
?Volunteers:
5 Boys & 5 Girls

Copyright © Albert R. Meyer, 2005.  

October 24, 2005

lec 8M.27

Copyright © Albert R. Meyer, 2005.

October 24, 2005

lec 8M.28

Stable Marriage I.

Stable Marriage II.

5 A

2 B

4 C

3 A

5 B

4 C

1 E
3 D
Boy Optimal

Copyright © Albert R. Meyer, 2005. 

October 24, 2005

lec 8M.29

2 E
1 D
All Girls get 1st Choice
Copyright © Albert R. Meyer, 2005.  
October 24, 2005

lec 8M.30

Stable Marriage

Stable Marriage
More than a puzzle:
• College Admissions
(original Gale & Shapley paper, 1962)
• Matching Hospitals & Residents.
• Matching Dance Partners.

Copyright © Albert R. Meyer, 2005.  

October 24, 2005

lec 8M.31

Copyright © Albert R. Meyer, 2005.  

October 24, 2005

lec 8M.32

5

Stable Marriage 

The Mating Algorithm: 
day by day 

Mating Algorithm 
Morning: boy serenades favorite girl 

Ted 

Bob 

Alice 

Copyright © Albert R. Meyer, 2005.  All rights reserved. 

October 24, 2005 

lec 8M.33 

Copyright © Albert R. Meyer, 2005.  

October 24, 2005 

lec 8M.34 

Mating Algorithm 
Morning: boy serenades favorite girl 
Afternoon: girl rejects all but favorite 

Ted 

Bob 

Alice 

Mating Algorithm 
Morning: boy serenades favorite girl 
Afternoon: girl rejects all but favorite 
Evening: rejected boy writes off girl 

… 
… Alice 

Ted 

Copyright © Albert R. Meyer, 2005.  

October 24, 2005 

lec 8M.35 

Copyright © Albert R. Meyer, 2005.  

October 24, 2005 

lec 8M.36 

Mating Algorithm 
Stop when no girl rejects. 
Girl marries her 
favorite suitor. 

Team Problem 

Problem 2


Copyright © Albert R. Meyer, 2005.  

October 24, 2005 

lec 8M.37 

Copyright © Albert R. Meyer, 2005.  

October 24, 2005 

lec 8M.38 

6 

Mating Algorithm 
Partial Correctness: 
• Everyone is married. 
• Marriages are stable. 
Termination:

there exists a Wedding Day.


Mating Algorithm 

Model as State Machine

State q: 

Each boy’s set of “eligible” girls 

142 43 
not crossed off 
q(Bob) = {Carole, Alice, …} 

Copyright © Albert R. Meyer, 2005.  

October 24, 2005 

lec 8M.39 

Copyright © Albert R. Meyer, 2005.  

October 24, 2005 

lec 8M.40 

Mating Algorithm: variables 
Derived Variable 
serenading(Bob):

Bob’s favorite eligible girl. 

(“Top” on Bob’s list.) 

::= max{q(Bob)} 
using Bobs’ preference order. 

Mating Algorithm: variables 

Derived Variable 
suitors(Alice):

all boys serenading Alice.

::= serenading−1(Alice) 

Copyright © Albert R. Meyer, 2005.  

October 24, 2005 

lec 8M.41 

Copyright © Albert R. Meyer, 2005.  

October 24, 2005 

lec 8M.42 

Stable Marriage: Termination 

Stable Marriage: Termination 

Derived Variable 
boy’s-list-length: 
total number of names not crossed 
off  boy’s lists 
::= Σb ∈ boys  |q(b)| 

boy’s-list-length: 
strictly decreasing & N-valued. 
So ∃ Wedding Day. 

Copyright © Albert R. Meyer, 2005. 

October 24, 2005 

lec 8M.43 

Copyright © Albert R. Meyer, 2005.  

October 24, 2005 

lec 8M.44 

7 

Mating Algorithm: variables 
Derived Variable

favorite(Carole):

Carole’s preferred suitor. 

::= max{suitors(Carole)} 
using Carole’s preference order. 

Mating Algorithm 
Different girls have different

favorites,

because boys serenade

one girl at a time.

(favorite: Girls→Boys

is an injection) 

Copyright © Albert R. Meyer, 2005.  

October 24, 2005 

lec 8M.45 

Copyright © Albert R. Meyer, 2005.  

October 24, 2005 

lec 8M.46 

Mating Algorithm: Girls improve 

Mating Algorithm: Girls improve 

Lemma: A girl’s favorite tomorrow 
will be at least as desirable as today’s. 
That is,  favorite(G) is  weakly 
increasing for each G. 

Lemma: A girl’s favorite tomorrow 
will be at least as desirable as today’s. 
…because today’s favorite will 
stay until she rejects him for 
someone better. 

Copyright © Albert R. Meyer, 2005.  

October 24, 2005 

lec 8M.47 

Copyright © Albert R. Meyer, 2005. 

October 24, 2005 

lec 8M.48 

Mating Algorithm: Boys Get Worse 

Mating Algorithm: Boys Get Worse 

Lemma: A boy’s 1st love tomorrow 
will be no more desirable than today’s. 

Lemma: A boy’s 1st love tomorrow 
will be no more desirable than today’s. 

That is, serenading(B) is  weakly 
decreasing for each B. 

…because boys work straight 
down their lists. 

Copyright © Albert R. Meyer, 2005. 

October 24, 2005 

lec 8M.49 

Copyright © Albert R. Meyer, 2005.  

October 24, 2005 

lec 8M.50 

8 

Mating Algorithm: Invariant 

If G has rejected B, then she has 
a better current favorite. 
Proof: 
favorite(G) is weakly increasing. 

Stable Marriage: Termination 
On Wedding Day: 
• Each girl has (cid:47) 1 suitors 
• Each boy is married, or 
has no girls on his list 

Copyright © Albert R. Meyer, 2005.  

October 24, 2005 

lec 8M.51 

Copyright © Albert R. Meyer, 2005. 

October 24, 2005 

lec 8M.52 

Mating Algorithm: Everyone Marries 
Everyone is Married by Wedding Day 
Proof: by contradiction.

If B is not married, his list is empty.

By Invariant, all girls have favorites

better than B -- so they do have a favorite. 

That is, all girls are married. 
So all boys are married. 

Team Problem 

Problem 3


Copyright © Albert R. Meyer, 2005. 

October 24, 2005 

lec 8M.53 

Copyright © Albert R. Meyer, 2005. 

October 24, 2005 

lec 8M.54 

Mating Algorithm 
Who does better, boys or girls? 
Girls’ suitors get better, and 
boy’s sweethearts get worse, so 
girls do better?  No! 

Mating Algorithm 

Mating Algorithm is Optimal for 
all Boys at once. Pessimal for all 
Girls. 

Copyright © Albert R. Meyer, 2005. 

October 24, 2005 

lec 8M.57 

Copyright © Albert R. Meyer, 2005. 

October 24, 2005 

lec 8M.58 

9 

Stable Marriage 
More questions, rich theory: 
Other stable marriages possible? 
- Can be many. 
Can a boy do better by lying? – No! 
Can a girl do better by lying? – Yes! 

Copyright © Albert R. Meyer, 2005. 

October 24, 2005 

lec 8M.59 

10 

