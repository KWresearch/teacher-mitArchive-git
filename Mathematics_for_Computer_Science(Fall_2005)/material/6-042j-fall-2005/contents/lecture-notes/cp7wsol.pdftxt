Massachusetts Institute of Technology 
6.042J/18.062J, Fall ’05: Mathematics for Computer Science 
Prof. Albert R. Meyer and Prof. Ronitt Rubinfeld 

October 19 
revised October 18, 2005, 704 minutes 

Solutions to In­Class Problems Week 7, Wed. 

Problem  1.  Let’s  try  out RSA! There  is  a  complete description  of  the  algorithm  at  the  bottom  of 
the page. You’ll probably need extra paper. Check your work carefully! 

(a)  As a team, go through the beforehand steps. 

•	 Choose primes p and q to be relatively small, say in the range 10­40.  In practice, p and q might 
contain several hundred digits, but small numbers are easier to handle with pencil and paper. 
•	 Try  e  = 3, 5, 7, . . . until  you ﬁnd  something  that works.  Use Euclid’s  algorithm  to  compute 
the gcd. 
•	 Find d using the Pulverizer (see appendix for a reminder on how the Pulverizer works). 

When you’re done, put your public key on the board. This lets another team send you a message. 

(b)  Now send an encrypted message to another team using their public key.  Select your message 
m from the codebook below: 

•	 2 = Greetings and salutations! 
•	 3 = Yo, wassup? 
•	 4 = You guys are slow! 
•	 5 = All your base are belong to us. 
•	 6 = Someone on our team thinks someone on your team is kinda cute. 
•	 7 = You are the weakest link. Goodbye. 

(c)  Decrypt the message sent to you and verify that you received what the other team sent! 

(d)  Explain how you could read messages encrypted with RSA if you could quickly factor large 
numbers. 

Copyright © 2005, Prof. Albert R. Meyer and Prof. Ronitt Rubinfeld. 

2 

Solutions to In­Class Problems Week 7, Wed. 

Solution.  Suppose  you  see  a  public  key  (e, n).  If  you  can  factor  n  to  obtain  p  and  q ,  then  you 
can  compute d using  the Pulverizer.  This gives you  the  secret key  (d, n),  and  so you  can decode 
� 
messages as well as the intended recipient. 

RSA Public Key Encryption 

Beforehand  The receiver creates a public key and a secret key as follows. 

1.  Generate two distinct primes, p and q . 
2.  Let n = pq . 
3.  Select an integer e such that gcd(e, (p − 1)(q − 1)) = 1. 
The public key is the pair (e, n). This should be distributed widely. 
4.  Compute d such that de ≡ 1  (mod  (p − 1)(q − 1)).

The secret key is the pair (d, n). This should be kept hidden!

Encoding  The sender encrypts message m to produce m�  using the public key: 

m�  = m  rem n. 
e 
Decoding  The receiver decrypts message m�  back to message m using the secret key: 
m = (m� )d  rem n. 

Problem 2.  A critical question is whether decrypting an encrypted message always gives back the 
original message! Mathematically, this amounts to asking whether: 

de m  ≡ m  (mod  pq). 
Note that the procedure ensures that de = 1 + k(p − 1)(q − 1) for some integer k . 
(a)  Use Euler ’s Theorem to prove that mde  ≡ m  (mod  pq) for all messages m relatively prime to 
pq .  (Euler ’s Theorem says that if k  is relatively prime to n then kφ(n)  ≡  1  (mod  n).)  In practice, is 
m likely to be relatively prime to pq or not? 

Solution. 

m de  ≡  m 1+kφ(pq) 
(mod  pq) 
≡  m · (m 
φ(pq) )k 
(mod  pq)
≡  m · 1k 
(mod  pq)

3 
Solutions to In­Class Problems Week 7, Wed. 
The ﬁrst step uses  the  fact  that φ(pq) = (p − 1)(q − 1),  the second uses exponent  laws,  and  third 
uses Euler ’s Theorem.  If p and q are hundred­digit primes, m is very likely to be relatively prime 
� 
to both p and q . 

(b)  This congruence actually holds for all messages m.  First, use Fermat’s theorem to prove that 
m  ≡  mde  (mod  p)  for  all m.  (Fermat’s  Theorem  says  that  ap−1  ≡  1  (mod  p)  if  p  is  a  prime  that 
does not divide a.) 

Solution.  If m is a multiple of p, then the claim holds because both sides are congruent to 0 mod 
p. Otherwise, suppose that m is not a multiple of p. Then: 

1+k(p−1)(q−1)  ≡  m · (mp−1 )k(q−1)
(mod  p) 
m 
≡  m · 1k(q−1) 
(mod  p) 
≡  m  (mod  p) 
The  second  step uses Fermat’s  theorem, which  says  that mp−1  ≡  1  (mod  p) provided m  is not  a 
� 
multiple of p. 

(c)  By  the  same  argument,  you  can  equally well  show  that m  ≡  med  (mod  q).  Show  that  these 
two facts together imply that m ≡ med  (mod  pq) for all m. 
Solution.  We know that: 

p  | (m − m ed ), 
q  | (m − m ed ). 
Thus, both p and q appear in the prime factorization of m − med . Therefore, pq  (m − med ), and so: 
| 
m ≡ m 
ed 
(mod  pq). 

� 

1  Appendix: The Pulverizer 

Euclid’s algorithm for ﬁnding the GCD of two numbers relies on repeated application of the equa­
tion: 

gcd(a, b) = gcd(b, a rem b) 
For example, we can compute the GCD of 259 and 70 as follows: 

gcd(259, 70)  =  gcd(70, 49) 
=  gcd(49, 21) 
=  gcd(21, 7) 
=  gcd(7, 0) 
= 7. 

since 259 rem 70 = 49 
since 70 rem 49 = 21 
since 49 rem 21 = 7 
since 21 rem 7 = 0 

4 

Solutions to In­Class Problems Week 7, Wed. 

The Pulverizer goes through the same steps, but requires some extra bookkeeping along the way: 
as we compute gcd(a, b), we keep track of how to write each of the remainders (49, 21, and 7, in the 
example) as a  linear combination of a and b  (this  is worthwhile, because our objective  is  to write 
the  last  nonzero  remainder,  which  is  the GCD,  as  such  a  linear  combination).  For  our  example, 
here is this extra bookkeeping: 

x
259 
70 

49 

21

y 
70 
49 

21 

7 

(x rem y) =  x − q · y

49 = 259 − 3 · 70 

21 = 70 − 1 · 49 
=  70 − 1 · (259 − 3 · 70) 
=  −1 · 259 + 4 · 70 
7 = 49 − 2 · 21 
=  (259 − 3 · 70) − 2 · (−1 · 259 + 4 · 70) 
=  3 · 259 − 11 · 70 


0


We  began  by  initializing  two  variables,  x  =  a  and  y  =  b.  In  the  ﬁrst  two  columns  above,  we 
carried  out Euclid’s  algorithm.  At  each  step, we  computed x rem y , which  can be written  in  the 
form x − q · y .  (Remember that the Division Algorithm says x = q · y + r , where r is the remainder. 
We  get  r  =  x −  q  ·  y  by  rearranging  terms.)  Then  we  replaced  x  and  y  in  this  equation  with 
equivalent  linear  combinations  of  a  and  b,  which we  already  had  computed.  After  simplifying, 
we were left with a linear combination of a and b that was equal to the remainder as desired.  The 
ﬁnal solution is boxed. 

