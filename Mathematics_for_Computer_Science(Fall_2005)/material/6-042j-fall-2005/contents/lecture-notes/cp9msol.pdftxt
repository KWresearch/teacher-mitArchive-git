Massachusetts Institute of Technology 
6.042J/18.062J, Fall ’05: Mathematics for Computer Science 
Prof. Albert R. Meyer and Prof. Ronitt Rubinfeld 

October 31 
revised October 30, 2005, 722 minutes 

Solutions to In­Class Problems Week 9, Mon. 

Problem 1.  Prove that asymptotic equality (∼) is an equivalence relation. 
Solution.  reﬂexivity:  limx→∞ f (x)/f (x) = 1, so f  ∼ f . 
symmetry: Say f  ∼ g . Then limx→∞ f (x)/g(x) = 1. So limx→∞ g(x)/f (x) =  limx→∞ 1/(f (x)/g(x))  =

1/ limx→∞ f (x)/g(x) = 1/1  = 1, and therefore g  ∼ f .

transitivity:  Say f   ∼ g  and g  ∼ h.  So

1  = 1 1· 
= [ lim  f (x)/g(x)]
x→∞ 
lim [f (x)/g(x)]
x→∞ 
lim  f (x)/h(x), 
x→∞ 

· 
[ lim  g(x)/h(x)]
x→∞ 
· 
[g(x)/h(x)]

= 

= 

so f  ∼ h. 

Problem 2.  Recall that for functions f ,  g  on the natural numbers, N, f  =  O(g) iff 
c  · g(n) ≥  f (n) . 
∃c  ∈ N ∃n0  ∈ N ∀n  ≥ n0 
|
| 

� 

(1)

For  each  pair  of  functions  below,  determine whether  f  =  O(g) and whether  g  =  O(f ).  In  cases 
where one function is O() of the other, indicate the smallest natural number, c, and for that smallest 
c, the smallest corresponding natural number n0  ensuring that condition (1) applies. 

(a)  f (n) =  n2 ,  g(n) =  3n. 
f  =  O(g) 
YES 

Solution.  NO. 

NO 

If YES, c  = 

, n0  = 

g  =  O(f ) 

YES 

NO 

If YES, c  = 

, n0  = 

Copyright © 2005, Prof. Albert R. Meyer. 

� 

2 

Solutions to In­Class Problems Week 9, Mon. 
· 
�
Solution.  YES, with c = 1, n0  = 3, which works because 32  = 9, 3 3  = 9. 

(b)  f (n) = (3n − 7)/(n +  4), g(n) = 4 
If YES, c = 
f  =  O(g) 
NO 
YES 
Solution.  YES, with c = 1, n0  = 0 (because |f (n) < 3). 
| 

, n0  =


�


g =  O(f ) 

If YES, c = 

NO 
YES 
Solution.  YES, with c = 2, n0  = 15. 

Since limn→∞ f (n) = 3, the smallest possible c is 2.  For c = 2, the smallest possible n0  =  15  which 

follows from the requirement that 2f (n0 ) ≥ 4. 
�


, n0  =


(c)  f (n) = 1 +  (n sin(nπ/2))2 , g(n) = 3n  
If yes, c = 
f  =  O(g) 
n0  =

YES 
NO 
Solution.  NO, because f (2n) = 1, which rules out g =  O(f ) since g = Θ(n). 

g =  O(f ) 
If yes, c = 
n0  =

NO 
YES 
Solution.  NO, because f (2n +  1)  =  n2  +  1  =� O(n) which rules out f  =  O(g). 

�


�


Problem  3.  Indicate  which  of  the  following  holds  for  each  pair  of  functions  (f (n), g(n))  in  the 
table below. Assume k ≥ 1, � > 0, and c > 1 are constants. Be prepared to justify your answers. 
f  =  O(g)  f  =  o(g)  g =  O(f )  g =  o(f )  f  =  Θ(g)  f  ∼ g 
f (n) 
g(n) 
2n/2 
2n 
√
nsin  nπ/2 
n 
log(nn ) 
log(n!) 
cn 
nk 
logk  n 
n� 

Solution. 

f (n) 
2n 
√
n 
log(n!) 
nk 
logk  n 

g(n) 
2n/2 
nsin  nπ/2 
log(nn ) 
cn 
n� 

f  =  O(g)  f  =  o(g)  g =  O(f )  g =  o(f )  f  =  Θ(g)  f  ∼ g 
no 
no 
yes 
yes 
no 
no 
no 
no 
no 
no 
no 
no 
yes 
yes 
no 
yes 
no 
yes 
yes 
yes 
no 
no 
no 
no 
no 
no 
no 
no 
yes 
yes 

Following are some hints on deriving the table above:


(a) 

(c) 

√

3 

= 2n/2   grows without bound as n grows—it is not bounded by a constant. 

Solutions to In­Class Problems Week 9, Mon. 
2n 
2n/2 
(b)  When  n  is  even,  then  nsin  nπ/2  = 1.  So,  no  constant  times  nsin  nπ/2  will  be  an  upper  bound 
√
n as n ranges over even numbers.  When n  ≡  1  mod   4,  then nsin  nπ/2  =  n1  =  n.  So, no 
√
on 
n will be an upper bound on nsin  nπ/2  as n ranges over numbers ≡ 1  mod  4. 
constant times 
�n  ± cn 
� n 
log 
2πn 
log(n!)  = 
e 
log  n +  n(log  n − 1)  ± dn 
= 
∼  n log  n 
log  n n  . 
= 
where  a  ≤  cn , dn  ≤  b for  some  constants  a, b  ∈  R  and  all  n.  Here  equation  (2)  follows  by 
taking logs of Stirling’s formula, (3) follows from the fact that the log of a product is the sum 
of the logs, and (4) follows because any constant, log  n, and n are all o(n log  n) and hence so 
is their sum. 

(2) 
(3) 
(4) 

(d)  Polynomial growth versus exponential growth. 

(e)  Polylogarithmic growth versus polynomial growth. 

� 

Problem 4.  It is a standard fallacy to think that given n quantities each of which is O(1), their sum 
would have to be O(n). 
Namely, let f1 , f2 , . . .  be a sequence of functions from N to N, and let 
� 
n
fi (n). 
i=1 

S (n) ::= 

Then given that fi  =  O(1)  for every fi  in the sequence, we can try to argue as follows: 
� 
� 
n
n
O(1)  =  n · O(1)  =  O(n). 
fi (n) = 
i=1 
i=1  

S (n) = 

This informal argument may seem plausible, but is fundamentally ﬂawed because it treats O(1) as 
some kind numerical quantity.  In fact, we ask you to show that there is no way to determine how 
fast the sum, S (n), may grow. 
Namely, let g be any function on N.  Explain how to deﬁne a sequence of functions f1 , f2 , . . .  such 
that each fi  =  O(1), but S is not O(g). Hint: Let fi (n) ::=  1 +  ig(i). 

4 

Solutions to In­Class Problems Week 9, Mon. 

� 

Solution.  Pick fi  to be the constant function i(1  +  g(i)). That is, 

fi (n) ::=  i(1  +  g(i)), 
� 
for all n.  Since fi  is a constant function, it is O(1). But 
n
fi (n) ≥ fn (n) =  n(1  +  g(n)), 
i=1  
so g  =  o(S ) and therefore S  =� O(g). 

S (n) 

Asymptotic Notations 

For functions f , g  :  R

→ 

R, we say f   is asymptotically equal to g , in symbols, 
f (x) ∼ g(x) 

iff 

For functions f , g  :  R

→ 

lim  f (x)/g(x) = 1. 
x→∞ 
R, we say f   is asymptotically smaller than g , in symbols, 

f (x) =  o(g(x)), 

iff 

lim  f (x)/g(x) = 0. 
x→∞ 
Given functions f , g  :  R  �→ R, with g  nonnegative, we say that1 

iff 

f  =  O(g) 

lim  sup  f (x) /g(x) <  ∞.
|
|
x→∞ 

An alternative, equivalent, deﬁnition is 

f  =  O(g) 
iff there exists a constant c  ≥ 0  and an x0  such that for all x  ≥ x0 ,  f (x) ≤ cg(x).
|
| 
Finally, we say 

f  = Θ(g) 

iff  f  =  O(g) ∧ g  =  O(f ). 

1 

lim  sup  h(x) ::=  lim  luby≥xh(y). 
x→∞ 
x→∞ 

