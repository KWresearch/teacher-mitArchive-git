MIT OpenCourseWare 
http://ocw.mit.edu 

6.00 Introduction to Computer Science and Programming 
Fall 2008 

For information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms. 

6.00  Quiz  2  Practice  Problem  Solutions 

Problem  1 

Divide  list  into  left  and  right  subsets  of  about  the  same  size 
Sort  each  sublist  recursively  by  re-applying  merge  sort 
Merge  the  returned  (sorted)  sublists 

1.  False.  2.  True.  3.  False.  4.  False.  5.  True.  6.  False. 

Problem  6 

def  findNumber(maxVal): 
""" 
Assumes  that  maxVal  is  a  positive  integer.  Returns  a  number,  num, 
such  that  cmpGuess(num)  ==  0 
""" 
s  =  range(0,  maxVal) 
return  bsearch(s,  0,  len(s)  - 1) 

def  bsearch(s,  first,  last): 
if  (last  - first)  <  2: 
if  cmpGuess(s[first])  ==  0: 
return  first 
else: 
return  last

mid  =  first  +  (last  - first)/2

if  cmpGuess(s[mid])  ==  0:

return  s[mid]

if  cmpGuess(s[mid])  ==  -1:

return  bsearch(s,  first,  mid  - 1)

return  bsearch(s,  mid  +  1,  last)


def  cmpGuess(guess): 
""" 
Assumes  that  guess  is  an  integer  in  range(maxVal). 
Returns  -1  if  guess  is  <  magic  number,  0  if  ==,  1  if  > 
""" 

Problem  2 

def  findMedian(L): 
if  len(L)  ==  0:  raise  ValueError("Empty  list") 
copy  =  L[:] 
copy.sort() 
if  len(copy)  %  2  ==  1: 
return  copy[len(copy)  /  2] 
else: 
return  (copy[len(copy)  /  2]  +  copy[len(copy)  /  2  - 1])  /  2 

Problem  3 

16.0 
Circle  with  radius  4 
Circle  with  radius  8 

Problem  4 

1. 

• 
n —  total  number  of  items 
•  pi  —  value  of  item  i 
•  xi  —  value  is  1  if  item  i  is  taken;  0  otherwise 
•  wi  —  weight  of  item  i 
•  C  — maximum  weight  allotted 

2.  Maximize  formula  1  while  obeying  the  constraint  of  formula  2. 

Probem  5 

If  the  list  is  of  length  0  or  1,  then  return  the  list 
Otherwise, 

1 

