

















[MIT_OpenCourseWare,_Massachusetts_Institute_of_Technology]
                              [Submit ../../common/ [Click_to_visit_our
Subscribe to the [Enter Email images/               Facebook_page.][Click
OCW Newsletter   ]            button_subscribe.png] to_visit_our_Twitter
                                                    feed.]
HelpÂ Â Â |Â Â Â Contact_Us
Â 
    * [Click_for_site_home_page.]
    * Courses
      ***** Find courses by: *****
          o Topic
          o MIT_Course_Number
          o Department
      ***** Collections *****
          o Audio/Video_Lectures
          o New_Courses
          o Most_Visited_Courses
          o OCW_Scholar_Courses
          o Supplemental_Resources
      Â 
      ***** Cross-Disciplinary Topic Lists *****
          o Energy
          o Entrepreneurship
          o Environment
          o Life_Sciences
          o Transportation
      Â 
      Â 
      ***** Translated Courses *****
          o ç¹é«å­_/_Traditional_Chinese
          o ç®ä½å­_/_Simplified_Chinese
          o EspaÃ±ol_/_Spanish
          o PortuguÃªs_/_Portuguese
          o à¸ à¸²à¸©à¸²à¹à¸à¸µà¸¢à¸_/_Thai
          o ÙØ§Ø±Ø³Û_/_Persian
          o TÃ¼rkÃ§e_/_Turkish
          o (ë¹ëì¤)íêµ­_/_Korean
          o More...
    * About
          o About_MIT_OpenCourseWare
          o Site_Stats
          o OCW_Stories
          o OpenCourseWare_Consortium
          o Media_Coverage
          o Newsletter
          o Press_Releases
          o OCW's_Next_Decade
    * Donate
          o Make_a_Donation
          o Why_Donate?
          o Become_a_Course_Champion
          o Our_Supporters
          o Other_Ways_to_Contribute
          o Shop_OCW
          o Become_a_Corporate_Sponsor
    * Featured Sites
          o Highlights_for_High_School
          o edX
[Search              ] [Submit ../../common/images/button_search.png] Advanced
                                                                      Search
Home Â» Courses Â» Electrical_Engineering_and_Computer_Science Â» Introduction
to_Computer_Science_and_Programming Â» Readings
******  Readings  ******
    * Course_Home
    * Syllabus
    * Calendar
    * Readings
    * Video_Lectures
    * Assignments
    * Exams
Below, you'll find a set of online resources designed to accompany the 6.00
lectures. We've found that the readings are generally more effective when done
after the lecture, though you are of course welcome to read them at any time.
***** General References *****
A textbook for 6.00 is now available. The book and the course lectures parallel
each other, though there is more detail in the book about some topics. The book
is NOT required. We will not be referring to it in assignments or depending
upon it to cover holes in the lectures.
[mp_logo.gif] [Amazon_logo] Guttag, John. Introduction_to_Computation_and
Programming_Using_Python. MIT Press, 2013. ISBN: 9780262519632.
If you choose not to purchase this book, you will probably find it useful to
buy or borrow another book that covers Python. You might check your local
public library's resources, or search online for a free Python text, such as
How_to_Think_Like_a_Computer_Scientist or An_Introduction_to_Python.
Python_Programming
The_Python_Tutorial
***** Lectures 1-3 *****
    * Introduction: Chapter_1 of How to Think Like a Computer Scientist
    * Variables and statements: Chapter_2 of How to Think Like a Computer
      Scientist
    * Strings: Variables_and_strings_section of Python Programming (also, the
      strings_section)
    * Python variables are names: Other_languages_have_"variables", from Code
      Like A Pythonista: Idiomatic Python
    * For PS0: Input/output section of Python Programming
    * Conditionals: Chapter_4 of How to Think Like a Computer Scientist
      (through section 4.8), and the conditional_statements_section of Python
      Programming
    * Iteration: Loops_section of Python Programming
    * Tuples: Tuples_and_sequences_section of the Python Tutorial
    * More on traversing and slicing strings: Chapter_7 of How to Think Like a
      Computer Scientist
***** Lecture 4 *****
    * Functions, type conversion, and stack diagrams: Chapter_3 of How to Think
      Like a Computer Scientist
    * More about functions: Chapter_5 of How to Think Like a Computer Scientist
      (through section 5.4)
    * Recursion: Chapter_4 of How to Think Like a Computer Scientist (from
      section 4.9 on), as well as Chapter_5 of How to Think Like a Computer
      Scientist (from section 5.5 on)
***** Lecture 5 *****
    * Numbers: Floating_point_arithmetic:_issues_and_limitations from the
      Python Tutorial
    * Successive approximation: Wikipedia article on Newton's_method
***** Lecture 6 *****
    * Lists: Chapter_8 of How to Think Like a Computer Scientist
    * Dictionaries: Chapter_10 of How to Think Like a Computer Scientist
    * As a reference: the Python Tutorial section on lists_and_dictionaries
      (feel free to skip 5.1.3 and 5.1.4)
***** Lectures 7-8 *****
    * Asymptotic notation: Section 3 from the Spring 2005 6.042 lecture notes
      on OCW (PDF)
    * Order of growth: Sections_2.1_and_2.2 from Computational Modeling and
      Complexity Science
    * Binary search: Wikipedia article on binary_search (focus on the recursive
      implementation in Section 4)
***** Lectures 9-10 *****
    * Selection sort: Wikipedia article on selection_sort
    * Insertion sort: Wikipedia article on insertion_sort
    * Merge sort: Wikipedia article on merge_sort
***** Lecture 12 *****
    * The knapsack problem and dynamic programming: Introduction_to_dynamic
      programming on 20bits.com
***** Lectures 14-16 *****
Lots of reading on classes:
    * Chapter_12 of How to Think Like a Computer Scientist
    * Chapter_13 of How to Think Like a Computer Scientist
    * Chapter_14 of How to Think Like a Computer Scientist
    * Chapter_15 of How to Think Like a Computer Scientist
    * Chapter_16 of How to Think Like a Computer Scientist
***** Lectures 17-19 *****
    * Random_walks applet
    * Matplotlib/pylab reference
***** Lecture 20 *****
    * Monte Carlo method: Wikipedia article on the Monte_Carlo_method
*** Courses ***
    * Find_by_Topic
    * Find_by_Course_Number
    * Find_by_Department
    * Audio/Video_Courses
    * OCW_Scholar_Courses
    * Most_Visited_Courses
    * New_Courses
    * Translated_Courses
    * Supplemental_Resources
*** About ***
    * About_OpenCourseWare
    * Site_Stats
    * OCW_Stories
    * OCW_Consortium
    * Media_Coverage
    * Newsletter
    * Press_Releases
    * OCW's_Next_Decade
*** Donate ***
    * Make_a_Donation
    * Why_Donate?
    * Become_a_Course_Champion
    * Our_Supporters
    * Other_Ways_to_Contribute
    * Shop_OCW
    * Become_a_Corporate_Sponsor
*** Featured Sites ***
    * Highlights_for_High_School
    * edX
*** Tools ***
    * Help_&amp;_FAQs
    * Contact_Us
    * Advanced_Search
    * Site_Map
    * Privacy_&amp;_Terms_of_Use
*** About MIT OpenCourseWare ***
MIT OpenCourseWare makes the materials used in the teaching of almost all of
MIT's subjects available on the Web, free of charge. With more than 2,000
courses available, OCW is delivering on the promise of open sharing of
knowledge.
[Massachusetts_Institute_of_Technology_logo_and_name.] [OpenCourseWare
Consortium_logo.] [Creative_Commons_logo_with_terms_BY-NC-SA.]
Â© 2001â2013
Massachusetts Institute of Technology
Your use of the MIT OpenCourseWare site and materials is subject to our
Creative_Commons_License and other terms_of_use.
Â 
