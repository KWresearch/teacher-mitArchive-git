16.810 
16.810 
Engineering Design and Rapid Prototyping
Engineering Design and Rapid Prototyping

Lecture 3a
Computer Aided Design (CAD)

Instructor(s)

Prof. Olivier de Weck

January 16, 2007

Plan for Today
(cid:132) CAD Lecture (ca. 50 min)
(cid:132) CAD History, Background
(cid:132) Some theory on geometrical representation
(cid:132) FEM Lecture (ca. 50 min)
(cid:132) Motivation for Structural Analysis
(cid:132) FEM Background
(cid:132) Break
(cid:132) Start creating your own CAD models (ca. 2 hrs)
(cid:132) Work in teams of two
(cid:132) Follow “User Manual” step-by-step, sample part
(cid:132) Then start on your own team projects
(cid:132) Use hand sketch (deliverable B) as starting point

16.810

2

Course Concept
today

last time

16.810

3

Course Flow Diagram (2007)

Learning/Review

Problem statement

Design Intro / Sketch

Hand sketching

CAD Introduction

Initial CAD design

FEM/Solid Mechanics

Avionics Prototyping

FEM analysis

Optimization

CAM Manufacturing

Revise CAD design

Deliverables
(A) Requirements 
and Interface 
Document

(B) Hand Sketch

(C) Solidworks CAD 
Model, Performance 
Analysis 

(D) Manufacturing 
and Test Report 
with Cost Estimate

Fabrication, 
Assembly, Testing

+ Guest Lectures

16.810

Parts Fabrication

Assembly

Test

Final Review

(E) CDR Package

4

What is CAD?

(cid:132) Computer Aided Design (CAD)
(cid:132) A set of methods and tools to assist product 
designers in
(cid:132) Creating a geometrical representation of the artifacts they 
are designing
(cid:132) Dimensioning, Tolerancing
(cid:132) Configuration Management (Changes)
(cid:132) Archiving
(cid:132) Exchanging part and assembly information between teams, 
organizations
(cid:132) Feeding subsequent design steps 
(cid:132) Analysis (CAE)
(cid:132) Manufacturing (CAM)
(cid:132) …by means of a computer system.

16.810

5

Input Devices

Basic Elements of a CAD System
Main System
Output Devices
Computer
CAD Software
Database
Ref: menzelus.com

Keyboard
Mouse

CAD keyboard
Templates
Space Ball

Hard Disk
Network
Printer
Plotter

16.810

6

Human Designer

Brief History of CAD
(cid:132) 1957 PRONTO (Dr. Hanratty) – first commercial numerical-
control programming system
(cid:132) 1960 SKETCHPAD (MIT Lincoln Labs)
(cid:132) Early 1960’s industrial developments
(cid:132) General Motors – DAC (Design Automated by Computer)
(cid:132) McDonnell Douglas – CADD
(cid:132) Early technological developments
(cid:132) Vector-display technology
(cid:132) Light-pens for input
(cid:132) Patterns of lines rendering (first 2D only)
(cid:132) 1967 Dr. Jason R Lemon founds SDRC in Cincinnati 
(cid:132) 1979 Boeing, General Electric and NIST develop IGES 
(Initial Graphic Exchange Standards), e.g. for transfer of 
NURBS curves
(cid:132) Since 1981: numerous commercial programs
(cid:132) Source: http://mbinfo.mbdesign.net/CAD-History.htm

16.810

7

Major Benefits of CAD
(cid:132) Productivity (=Speed) Increase
(cid:132) Automation of repeated tasks
(cid:132) Doesn’t necessarily increase creativity!
(cid:132) Insert standard parts (e.g. fasteners) from database
(cid:132) Supports Changeability
(cid:132) Don’t have to redo entire drawing with each change
(cid:132) EO – “Engineering Orders”
(cid:132) Keep track of previous design iterations
(cid:132) Communication
(cid:132) With other teams/engineers, e.g. manufacturing, suppliers
(cid:132) With other applications (CAE/FEM, CAM)
(cid:132) Marketing, realistic product rendering
(cid:132) Accurate, high quality drawings
(cid:132) Caution: CAD Systems produce errors with hidden lines etc…
(cid:132) Some limited Analysis
(cid:132) Mass Properties (Mass, Inertia)
(cid:132) Collisions between parts, clearances

16.810

8

Generic CAD Process

Engineering Sketch

3D

-

=

Construct Basic 
Solids

Boolean Operations
(add, subtract, …)

Start

Settings

dim

Units, Grid (snap), …
2D

Create lines, radii, part
contours, chamfers

extrude, rotate

Add cutouts & holes

Annotations
Dimensioning

x.x

Verification

Output

CAD file

Drawing (dxf)

IGES file

9

16.810

Example CAD A/C Assembly

(cid:132) Boeing (sample) parts
(cid:132) A/C structural assembly
(cid:132) 2 decks
(cid:132) 3 frames
(cid:132) Keel
(cid:132) Loft included to show 
interface/stayout zone to 
A/C
(cid:132) All Boeing parts in Catia
file format
(cid:132) Files imported into 
SolidWorks by 
converting to IGES 
format

16.810

Loft

Nacelle

FWD Decks

Kee
l

Frames

(Loft not shown)

Aft Decks

10

Vector versus Raster Graphics
Raster Graphics

.bmp - raw data format

(cid:132) Grid of pixels
(cid:132) No relationships between 
pixels
(cid:132) Resolution, e.g. 72 dpi 
(dots per inch)
(cid:132) Each pixel has color, e.g. 
8-bit image has 256 
colors

16.810

11

Vector Graphics
.emf format
CAD Systems use
vector graphics

Most common interface file:
IGES

(cid:132) Object Oriented
(cid:132) relationship between 
pixels captured
(cid:132) describes both 
(anchor/control) points 
and lines between them
(cid:132) Easier scaling & editing

16.810

12

Major CAD Software Products

(cid:132) AutoCAD (Autodesk) (cid:198) mainly for PC
(cid:132) Pro Engineer (PTC)
(cid:132) SolidWorks (Dassault Systems)
(cid:132) CATIA (IBM/Dassault Systems)
(cid:132) Unigraphics (UGS)
(cid:132) I-DEAS (SDRC)

16.810

13

Some CAD-Theory

Geometrical representation
(1) Parametric Curve Equation vs.
Nonparametric Curve Equation

(2) Various curves (some mathematics !)
- Hermite Curve
- Bezier Curve
- B-Spline Curve
- NURBS (Nonuniform Rational B-Spline) Curves

Applications: CAD, FEM, Design Optimization

16.810

14

Curve Equations
Two types of equations for curve representation

(1) Parametric equation
x, y, z coordinates are related by a parametric variable
(2) Nonparametric equation
x, y, z coordinates are related by a function

u θ
(  or  
)

Example: Circle (2-D)
Parametric equation

x R
=

cos ,
θ

y R
=

sin

θ

(0

2 )
θ π
≤ ≤

Nonparametric equation
R
y
x
0
2
2
2
=
−
+

(Implicit nonparametric form)

y

= ±

2

R

−

2

x

(Explicit nonparametric form)

16.810

15

Curve Equations
Two types of curve equations

(1) Parametric equation

=p
y u
x u
( )]
Point on 2-D curve:  
[ ( )
=p
y u z u
x u
( )
[ ( )
( )]
Point on 3-D surface:  
u
: parametric variable and independent variable
y
z
f x y
f x
( ,
( ) : 2-D ,
) : 3-D

=

(2) Nonparametric equation

=

Which is better for CAD/CAE?

: Parametric equation

x R
=

cos ,
θ

y R
=

sin

θ

(0

2 )
θ π
≤ ≤

θΔ

2

x

+

2

y

−

2

R

=

0

y

= ±

2

R

−

2

x

It also is good for 
calculating the 
points at a certain 
interval along a 
curve

16.810

16

Parametric Equations –
Advantages over nonparametric forms

1. Parametric equations usually offer more degrees of freedom for 
controlling the shape of curves and surfaces than do nonparametric forms.
e.g. Cubic curve
au
x
Parametric curve:   
=
eu
y
                               
=
Nonparametric curve: y
=

cu d
+
gx h
+
cx d
2
+
+

bu
fu
3
+

+
+
ax

+
+
bx

2

3

3

2

2. Parametric forms readily handle infinite slopes
dy
dy du
/
dy dx
dx du
/
/
0 indicates 
dx
dx du
/

⇒

=

=

= ∞

3. Transformation can be performed directly on parametric equations
e.g. Translation in x-dir.
au
x
Parametric curve:   
=
eu
y
                               
=
y
Nonparametric curve:
=

cu d
+ +
gx h
+
b x
(
3
+

+
3
+
a x
(

bu
fu
−

+
+
)

c x
(

x
0

+

−

−

+

d

2

)

3

2

2
x
0

x
0

x
0

)

16.810

17

Hermite Curves

* Most of the equations for curves used in CAD software are of degree 3, because 
two curves of degree 3 guarantees 2nd derivative continuity at the connection point
(cid:198) The two curves appear to be one.

* Use of a higher degree causes small oscillations in curves and requires heavy 
computation.

* Simplest parametric equation of degree 3
P
x u y u z u
u
( )]
( )
[ ( )
( )
=
a
a
a
a
u
u
2
=
+
+
+
1
a

u
3
Algebraic vector coefficients

(0

u
≤ ≤

1)

:

,

3

0
a
1

,

a

0

,

2

a

3

2

u

START
u =
(
0)

END
u =
(
1)

The curve’s shape change cannot be intuitively anticipated 
from changes in these values

16.810

18

Hermite Curves
a
a
u
u
u
1)
(0
3
+
≤ ≤
0
1
2
3
Instead of algebraic coefficients, let’s use the position vectors and the 
tangent vectors at the two end points!

u
( )

P

=

2

u

+

a

+

a

a
P
P
(0)
Position vector at starting point: 
=
=
0
a
P P
(1)
Position vector at end point:       
=
=
1
′
P
P
(0)
Tangent vector at starting point:  
′=
0
′
P
P
(1)
Tangent vector at end point:       
′=
1

0
+
0
a
=
1
a
+
1

=

a
1

+

a

2

+

a

3

a
2

2

+

3a
3

Blending functions

P

u
( )

u
[1 3
= −

2

+

3

u
2

2

u
3

−

3

u
2

u

−

2

u
2

+

3

u

2

−

u

+

3

u

]

u

′P
0

0P

START
u =
(
0)

′P
1

1P

END
u =
(
1)

: Hermit curve

P
⎤
0
⎥
P
⎥
1
⎥′
P
⎥
0
⎥′
P
⎦
1

⎡
⎢
⎢
⎢
⎢
⎢
⎣

No algebraic coefficients
′
′
P P P P
Geometric coefficients
:
,
,
,
0
1
0
1
The curve’s shape change can be intuitively anticipated from 
changes in these values

16.810

19

Effect of tangent vectors on the 
curve’s shape

P
0
P
1
′
P
0
′
P
1

⎡
⎢
⎢
⎢
⎢
⎢
⎣

⎤
⎥
⎥
⎥
⎥
⎥
⎦

=

P
(0)
⎡
⎢
P
(1)
⎢
⎢
′
P
(0)
⎢
⎢
′⎣
P
(1)

⎤
⎥
⎥
⎥
⎥
⎥
⎦

: Geometric coefficient matrix

Geometric coefficient matrix 
controls the shape of the curve

1
1
⎡
⎢
1
5
⎢
13
13
⎢
⎢
13 -13
⎣

⎤
⎥
⎥
⎥
⎥
⎦

Is this what you really wanted?

1
1
5
1
5
5
5 -5

⎡
⎢
⎢
⎢
⎢
⎣

⎤
⎥
⎥
⎥
⎥
⎦

1
1
1
5
2
2
2 -2

⎡
⎢
⎢
⎢
⎢
⎣

⎤
⎥
⎥
⎥
⎥
⎦

1
1
1
5
1
1
1 -1

⎤
⎥
⎥
⎥
⎥
⎦

⎡
⎢
⎢
⎢
⎢
⎣

(1, 1)

START
u =
(
0)

16.810

u

END
(5, 1)
u =
(
1)

dy
dx

=

dy du
/
dx du
/

=

⎡
⎢
⎢
⎢
⎢
⎣

⎤
⎥
⎥
⎥
⎥
⎦
0

1 1
5 1
4 0
4 0
0
4

=

20

Bezier Curve

* In case of Hermite curve, it is not easy to predict curve shape caused by 
′
′
changes in the magnitude of the tangent vectors,0
P
P
 and 
1

* Bezier Curve can control curve shape more easily using several control 
points (Bezier 1960)

=

n i
−

,

i

u

(1

−

u

)

P

u
( )

P
i

n
n
n
!
⎛ ⎞
⎛ ⎞
n
∑
⎜ ⎟
⎜ ⎟
i
i
i n i
!(
) !
−
⎝ ⎠
⎝ ⎠
i
0
=
:iP Position vector of the i th vertex (control vertices)
Control vertices
2P
1P

where

=

n=3

Control polygon

* Number of vertices: n+1
(No of control points)

* Number of segments: n

0P

3P
* The order of Bezier curve is determined by the number of control points.
n control points
Order of Bezier curve: n-1

* Order of the curve: n

16.810

21

Bezier Curve

Properties
- The curve passes through the first and last vertex of the polygon.
-The tangent vector at the starting point of the curve has the same 
direction as the first segment of the polygon.
- The nth derivative of the curve at the starting or ending point is 
determined by the first or last (n+1) vertices.

16.810

22

Two Drawbacks of Bezier curve

(1) For complicated shape representation, higher degree Bezier curves are
needed. 
(cid:198) Oscillation in curve occurs, and computational burden increases.

(2) Any one control point of the curve affects the shape of the entire curve.
(cid:198) Modifying the shape of a curve locally is difficult.
(Global modification property)

Desirable properties :
1. Ability to represent complicated shape with low order of the curve
2. Ability to modify a curve’s shape locally

B-spline curve!

16.810

23

B-Spline Curve

P

u
( )

=

n
∑
i
0
=

N u
( )
i k
,

P
i

* Developed by  Cox and Boor (1972)

where
P
i
: Position vector of the  th control point
i
u t N
u
t
u N
(
)
( )
(
)
−
−
i
i k
1
,
−
t
t
t
−
−
i
i k
1
+ −
u
t
t
≤ ≤
i
i
1
+
otherwise

N u
( )
i k
,

N u
( )
i
,1

1
0

i
1,
+
t

i

1
+

=

i k
+

+

⎧
= ⎨
⎩

u
( )

t

i

i
k
0
0
≤ <
⎧
⎪=
k
n
i
k
i
1
≤ ≤
− +
⎨
⎪ − +
n i
n k
n k
2
< ≤ +
⎩
(Nonperiodic knots)

k

1
−

i k
+

k: order of the B-spline curve 
n+1: number of control points

The order of curve is independent of the number 
of control points!

16.810

24

B-Spline Curve

Example

Order (k) = 3 (first derivatives are continuous)

No of control points (n+1) = 6

Advantages
(1) The order of the curve is independent of the number of control points (contrary to 
Bezier curves)
- User can select the curve’s order and number of control points separately.
- It can represent very complicated shape with low order

(2) Modifying the shape of a curve locally is easy. (contrary to Bezier curve) 
- Each curve segment is affected by k (order) control points. (local modification property)

16.810

25

NURBS (Nonuniform Rational B-Spline) Curve

h N u
( )
i
i k
,

P
h N u
( )
i
i
i k
,

n
∑
i
0
=
n
∑
i
0
=
i
: Position vector of the  th control point
: Homogeneous coordinate

B-spline :

⎛
⎜
⎝

P

u
( )

=

P
i
h
i

P

u
( )

=

n
∑
i
0
=

P
i

N u
( )
i k
,

⎞
⎟
⎠

* If all the homogeneous coordinates (hi) are 1, the denominator becomes 1
n
∑
i
h N u
h
( ) 1.
0
, then 
If 
= ∀
=
i
i
i k
,
i
0
=

* B-spline curve is a special case of NURBS.

* Bezier curve is a special case of B-spline curve.

16.810

26

Advantages of NURBS Curve over B-Spline Curve

(1) More versatile modification capacity
- Homogeneous coordinate hi, which B-spline does not have, can change.
- Increasing hi of a control point (cid:198) Drawing the curve toward the control point.

(2) NURBS can exactly represent the conic curves - circles, ellipses, parabolas, and
hyperbolas  (B-spline can only approximate these curves)

(3) Curves, such as conic curves, Bezier curves, and B-spline curves can be 
converted to their corresponding NURBS representations.

16.810

27

Summary

(1) Parametric Equation vs. Nonparametric Equation

(2) Various curves
- Hermite Curve
- Bezier Curve
- B-Spline Curve
- NURBS (Nonuniform Rational B-Spline) Curve
(3) Surfaces
- Bilinear surface
- Bicubic surface
- Bezier surface
- B-Spline surface
- NURBS surface

16.810

28

SolidWorks

(cid:132) SolidWorks
(cid:132) Most popular CAD system in education
(cid:132) Will be used for this project
(cid:132) Do Self-Introduction via 16.810 User 
Manual
(cid:132) See also
(cid:132) http://www.solidworks.com   (Student Section)

16.810

29

